2025-05-19 12:11:06.406 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 12:11:06.673 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 12:11:06.681 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 12:11:06.683 +05:30 [INF] Hosting environment: Development
2025-05-19 12:11:06.684 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 12:15:38.646 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 12:15:38.721 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:38.731 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 85.7828ms
2025-05-19 12:15:38.741 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 12:15:38.819 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:38.824 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 12:15:38.843 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 12:15:39.096 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:39.118 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 267.4978ms
2025-05-19 12:15:39.121 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 12:15:39.122 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 380.9557ms
2025-05-19 12:15:49.484 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:15:49.509 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:49.511 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 27.1418ms
2025-05-19 12:15:49.517 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:15:49.523 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:49.525 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:49.533 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:15:49.557 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:15:49.584 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:15:49.586 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:15:49.593 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:15:49.595 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:15:49.596 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:15:49.598 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 12:15:49.605 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 12:15:49.621 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:49.624 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:49.626 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:49.627 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:49.628 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:49.631 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:49.632 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:49.634 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:49.636 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:49.638 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:49.661 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:49.673 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:15:49.676 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:49.679 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:15:49.686 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 147.612ms
2025-05-19 12:15:49.689 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:49.692 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 175.4011ms
2025-05-19 12:15:49.698 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - null null
2025-05-19 12:15:49.700 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:49.702 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 204 null null 4.4634ms
2025-05-19 12:15:49.708 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:15:49.712 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:49.713 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:49.720 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:15:49.745 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:15:49.748 +05:30 [INF] Target Amount: 10000
2025-05-19 12:15:49.749 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:15:49.754 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:15:49.766 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:15:49.772 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:15:49.774 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:49.775 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:15:49.776 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:15:49.778 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:15:49.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:15:49.781 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:15:49.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:15:49.785 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:15:49.786 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:15:49.788 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:15:49.789 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:15:49.791 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:15:49.792 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:15:49.793 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:15:49.794 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:15:49.796 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:15:49.797 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:15:49.800 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:15:49.801 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:15:49.804 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:15:49.805 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:15:49.806 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:15:49.808 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:15:49.810 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:15:49.811 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:15:49.813 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:15:49.825 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:49.842 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:15:49.850 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:15:49.865 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:15:49.875 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:15:49.884 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:15:49.887 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:15:49.891 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:15:49.892 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:15:49.916 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:15:49.922 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:15:49.931 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:49.935 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 211.2756ms
2025-05-19 12:15:49.939 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:49.941 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 232.9576ms
2025-05-19 12:15:50.003 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:15:50.010 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:50.010 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:50.012 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:15:50.016 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:15:50.019 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:15:50.020 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:15:50.022 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:15:50.023 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:15:50.024 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:15:50.025 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 12:15:50.025 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 12:15:50.027 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:50.029 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:50.031 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:50.032 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:50.033 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:50.034 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:50.036 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:50.037 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:50.038 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:50.039 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:50.040 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:50.043 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:15:50.056 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:50.066 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:15:50.078 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 63.1626ms
2025-05-19 12:15:50.092 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:50.098 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 95.2896ms
2025-05-19 12:15:50.115 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:15:50.120 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:50.122 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:50.124 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:15:50.127 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:15:50.129 +05:30 [INF] Target Amount: 10000
2025-05-19 12:15:50.130 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:15:50.131 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:15:50.133 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:15:50.136 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:15:50.138 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:50.140 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:15:50.141 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:15:50.144 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:15:50.146 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:15:50.148 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:15:50.150 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:15:50.153 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:15:50.154 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:15:50.156 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:15:50.157 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:15:50.159 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:15:50.161 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:15:50.163 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:15:50.165 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:15:50.168 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:15:50.170 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:15:50.173 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:15:50.174 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:15:50.175 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:15:50.176 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:15:50.178 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:15:50.179 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:15:50.182 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:15:50.184 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:15:50.187 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:15:50.189 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:50.191 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:15:50.193 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:15:50.197 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:15:50.199 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:15:50.202 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:15:50.204 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:15:50.207 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:15:50.207 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:15:50.208 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:15:50.214 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:50.216 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:15:50.217 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:50.222 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:15:50.223 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:15:50.231 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:50.236 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:15:50.236 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 109.7574ms
2025-05-19 12:15:50.239 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:15:50.240 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:50.241 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:15:50.242 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 127.2895ms
2025-05-19 12:15:50.244 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:15:50.248 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:15:50.249 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:15:50.250 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 12:15:50.252 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 12:15:50.255 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:50.256 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:50.257 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:50.258 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:50.259 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:50.260 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:50.261 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:50.262 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:50.263 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:50.264 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:50.266 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:50.270 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:15:50.272 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:50.273 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:15:50.275 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 40.9324ms
2025-05-19 12:15:50.276 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:50.277 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 70.0704ms
2025-05-19 12:15:50.282 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:15:50.287 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:50.288 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:50.290 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:15:50.294 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:15:50.296 +05:30 [INF] Target Amount: 10000
2025-05-19 12:15:50.297 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:15:50.298 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:15:50.301 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:15:50.304 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:15:50.305 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:50.306 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:15:50.307 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:15:50.309 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:15:50.310 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:15:50.312 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:15:50.313 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:15:50.316 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:15:50.317 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:15:50.319 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:15:50.320 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:15:50.322 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:15:50.323 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:15:50.325 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:15:50.326 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:15:50.328 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:15:50.329 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:15:50.331 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:15:50.342 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:15:50.352 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:15:50.353 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:15:50.356 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:15:50.357 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:15:50.359 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:15:50.360 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:15:50.364 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:15:50.366 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:50.368 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:15:50.370 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:15:50.372 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:15:50.373 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:15:50.375 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:15:50.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:15:50.379 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:15:50.380 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:15:50.382 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:15:50.386 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:15:50.391 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:50.393 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 100.4836ms
2025-05-19 12:15:50.395 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:50.397 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 115.0026ms
2025-05-19 12:15:51.382 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:15:51.391 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:51.393 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:51.394 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:15:51.398 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:15:51.400 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:15:51.401 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:15:51.403 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:15:51.404 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:15:51.405 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:15:51.406 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 12:15:51.407 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 12:15:51.409 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:51.411 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:51.412 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:51.414 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:51.416 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:51.417 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:51.419 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:51.421 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:51.423 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:51.424 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:51.425 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:51.428 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:15:51.430 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:51.431 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:15:51.433 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 35.0741ms
2025-05-19 12:15:51.435 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:51.436 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 54.1887ms
2025-05-19 12:15:51.441 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:15:51.445 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:51.446 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:51.448 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:15:51.450 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:15:51.452 +05:30 [INF] Target Amount: 10000
2025-05-19 12:15:51.454 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:15:51.455 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:15:51.457 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:15:51.459 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:15:51.460 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:51.462 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:15:51.463 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:15:51.465 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:15:51.466 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:15:51.468 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:15:51.470 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:15:51.471 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:15:51.472 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:15:51.474 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:15:51.475 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:15:51.476 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:15:51.477 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:15:51.479 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:15:51.480 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:15:51.481 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:15:51.482 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:15:51.485 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:15:51.487 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:15:51.489 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:15:51.490 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:15:51.492 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:15:51.493 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:15:51.494 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:15:51.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:15:51.497 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:15:51.498 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:51.501 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:15:51.502 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:15:51.506 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:15:51.506 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:15:51.508 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:15:51.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:15:51.510 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:15:51.511 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:15:51.513 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:15:51.540 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:15:51.555 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:51.558 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 107.6858ms
2025-05-19 12:15:51.560 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:51.562 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 120.7925ms
2025-05-19 12:15:52.338 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:15:52.344 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:52.345 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:52.346 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:15:52.348 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:15:52.350 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:15:52.351 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:15:52.352 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:15:52.353 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:15:52.354 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:15:52.355 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 12:15:52.356 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 12:15:52.359 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:52.361 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:52.362 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:52.364 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:52.366 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:52.367 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:52.379 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:52.392 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:52.395 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:52.410 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:52.422 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:52.446 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:15:52.449 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:52.457 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:15:52.460 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 112.3125ms
2025-05-19 12:15:52.463 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:52.465 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 127.1149ms
2025-05-19 12:15:52.474 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:15:52.478 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:52.479 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:52.486 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:15:52.490 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:15:52.491 +05:30 [INF] Target Amount: 10000
2025-05-19 12:15:52.492 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:15:52.494 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:15:52.497 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:15:52.499 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:15:52.500 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:52.504 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:15:52.506 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:15:52.508 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:15:52.510 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:15:52.513 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:15:52.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:15:52.516 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:15:52.517 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:15:52.520 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:15:52.521 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:15:52.523 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:15:52.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:15:52.526 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:15:52.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:15:52.531 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:15:52.532 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:15:52.534 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:15:52.536 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:15:52.539 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:15:52.540 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:15:52.542 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:15:52.544 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:15:52.546 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:15:52.547 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:15:52.550 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:15:52.551 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:52.554 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:15:52.555 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:15:52.557 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:15:52.558 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:15:52.559 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:15:52.560 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:15:52.562 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:15:52.564 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:15:52.566 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:15:52.569 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:15:52.574 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:52.576 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 86.5479ms
2025-05-19 12:15:52.577 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:52.579 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 104.4291ms
2025-05-19 12:15:53.551 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:15:53.558 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:53.561 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:53.564 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:15:53.568 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:15:53.571 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:15:53.573 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:15:53.574 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:15:53.575 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:15:53.576 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:15:53.577 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 12:15:53.578 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 12:15:53.580 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:53.581 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:53.582 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:53.585 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:53.587 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:53.590 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:53.591 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:53.592 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:53.593 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:53.594 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:53.596 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:53.598 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:15:53.600 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:53.602 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:15:53.605 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 37.1106ms
2025-05-19 12:15:53.606 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:53.608 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 57.0078ms
2025-05-19 12:15:53.612 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:15:53.615 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:53.616 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:53.617 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:15:53.621 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:15:53.623 +05:30 [INF] Target Amount: 10000
2025-05-19 12:15:53.624 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:15:53.625 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:15:53.626 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:15:53.628 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:15:53.630 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:53.632 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:15:53.634 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:15:53.636 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:15:53.638 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:15:53.640 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:15:53.641 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:15:53.642 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:15:53.643 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:15:53.645 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:15:53.646 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:15:53.648 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:15:53.649 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:15:53.650 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:15:53.651 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:15:53.668 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:15:53.672 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:15:53.681 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:15:53.683 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:15:53.689 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:15:53.693 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:15:53.696 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:15:53.699 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:15:53.702 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:15:53.703 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:15:53.706 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:15:53.707 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:53.708 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:15:53.709 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:15:53.711 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:15:53.712 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:15:53.714 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:15:53.715 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:15:53.717 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:15:53.719 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:15:53.722 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:15:53.726 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:15:53.731 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:53.733 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 112.917ms
2025-05-19 12:15:53.736 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:53.738 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 125.7983ms
2025-05-19 12:15:59.526 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:15:59.534 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:59.535 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.481ms
2025-05-19 12:15:59.539 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:15:59.543 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:59.544 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:59.545 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:15:59.548 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:15:59.550 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:15:59.552 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:15:59.553 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:15:59.555 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:15:59.557 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:15:59.559 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:15:59.560 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:15:59.562 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:59.563 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:59.565 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:59.568 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:59.570 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:59.571 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:15:59.574 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:15:59.576 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:15:59.578 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:15:59.579 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:15:59.580 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:59.583 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:15:59.585 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:15:59.588 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:15:59.590 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 41.9822ms
2025-05-19 12:15:59.592 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:15:59.594 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 55.2326ms
2025-05-19 12:15:59.600 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - null null
2025-05-19 12:15:59.604 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:59.606 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 204 null null 5.8475ms
2025-05-19 12:15:59.613 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:15:59.618 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:15:59.619 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:59.622 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:15:59.627 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:15:59.629 +05:30 [INF] Target Amount: 10000
2025-05-19 12:15:59.631 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:15:59.633 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:15:59.636 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:15:59.640 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:15:59.642 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:59.643 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:15:59.644 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:15:59.647 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:15:59.648 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:15:59.650 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:15:59.651 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:15:59.655 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:15:59.657 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:15:59.659 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:15:59.661 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:15:59.664 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:15:59.665 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:15:59.667 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:15:59.669 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:15:59.672 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:15:59.673 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:15:59.676 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:15:59.678 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:15:59.681 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:15:59.682 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:15:59.685 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:15:59.687 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:15:59.690 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:15:59.692 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:15:59.694 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:15:59.695 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:15:59.696 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:15:59.697 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:15:59.699 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:15:59.701 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:15:59.704 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:15:59.705 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:15:59.708 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:15:59.710 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:15:59.713 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:15:59.718 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:15:59.726 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:15:59.729 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 101.8362ms
2025-05-19 12:15:59.730 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:15:59.734 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 120.5318ms
2025-05-19 12:16:16.880 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:16:16.886 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:16.887 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.9852ms
2025-05-19 12:16:16.891 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:16:16.896 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:16.898 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:16.899 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:16:16.903 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:16:16.905 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:16:16.905 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:16:16.906 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:16:16.907 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:16:16.908 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:16:16.911 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:16:16.912 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:16:16.914 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:16:16.917 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:16:16.919 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:16:16.920 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:16:16.921 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:16:16.924 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:16:16.926 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:16:16.928 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:16:16.929 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:16:16.930 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:16:16.931 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:16:16.934 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:16:16.935 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:16:16.936 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:16:16.938 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 34.5943ms
2025-05-19 12:16:16.940 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:16.941 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 49.8734ms
2025-05-19 12:16:16.946 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - null null
2025-05-19 12:16:16.950 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:16.951 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 204 null null 4.8316ms
2025-05-19 12:16:16.957 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:16:16.961 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:16.963 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:16.964 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:16:16.967 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:16:16.968 +05:30 [INF] Target Amount: 10000
2025-05-19 12:16:16.970 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:16:16.971 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:16:16.973 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:16:16.975 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:16:16.976 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:16:16.979 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:16:16.980 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:16:16.983 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:16:16.985 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:16:16.986 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:16:16.987 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:16:16.990 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:16:16.991 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:16:16.993 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:16:16.994 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:16:16.996 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:16:16.997 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:16:16.999 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:16:17.000 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:16:17.002 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:16:17.003 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:16:17.005 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:16:17.006 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:16:17.007 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:16:17.009 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:16:17.013 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:16:17.014 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:16:17.016 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:16:17.017 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:16:17.019 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:16:17.020 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:16:17.021 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:16:17.022 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:16:17.045 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:16:17.051 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:16:17.056 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:16:17.058 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:16:17.063 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:16:17.064 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:16:17.066 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:16:17.073 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:16:17.082 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:17.083 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 117.0488ms
2025-05-19 12:16:17.085 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:17.086 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 129.1025ms
2025-05-19 12:16:17.703 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:16:17.714 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:17.715 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:17.717 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:16:17.720 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:16:17.722 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:16:17.722 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:16:17.723 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:16:17.724 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:16:17.725 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:16:17.726 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:16:17.727 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:16:17.729 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:16:17.730 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:16:17.731 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:16:17.732 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:16:17.734 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:16:17.735 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 12:16:17.736 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 12:16:17.737 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:16:17.738 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 12:16:17.739 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:16:17.740 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:16:17.743 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:16:17.745 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:16:17.747 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:16:17.748 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 28.0592ms
2025-05-19 12:16:17.749 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:17.750 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 46.9209ms
2025-05-19 12:16:17.754 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 508
2025-05-19 12:16:17.757 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:17.758 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:17.759 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:16:17.763 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:16:17.764 +05:30 [INF] Target Amount: 10000
2025-05-19 12:16:17.765 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:16:17.766 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:16:17.768 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:16:17.770 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-19 12:16:17.772 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:16:17.774 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-19 12:16:17.775 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:16:17.777 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:16:17.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:16:17.781 +05:30 [INF] Calculated investment amount: 54.52.
2025-05-19 12:16:17.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:16:17.784 +05:30 [INF] Calculated investment amount: 33.68.
2025-05-19 12:16:17.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:16:17.787 +05:30 [INF] Calculated investment amount: 39.2.
2025-05-19 12:16:17.788 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:16:17.790 +05:30 [INF] Calculated investment amount: 19.67.
2025-05-19 12:16:17.791 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:16:17.792 +05:30 [INF] Calculated investment amount: 20.09.
2025-05-19 12:16:17.794 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:16:17.797 +05:30 [INF] Calculated investment amount: 45.3.
2025-05-19 12:16:17.797 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:16:17.799 +05:30 [INF] Calculated investment amount: 43.56.
2025-05-19 12:16:17.800 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:16:17.802 +05:30 [INF] Calculated investment amount: 16.45.
2025-05-19 12:16:17.804 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:16:17.805 +05:30 [INF] Calculated investment amount: 16.11.
2025-05-19 12:16:17.806 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:16:17.808 +05:30 [INF] Calculated investment amount: 9.67.
2025-05-19 12:16:17.809 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:16:17.811 +05:30 [INF] Calculated investment amount: 12.
2025-05-19 12:16:17.812 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:16:17.814 +05:30 [INF] Calculated investment amount: 14.05.
2025-05-19 12:16:17.815 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:16:17.816 +05:30 [INF] Calculated investment amount: 11.62.
2025-05-19 12:16:17.817 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:16:17.818 +05:30 [INF] Calculated investment amount: 19.81.
2025-05-19 12:16:17.819 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:16:17.821 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-19 12:16:17.822 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:16:17.823 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:16:17.837 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:16:17.854 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:17.858 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 95.5766ms
2025-05-19 12:16:17.860 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:17.863 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 108.9907ms
2025-05-19 12:16:38.757 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:16:38.763 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:38.764 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.9966ms
2025-05-19 12:16:38.768 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:16:38.773 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:38.774 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:38.775 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:16:38.777 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:16:38.779 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:16:38.780 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 12:16:38.783 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 12:16:38.784 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:16:38.786 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:16:38.787 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:16:38.789 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:16:38.792 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 12:16:38.793 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 12:16:38.795 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 12:16:38.797 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:16:38.800 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 12:16:38.802 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 12:16:38.805 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 12:16:38.807 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 12:16:38.808 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:16:38.809 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 12:16:38.811 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 12:16:38.816 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:16:38.817 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 12:16:38.820 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:16:38.822 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 44.2795ms
2025-05-19 12:16:38.823 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:38.825 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 56.344ms
2025-05-19 12:16:38.831 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-19 12:16:38.834 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:38.835 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 4.2304ms
2025-05-19 12:16:38.840 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 477
2025-05-19 12:16:38.843 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:38.845 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:38.846 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:16:38.849 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-19 12:16:38.851 +05:30 [INF] Target Amount: 10000
2025-05-19 12:16:38.852 +05:30 [INF] Investment Horizon: 23
2025-05-19 12:16:38.853 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:16:38.855 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-19 12:16:38.858 +05:30 [INF] Calculated investment amount: 139.6.
2025-05-19 12:16:38.860 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 12:16:38.861 +05:30 [INF] Calculated investment amount: 151.91.
2025-05-19 12:16:38.862 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-19 12:16:38.864 +05:30 [INF] Calculated investment amount: 63.74.
2025-05-19 12:16:38.865 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-19 12:16:38.868 +05:30 [INF] Calculated investment amount: 76.45.
2025-05-19 12:16:38.869 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-19 12:16:38.873 +05:30 [INF] Calculated investment amount: 45.48.
2025-05-19 12:16:38.874 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-19 12:16:38.876 +05:30 [INF] Calculated investment amount: 50.47.
2025-05-19 12:16:38.877 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-19 12:16:38.879 +05:30 [INF] Calculated investment amount: 124.69.
2025-05-19 12:16:38.879 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-19 12:16:38.882 +05:30 [INF] Calculated investment amount: 124.84.
2025-05-19 12:16:38.884 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-19 12:16:38.886 +05:30 [INF] Calculated investment amount: 107.69.
2025-05-19 12:16:38.887 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-19 12:16:38.889 +05:30 [INF] Calculated investment amount: 105.5.
2025-05-19 12:16:38.891 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-19 12:16:38.893 +05:30 [INF] Calculated investment amount: 107.41.
2025-05-19 12:16:38.894 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-19 12:16:38.895 +05:30 [INF] Calculated investment amount: 106.74.
2025-05-19 12:16:38.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-19 12:16:38.899 +05:30 [INF] Calculated investment amount: 39.28.
2025-05-19 12:16:38.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-19 12:16:38.904 +05:30 [INF] Calculated investment amount: 43.91.
2025-05-19 12:16:38.906 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 12:16:38.908 +05:30 [INF] Calculated investment amount: 18.76.
2025-05-19 12:16:38.909 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-19 12:16:38.910 +05:30 [INF] Calculated investment amount: 16.57.
2025-05-19 12:16:38.911 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-19 12:16:38.914 +05:30 [INF] Calculated investment amount: 25.27.
2025-05-19 12:16:38.916 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-19 12:16:38.919 +05:30 [INF] Calculated investment amount: 28.48.
2025-05-19 12:16:38.920 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:16:38.923 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:16:38.926 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:16:38.933 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:38.935 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 86.4791ms
2025-05-19 12:16:38.937 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:38.938 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 98.3625ms
2025-05-19 12:16:40.421 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:16:40.427 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:40.428 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:40.429 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:16:40.434 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:16:40.436 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:16:40.438 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 12:16:40.439 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 12:16:40.440 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:16:40.441 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:16:40.442 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:16:40.443 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:16:40.445 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 12:16:40.447 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 12:16:40.450 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 12:16:40.452 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:16:40.453 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 12:16:40.454 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 12:16:40.455 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 12:16:40.456 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 12:16:40.457 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:16:40.458 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 12:16:40.459 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 12:16:40.463 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:16:40.465 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 12:16:40.467 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:16:40.469 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 35.806ms
2025-05-19 12:16:40.470 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:40.471 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 50.2044ms
2025-05-19 12:16:40.476 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 477
2025-05-19 12:16:40.480 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:40.481 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:40.483 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:16:40.486 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-19 12:16:40.488 +05:30 [INF] Target Amount: 10000
2025-05-19 12:16:40.489 +05:30 [INF] Investment Horizon: 23
2025-05-19 12:16:40.490 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:16:40.492 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-19 12:16:40.494 +05:30 [INF] Calculated investment amount: 139.6.
2025-05-19 12:16:40.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 12:16:40.497 +05:30 [INF] Calculated investment amount: 151.91.
2025-05-19 12:16:40.498 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-19 12:16:40.500 +05:30 [INF] Calculated investment amount: 63.74.
2025-05-19 12:16:40.501 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-19 12:16:40.503 +05:30 [INF] Calculated investment amount: 76.45.
2025-05-19 12:16:40.504 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-19 12:16:40.506 +05:30 [INF] Calculated investment amount: 45.48.
2025-05-19 12:16:40.507 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-19 12:16:40.508 +05:30 [INF] Calculated investment amount: 50.47.
2025-05-19 12:16:40.510 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-19 12:16:40.512 +05:30 [INF] Calculated investment amount: 124.69.
2025-05-19 12:16:40.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-19 12:16:40.516 +05:30 [INF] Calculated investment amount: 124.84.
2025-05-19 12:16:40.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-19 12:16:40.520 +05:30 [INF] Calculated investment amount: 107.69.
2025-05-19 12:16:40.521 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-19 12:16:40.523 +05:30 [INF] Calculated investment amount: 105.5.
2025-05-19 12:16:40.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-19 12:16:40.526 +05:30 [INF] Calculated investment amount: 107.41.
2025-05-19 12:16:40.527 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-19 12:16:40.529 +05:30 [INF] Calculated investment amount: 106.74.
2025-05-19 12:16:40.530 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-19 12:16:40.531 +05:30 [INF] Calculated investment amount: 39.28.
2025-05-19 12:16:40.532 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-19 12:16:40.535 +05:30 [INF] Calculated investment amount: 43.91.
2025-05-19 12:16:40.536 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 12:16:40.537 +05:30 [INF] Calculated investment amount: 18.76.
2025-05-19 12:16:40.538 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-19 12:16:40.540 +05:30 [INF] Calculated investment amount: 16.57.
2025-05-19 12:16:40.541 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-19 12:16:40.543 +05:30 [INF] Calculated investment amount: 25.27.
2025-05-19 12:16:40.544 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-19 12:16:40.546 +05:30 [INF] Calculated investment amount: 28.48.
2025-05-19 12:16:40.547 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:16:40.549 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:16:40.554 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:16:40.560 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:40.562 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 75.731ms
2025-05-19 12:16:40.563 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:40.565 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 89.4311ms
2025-05-19 12:16:45.078 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:16:45.090 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:45.093 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 15.5014ms
2025-05-19 12:16:45.102 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 12:16:45.106 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:45.108 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:45.109 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:16:45.112 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:16:45.113 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:16:45.115 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 12:16:45.117 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 12:16:45.118 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:16:45.120 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:16:45.122 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:16:45.123 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:16:45.125 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 12:16:45.127 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 12:16:45.128 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 12:16:45.129 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:16:45.131 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 12:16:45.133 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 12:16:45.135 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 12:16:45.137 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 12:16:45.139 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:16:45.141 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 12:16:45.142 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 12:16:45.146 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:16:45.148 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 12:16:45.162 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:16:45.170 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.741ms
2025-05-19 12:16:45.175 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:45.177 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 75.1228ms
2025-05-19 12:16:45.186 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=19 - null null
2025-05-19 12:16:45.190 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:45.191 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=19 - 204 null null 4.7165ms
2025-05-19 12:16:45.194 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=19 - application/json 477
2025-05-19 12:16:45.198 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:45.199 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:45.200 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:16:45.206 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-19 12:16:45.208 +05:30 [INF] Target Amount: 10000
2025-05-19 12:16:45.209 +05:30 [INF] Investment Horizon: 19
2025-05-19 12:16:45.211 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:16:45.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 19.
2025-05-19 12:16:45.215 +05:30 [INF] Calculated investment amount: 204.38.
2025-05-19 12:16:45.216 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 19.
2025-05-19 12:16:45.222 +05:30 [INF] Calculated investment amount: 216.01.
2025-05-19 12:16:45.223 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 19.
2025-05-19 12:16:45.226 +05:30 [INF] Calculated investment amount: 102.1.
2025-05-19 12:16:45.227 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 19.
2025-05-19 12:16:45.230 +05:30 [INF] Calculated investment amount: 116.06.
2025-05-19 12:16:45.231 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 19.
2025-05-19 12:16:45.236 +05:30 [INF] Calculated investment amount: 76.81.
2025-05-19 12:16:45.238 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 19.
2025-05-19 12:16:45.240 +05:30 [INF] Calculated investment amount: 82.88.
2025-05-19 12:16:45.241 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 19.
2025-05-19 12:16:45.243 +05:30 [INF] Calculated investment amount: 151.57.
2025-05-19 12:16:45.244 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 19.
2025-05-19 12:16:45.246 +05:30 [INF] Calculated investment amount: 150.59.
2025-05-19 12:16:45.247 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 19.
2025-05-19 12:16:45.250 +05:30 [INF] Calculated investment amount: 140.11.
2025-05-19 12:16:45.252 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 19.
2025-05-19 12:16:45.254 +05:30 [INF] Calculated investment amount: 138.81.
2025-05-19 12:16:45.255 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 19.
2025-05-19 12:16:45.257 +05:30 [INF] Calculated investment amount: 133.06.
2025-05-19 12:16:45.258 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 19.
2025-05-19 12:16:45.260 +05:30 [INF] Calculated investment amount: 133.24.
2025-05-19 12:16:45.261 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 19.
2025-05-19 12:16:45.262 +05:30 [INF] Calculated investment amount: 53.04.
2025-05-19 12:16:45.263 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 19.
2025-05-19 12:16:45.266 +05:30 [INF] Calculated investment amount: 56.07.
2025-05-19 12:16:45.267 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 19.
2025-05-19 12:16:45.269 +05:30 [INF] Calculated investment amount: 26.67.
2025-05-19 12:16:45.270 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 19.
2025-05-19 12:16:45.272 +05:30 [INF] Calculated investment amount: 24.53.
2025-05-19 12:16:45.273 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 19.
2025-05-19 12:16:45.274 +05:30 [INF] Calculated investment amount: 35.02.
2025-05-19 12:16:45.275 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 19.
2025-05-19 12:16:45.277 +05:30 [INF] Calculated investment amount: 37.33.
2025-05-19 12:16:45.278 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:16:45.281 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:16:45.293 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:16:45.312 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:45.315 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 109.3015ms
2025-05-19 12:16:45.320 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:45.322 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=19 - 500 null application/json; charset=utf-8 127.9029ms
2025-05-19 12:16:49.893 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-19 12:16:49.900 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:49.901 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:49.903 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:16:49.907 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:16:49.909 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:16:49.909 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 12:16:49.910 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 12:16:49.911 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 12:16:49.912 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 12:16:49.913 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-19 12:16:49.914 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-19 12:16:49.918 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-19 12:16:49.920 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-19 12:16:49.922 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":7,"Energy":5.25,"Agriculture":5.25}
2025-05-19 12:16:49.924 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":2.25,"Savings Acc":2.25,"T. Bill":3}
2025-05-19 12:16:49.925 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.69,"Residential Prop":3.12,"Commercial Prop":4.69}
2025-05-19 12:16:49.926 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-19 12:16:49.927 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-19 12:16:49.928 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":7,"Energy":5.25,"Agriculture":5.25}
2025-05-19 12:16:49.930 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":2.25,"Savings Acc":2.25,"T. Bill":3}
2025-05-19 12:16:49.931 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.69,"Residential Prop":3.12,"Commercial Prop":4.69}
2025-05-19 12:16:49.933 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":17.5,"subAssets":{"Precious Metals":7,"Energy":5.25,"Agriculture":5.25}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":2.25,"Savings Acc":2.25,"T. Bill":3}},"realEstate":{"percentage":12.5,"subAssets":{"REITs":4.69,"Residential Prop":3.12,"Commercial Prop":4.69}}}
2025-05-19 12:16:49.937 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:16:49.939 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":17.5,"subAssets":{"Precious Metals":7,"Energy":5.25,"Agriculture":5.25}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":2.25,"Savings Acc":2.25,"T. Bill":3}},"realEstate":{"percentage":12.5,"subAssets":{"REITs":4.69,"Residential Prop":3.12,"Commercial Prop":4.69}}}
2025-05-19 12:16:49.941 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:16:49.942 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 35.7068ms
2025-05-19 12:16:49.944 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:16:49.945 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 52.2816ms
2025-05-19 12:16:49.950 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=19 - application/json 498
2025-05-19 12:16:49.952 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:49.954 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:49.956 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:16:49.960 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"Percentage":32.5,"SubAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"Percentage":17.5,"SubAssets":{"Precious Metals":7,"Energy":5.25,"Agriculture":5.25}},"cash":{"Percentage":7.5,"SubAssets":{"Liquid Mutual Funds":2.25,"Savings Acc":2.25,"T. Bill":3}},"realEstate":{"Percentage":12.5,"SubAssets":{"REITs":4.69,"Residential Prop":3.12,"Commercial Prop":4.69}}}}
2025-05-19 12:16:49.961 +05:30 [INF] Target Amount: 10000
2025-05-19 12:16:49.962 +05:30 [INF] Investment Horizon: 19
2025-05-19 12:16:49.963 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:16:49.965 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.25, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 19.
2025-05-19 12:16:49.968 +05:30 [INF] Calculated investment amount: 102.19.
2025-05-19 12:16:49.970 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.75, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 19.
2025-05-19 12:16:49.973 +05:30 [INF] Calculated investment amount: 108.
2025-05-19 12:16:49.975 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 19.
2025-05-19 12:16:49.978 +05:30 [INF] Calculated investment amount: 51.1.
2025-05-19 12:16:49.981 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 19.
2025-05-19 12:16:49.983 +05:30 [INF] Calculated investment amount: 57.96.
2025-05-19 12:16:49.983 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.63, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 19.
2025-05-19 12:16:49.985 +05:30 [INF] Calculated investment amount: 38.41.
2025-05-19 12:16:49.987 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.37, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 19.
2025-05-19 12:16:49.990 +05:30 [INF] Calculated investment amount: 41.44.
2025-05-19 12:16:49.991 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.97, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 19.
2025-05-19 12:16:49.992 +05:30 [INF] Calculated investment amount: 196.68.
2025-05-19 12:16:49.993 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.78, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 19.
2025-05-19 12:16:49.996 +05:30 [INF] Calculated investment amount: 196.14.
2025-05-19 12:16:49.997 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.36, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 19.
2025-05-19 12:16:50.000 +05:30 [INF] Calculated investment amount: 182.22.
2025-05-19 12:16:50.001 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.64, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 19.
2025-05-19 12:16:50.004 +05:30 [INF] Calculated investment amount: 180.37.
2025-05-19 12:16:50.005 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 19.
2025-05-19 12:16:50.007 +05:30 [INF] Calculated investment amount: 173.2.
2025-05-19 12:16:50.009 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.96, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 19.
2025-05-19 12:16:50.011 +05:30 [INF] Calculated investment amount: 173.
2025-05-19 12:16:50.012 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.87, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 19.
2025-05-19 12:16:50.014 +05:30 [INF] Calculated investment amount: 92.89.
2025-05-19 12:16:50.015 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 19.
2025-05-19 12:16:50.017 +05:30 [INF] Calculated investment amount: 98.04.
2025-05-19 12:16:50.019 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.48, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 19.
2025-05-19 12:16:50.022 +05:30 [INF] Calculated investment amount: 46.58.
2025-05-19 12:16:50.024 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.77, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 19.
2025-05-19 12:16:50.025 +05:30 [INF] Calculated investment amount: 43.01.
2025-05-19 12:16:50.027 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.88, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 19.
2025-05-19 12:16:50.029 +05:30 [INF] Calculated investment amount: 61.13.
2025-05-19 12:16:50.031 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.37, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 19.
2025-05-19 12:16:50.033 +05:30 [INF] Calculated investment amount: 65.53.
2025-05-19 12:16:50.034 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.15, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 19.
2025-05-19 12:16:50.037 +05:30 [INF] Calculated investment amount: 43.89.
2025-05-19 12:16:50.039 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.1, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 19.
2025-05-19 12:16:50.042 +05:30 [INF] Calculated investment amount: 43.53.
2025-05-19 12:16:50.043 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.05, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 19.
2025-05-19 12:16:50.045 +05:30 [INF] Calculated investment amount: 54.62.
2025-05-19 12:16:50.048 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 19.
2025-05-19 12:16:50.051 +05:30 [INF] Calculated investment amount: 56.96.
2025-05-19 12:16:50.052 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.46, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 19.
2025-05-19 12:16:50.057 +05:30 [INF] Calculated investment amount: 56.74.
2025-05-19 12:16:50.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.54, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 19.
2025-05-19 12:16:50.061 +05:30 [INF] Calculated investment amount: 56.7.
2025-05-19 12:16:50.062 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.27, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 19.
2025-05-19 12:16:50.063 +05:30 [INF] Calculated investment amount: 44.93.
2025-05-19 12:16:50.064 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.42, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 19.
2025-05-19 12:16:50.067 +05:30 [INF] Calculated investment amount: 43.15.
2025-05-19 12:16:50.068 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.49, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 19.
2025-05-19 12:16:50.071 +05:30 [INF] Calculated investment amount: 43.46.
2025-05-19 12:16:50.072 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 19.
2025-05-19 12:16:50.074 +05:30 [INF] Calculated investment amount: 42.74.
2025-05-19 12:16:50.075 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.39, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 19.
2025-05-19 12:16:50.077 +05:30 [INF] Calculated investment amount: 37.75.
2025-05-19 12:16:50.079 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.3, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 19.
2025-05-19 12:16:50.083 +05:30 [INF] Calculated investment amount: 38.93.
2025-05-19 12:16:50.094 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 12:16:50.096 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:50.099 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 140.016ms
2025-05-19 12:16:50.101 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:16:50.103 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=19 - 200 null application/json; charset=utf-8 153.0413ms
2025-05-19 12:16:50.114 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 12:16:50.115 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 12:16:50.118 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:50.124 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:50.126 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.0944ms
2025-05-19 12:16:50.128 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 12.5196ms
2025-05-19 12:16:50.133 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 12:16:50.138 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 12:16:50.144 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:50.144 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:16:50.145 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 12:16:50.146 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 12:16:50.152 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:16:50.152 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:16:50.157 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 12:16:50.161 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 12:16:50.162 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:50.165 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 9.0999ms
2025-05-19 12:16:50.166 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:16:50.167 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 12:16:50.171 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 33.8048ms
2025-05-19 12:16:50.173 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 14.2556ms
2025-05-19 12:16:50.178 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 12:16:50.179 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 45.9926ms
2025-05-19 12:17:21.560 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:17:21.574 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:21.579 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 18.5794ms
2025-05-19 12:17:21.589 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-19 12:17:21.597 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:21.600 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:21.602 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:17:21.610 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:17:21.612 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:17:21.613 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-19 12:17:21.615 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 12:17:21.618 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:17:21.621 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:17:21.623 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-19 12:17:21.624 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-19 12:17:21.626 +05:30 [INF] Sub-allocations for equity: {"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}
2025-05-19 12:17:21.628 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}
2025-05-19 12:17:21.631 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}
2025-05-19 12:17:21.633 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-19 12:17:21.634 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}
2025-05-19 12:17:21.637 +05:30 [INF] Added sub-assets for equity: {"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}
2025-05-19 12:17:21.640 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}
2025-05-19 12:17:21.642 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}
2025-05-19 12:17:21.643 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-19 12:17:21.645 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}
2025-05-19 12:17:21.648 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":32.5,"subAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"percentage":27.5,"subAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}
2025-05-19 12:17:21.653 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:17:21.655 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":32.5,"subAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"percentage":27.5,"subAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}
2025-05-19 12:17:21.658 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:17:21.660 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 51.0384ms
2025-05-19 12:17:21.662 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:21.663 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.9666ms
2025-05-19 12:17:21.669 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - null null
2025-05-19 12:17:21.678 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:21.679 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - 204 null null 10.1314ms
2025-05-19 12:17:21.684 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - application/json 504
2025-05-19 12:17:21.689 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:21.690 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:21.692 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:17:21.695 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":32.5,"SubAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"Percentage":27.5,"SubAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}}
2025-05-19 12:17:21.698 +05:30 [INF] Target Amount: 20000
2025-05-19 12:17:21.699 +05:30 [INF] Investment Horizon: 5
2025-05-19 12:17:21.700 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:17:21.704 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.77, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-19 12:17:21.706 +05:30 [INF] Calculated investment amount: 840.73.
2025-05-19 12:17:21.708 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.23, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-19 12:17:21.712 +05:30 [INF] Calculated investment amount: 802.43.
2025-05-19 12:17:21.713 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.19, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-19 12:17:21.716 +05:30 [INF] Calculated investment amount: 576.02.
2025-05-19 12:17:21.717 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.56, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-19 12:17:21.721 +05:30 [INF] Calculated investment amount: 541.23.
2025-05-19 12:17:21.723 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.02, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-19 12:17:21.725 +05:30 [INF] Calculated investment amount: 521.45.
2025-05-19 12:17:21.727 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.73, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-19 12:17:21.730 +05:30 [INF] Calculated investment amount: 508.93.
2025-05-19 12:17:21.732 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-19 12:17:21.736 +05:30 [INF] Calculated investment amount: 659.73.
2025-05-19 12:17:21.738 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.04, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-19 12:17:21.741 +05:30 [INF] Calculated investment amount: 639.15.
2025-05-19 12:17:21.742 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.38, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-19 12:17:21.745 +05:30 [INF] Calculated investment amount: 774.38.
2025-05-19 12:17:21.747 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-19 12:17:21.750 +05:30 [INF] Calculated investment amount: 797.66.
2025-05-19 12:17:21.753 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.05, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-19 12:17:21.757 +05:30 [INF] Calculated investment amount: 619.76.
2025-05-19 12:17:21.758 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.2, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-19 12:17:21.760 +05:30 [INF] Calculated investment amount: 636.66.
2025-05-19 12:17:21.762 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.55, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-19 12:17:21.764 +05:30 [INF] Calculated investment amount: 75.56.
2025-05-19 12:17:21.767 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.45, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-19 12:17:21.770 +05:30 [INF] Calculated investment amount: 66.31.
2025-05-19 12:17:21.772 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.35, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-19 12:17:21.775 +05:30 [INF] Calculated investment amount: 45.08.
2025-05-19 12:17:21.778 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.4, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-19 12:17:21.782 +05:30 [INF] Calculated investment amount: 49.
2025-05-19 12:17:21.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-19 12:17:21.790 +05:30 [INF] Calculated investment amount: 54.53.
2025-05-19 12:17:21.792 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.34, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-19 12:17:21.795 +05:30 [INF] Calculated investment amount: 48.48.
2025-05-19 12:17:21.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-19 12:17:21.799 +05:30 [INF] Calculated investment amount: 949.95.
2025-05-19 12:17:21.801 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-19 12:17:21.804 +05:30 [INF] Calculated investment amount: 921.43.
2025-05-19 12:17:21.806 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-19 12:17:21.810 +05:30 [INF] Calculated investment amount: 943.01.
2025-05-19 12:17:21.811 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-19 12:17:21.814 +05:30 [INF] Calculated investment amount: 1052.07.
2025-05-19 12:17:21.816 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-19 12:17:21.819 +05:30 [INF] Calculated investment amount: 1211.82.
2025-05-19 12:17:21.820 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-19 12:17:21.823 +05:30 [INF] Calculated investment amount: 1265.4.
2025-05-19 12:17:21.824 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:17:21.827 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:17:21.833 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:17:21.841 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:17:21.843 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 147.9944ms
2025-05-19 12:17:21.845 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:21.848 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - 500 null application/json; charset=utf-8 163.4313ms
2025-05-19 12:17:23.362 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-19 12:17:23.381 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:23.390 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:23.397 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:17:23.414 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:17:23.425 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:17:23.431 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-19 12:17:23.440 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 12:17:23.447 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:17:23.458 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:17:23.467 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-19 12:17:23.475 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-19 12:17:23.489 +05:30 [INF] Sub-allocations for equity: {"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}
2025-05-19 12:17:23.500 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}
2025-05-19 12:17:23.508 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}
2025-05-19 12:17:23.516 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-19 12:17:23.527 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}
2025-05-19 12:17:23.535 +05:30 [INF] Added sub-assets for equity: {"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}
2025-05-19 12:17:23.545 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}
2025-05-19 12:17:23.557 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}
2025-05-19 12:17:23.567 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-19 12:17:23.578 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}
2025-05-19 12:17:23.588 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":32.5,"subAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"percentage":27.5,"subAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}
2025-05-19 12:17:23.602 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:17:23.610 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":32.5,"subAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"percentage":27.5,"subAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}
2025-05-19 12:17:23.619 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:17:23.631 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 217.0689ms
2025-05-19 12:17:23.639 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:23.651 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 288.8766ms
2025-05-19 12:17:23.690 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - application/json 504
2025-05-19 12:17:23.711 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:23.719 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:23.727 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:17:23.745 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":32.5,"SubAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"Percentage":27.5,"SubAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}}
2025-05-19 12:17:23.755 +05:30 [INF] Target Amount: 20000
2025-05-19 12:17:23.762 +05:30 [INF] Investment Horizon: 5
2025-05-19 12:17:23.771 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:17:23.780 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.77, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-19 12:17:23.795 +05:30 [INF] Calculated investment amount: 840.73.
2025-05-19 12:17:23.805 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.23, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-19 12:17:23.820 +05:30 [INF] Calculated investment amount: 802.43.
2025-05-19 12:17:23.827 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.19, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-19 12:17:23.834 +05:30 [INF] Calculated investment amount: 576.02.
2025-05-19 12:17:23.835 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.56, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-19 12:17:23.839 +05:30 [INF] Calculated investment amount: 541.23.
2025-05-19 12:17:23.840 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.02, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-19 12:17:23.843 +05:30 [INF] Calculated investment amount: 521.45.
2025-05-19 12:17:23.844 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.73, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-19 12:17:23.847 +05:30 [INF] Calculated investment amount: 508.93.
2025-05-19 12:17:23.850 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-19 12:17:23.853 +05:30 [INF] Calculated investment amount: 659.73.
2025-05-19 12:17:23.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.04, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-19 12:17:23.858 +05:30 [INF] Calculated investment amount: 639.15.
2025-05-19 12:17:23.859 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.38, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-19 12:17:23.861 +05:30 [INF] Calculated investment amount: 774.38.
2025-05-19 12:17:23.863 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-19 12:17:23.866 +05:30 [INF] Calculated investment amount: 797.66.
2025-05-19 12:17:23.867 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.05, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-19 12:17:23.870 +05:30 [INF] Calculated investment amount: 619.76.
2025-05-19 12:17:23.871 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.2, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-19 12:17:23.874 +05:30 [INF] Calculated investment amount: 636.66.
2025-05-19 12:17:23.876 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.55, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-19 12:17:23.878 +05:30 [INF] Calculated investment amount: 75.56.
2025-05-19 12:17:23.881 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.45, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-19 12:17:23.883 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-19 12:17:23.885 +05:30 [INF] Calculated investment amount: 66.31.
2025-05-19 12:17:23.889 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:23.890 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.35, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-19 12:17:23.891 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:23.894 +05:30 [INF] Calculated investment amount: 45.08.
2025-05-19 12:17:23.895 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:17:23.898 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.4, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-19 12:17:23.901 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:17:23.905 +05:30 [INF] Calculated investment amount: 49.
2025-05-19 12:17:23.907 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:17:23.908 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-19 12:17:23.909 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-19 12:17:23.913 +05:30 [INF] Calculated investment amount: 54.53.
2025-05-19 12:17:23.914 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 12:17:23.915 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.34, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-19 12:17:23.917 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:17:23.919 +05:30 [INF] Calculated investment amount: 48.48.
2025-05-19 12:17:23.922 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:17:23.924 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-19 12:17:23.925 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-19 12:17:23.929 +05:30 [INF] Calculated investment amount: 949.95.
2025-05-19 12:17:23.930 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-19 12:17:23.932 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-19 12:17:23.934 +05:30 [INF] Sub-allocations for equity: {"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}
2025-05-19 12:17:23.936 +05:30 [INF] Calculated investment amount: 921.43.
2025-05-19 12:17:23.938 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}
2025-05-19 12:17:23.940 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-19 12:17:23.942 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}
2025-05-19 12:17:23.944 +05:30 [INF] Calculated investment amount: 943.01.
2025-05-19 12:17:23.946 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-19 12:17:23.948 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-19 12:17:23.949 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}
2025-05-19 12:17:23.954 +05:30 [INF] Calculated investment amount: 1052.07.
2025-05-19 12:17:23.956 +05:30 [INF] Added sub-assets for equity: {"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}
2025-05-19 12:17:23.957 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-19 12:17:23.959 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}
2025-05-19 12:17:23.962 +05:30 [INF] Calculated investment amount: 1211.82.
2025-05-19 12:17:23.964 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}
2025-05-19 12:17:23.966 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-19 12:17:23.967 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-19 12:17:23.971 +05:30 [INF] Calculated investment amount: 1265.4.
2025-05-19 12:17:23.974 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}
2025-05-19 12:17:23.975 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:17:23.977 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":32.5,"subAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"percentage":27.5,"subAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}
2025-05-19 12:17:23.980 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:17:23.984 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:17:23.993 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:17:23.995 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":32.5,"subAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"percentage":27.5,"subAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}
2025-05-19 12:17:24.008 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:17:24.009 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:17:24.012 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 267.7322ms
2025-05-19 12:17:24.014 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 112.9885ms
2025-05-19 12:17:24.017 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:24.020 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:24.021 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - 500 null application/json; charset=utf-8 331.1826ms
2025-05-19 12:17:24.024 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 140.6202ms
2025-05-19 12:17:24.034 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - application/json 504
2025-05-19 12:17:24.038 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:24.040 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:24.042 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:17:24.045 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":32.5,"SubAssets":{"Large Cap":13,"Mid Cap":9.75,"Small Cap":9.75}},"fixedIncome":{"Percentage":27.5,"SubAssets":{"Gov Bonds":8.25,"Corp Bonds":11,"Fixed Dep":8.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1,"Energy":0.75,"Agriculture":0.75}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-0.94,"Residential Prop":-0.62,"Commercial Prop":-0.94}}}}
2025-05-19 12:17:24.047 +05:30 [INF] Target Amount: 20000
2025-05-19 12:17:24.050 +05:30 [INF] Investment Horizon: 5
2025-05-19 12:17:24.051 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:17:24.054 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.77, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-19 12:17:24.058 +05:30 [INF] Calculated investment amount: 840.73.
2025-05-19 12:17:24.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.23, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-19 12:17:24.062 +05:30 [INF] Calculated investment amount: 802.43.
2025-05-19 12:17:24.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.19, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-19 12:17:24.067 +05:30 [INF] Calculated investment amount: 576.02.
2025-05-19 12:17:24.069 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.56, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-19 12:17:24.074 +05:30 [INF] Calculated investment amount: 541.23.
2025-05-19 12:17:24.075 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.02, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-19 12:17:24.078 +05:30 [INF] Calculated investment amount: 521.45.
2025-05-19 12:17:24.080 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.73, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-19 12:17:24.083 +05:30 [INF] Calculated investment amount: 508.93.
2025-05-19 12:17:24.085 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-19 12:17:24.091 +05:30 [INF] Calculated investment amount: 659.73.
2025-05-19 12:17:24.092 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.04, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-19 12:17:24.095 +05:30 [INF] Calculated investment amount: 639.15.
2025-05-19 12:17:24.098 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.38, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-19 12:17:24.101 +05:30 [INF] Calculated investment amount: 774.38.
2025-05-19 12:17:24.102 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-19 12:17:24.105 +05:30 [INF] Calculated investment amount: 797.66.
2025-05-19 12:17:24.108 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.05, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-19 12:17:24.111 +05:30 [INF] Calculated investment amount: 619.76.
2025-05-19 12:17:24.114 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.2, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-19 12:17:24.117 +05:30 [INF] Calculated investment amount: 636.66.
2025-05-19 12:17:24.118 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.55, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-19 12:17:24.123 +05:30 [INF] Calculated investment amount: 75.56.
2025-05-19 12:17:24.125 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.45, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-19 12:17:24.127 +05:30 [INF] Calculated investment amount: 66.31.
2025-05-19 12:17:24.129 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.35, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-19 12:17:24.133 +05:30 [INF] Calculated investment amount: 45.08.
2025-05-19 12:17:24.134 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.4, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-19 12:17:24.137 +05:30 [INF] Calculated investment amount: 49.
2025-05-19 12:17:24.139 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-19 12:17:24.142 +05:30 [INF] Calculated investment amount: 54.53.
2025-05-19 12:17:24.143 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.34, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-19 12:17:24.146 +05:30 [INF] Calculated investment amount: 48.48.
2025-05-19 12:17:24.148 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-19 12:17:24.150 +05:30 [INF] Calculated investment amount: 949.95.
2025-05-19 12:17:24.153 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-19 12:17:24.157 +05:30 [INF] Calculated investment amount: 921.43.
2025-05-19 12:17:24.158 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-19 12:17:24.162 +05:30 [INF] Calculated investment amount: 943.01.
2025-05-19 12:17:24.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-19 12:17:24.166 +05:30 [INF] Calculated investment amount: 1052.07.
2025-05-19 12:17:24.168 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-19 12:17:24.171 +05:30 [INF] Calculated investment amount: 1211.82.
2025-05-19 12:17:24.172 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-19 12:17:24.176 +05:30 [INF] Calculated investment amount: 1265.4.
2025-05-19 12:17:24.178 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:17:24.181 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:17:24.186 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:17:24.195 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:17:24.197 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 152.1714ms
2025-05-19 12:17:24.200 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:24.202 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - 500 null application/json; charset=utf-8 167.9213ms
2025-05-19 12:17:49.844 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:17:49.873 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:49.879 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 35.8247ms
2025-05-19 12:17:49.911 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-19 12:17:49.936 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:49.954 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:49.966 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:17:49.986 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:17:49.999 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:17:50.005 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 12:17:50.015 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 12:17:50.022 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:17:50.029 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:17:50.040 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 12:17:50.048 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 12:17:50.068 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-19 12:17:50.077 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-19 12:17:50.090 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 12:17:50.102 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-19 12:17:50.112 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 12:17:50.123 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-19 12:17:50.135 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-19 12:17:50.147 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 12:17:50.155 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-19 12:17:50.167 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 12:17:50.177 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 12:17:50.194 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:17:50.204 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 12:17:50.222 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:17:50.237 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 251.0773ms
2025-05-19 12:17:50.251 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:17:50.264 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 353.0152ms
2025-05-19 12:17:50.294 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=30 - null null
2025-05-19 12:17:50.316 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:50.326 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=30 - 204 null null 31.5586ms
2025-05-19 12:17:50.357 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=30 - application/json 490
2025-05-19 12:17:50.380 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:50.390 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:50.399 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:17:50.419 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 12:17:50.427 +05:30 [INF] Target Amount: 20000
2025-05-19 12:17:50.437 +05:30 [INF] Investment Horizon: 30
2025-05-19 12:17:50.443 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:17:50.453 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.77, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 12:17:50.467 +05:30 [INF] Calculated investment amount: 111.98.
2025-05-19 12:17:50.473 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.98, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:17:50.489 +05:30 [INF] Calculated investment amount: 128.12.
2025-05-19 12:17:50.498 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.99, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 12:17:50.515 +05:30 [INF] Calculated investment amount: 23.3.
2025-05-19 12:17:50.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.51, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 12:17:50.538 +05:30 [INF] Calculated investment amount: 30.67.
2025-05-19 12:17:50.547 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 12:17:50.564 +05:30 [INF] Calculated investment amount: 7.58.
2025-05-19 12:17:50.575 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.82, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 12:17:50.591 +05:30 [INF] Calculated investment amount: 8.82.
2025-05-19 12:17:50.598 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:17:50.613 +05:30 [INF] Calculated investment amount: 472.01.
2025-05-19 12:17:50.623 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 12:17:50.638 +05:30 [INF] Calculated investment amount: 480.19.
2025-05-19 12:17:50.645 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 12:17:50.660 +05:30 [INF] Calculated investment amount: 108.66.
2025-05-19 12:17:50.671 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.09, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 12:17:50.699 +05:30 [INF] Calculated investment amount: 104.49.
2025-05-19 12:17:50.707 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 12:17:50.724 +05:30 [INF] Calculated investment amount: 236.36.
2025-05-19 12:17:50.734 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 12:17:50.750 +05:30 [INF] Calculated investment amount: 231.64.
2025-05-19 12:17:50.760 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 12:17:50.773 +05:30 [INF] Calculated investment amount: 72.7.
2025-05-19 12:17:50.783 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 12:17:50.802 +05:30 [INF] Calculated investment amount: 89.26.
2025-05-19 12:17:50.809 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 12:17:50.834 +05:30 [INF] Calculated investment amount: 16.84.
2025-05-19 12:17:50.841 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 12:17:50.855 +05:30 [INF] Calculated investment amount: 13.94.
2025-05-19 12:17:50.863 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 12:17:50.873 +05:30 [INF] Calculated investment amount: 11.94.
2025-05-19 12:17:50.876 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 12:17:50.879 +05:30 [INF] Calculated investment amount: 14.71.
2025-05-19 12:17:50.880 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 30.
2025-05-19 12:17:50.884 +05:30 [INF] Calculated investment amount: 51.58.
2025-05-19 12:17:50.885 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.13, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 12:17:50.888 +05:30 [INF] Calculated investment amount: 52.29.
2025-05-19 12:17:50.890 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.8, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 30.
2025-05-19 12:17:50.894 +05:30 [INF] Calculated investment amount: 128.26.
2025-05-19 12:17:50.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 30.
2025-05-19 12:17:50.899 +05:30 [INF] Calculated investment amount: 126.41.
2025-05-19 12:17:50.900 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 30.
2025-05-19 12:17:50.904 +05:30 [INF] Calculated investment amount: 84.1.
2025-05-19 12:17:50.905 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.98, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 30.
2025-05-19 12:17:50.910 +05:30 [INF] Calculated investment amount: 81.75.
2025-05-19 12:17:50.912 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 20000, AnnualReturn: 8.9, InvestmentHorizon: 30.
2025-05-19 12:17:50.916 +05:30 [INF] Calculated investment amount: 29.91.
2025-05-19 12:17:50.917 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 20000, AnnualReturn: 9.5, InvestmentHorizon: 30.
2025-05-19 12:17:50.920 +05:30 [INF] Calculated investment amount: 27.2.
2025-05-19 12:17:50.922 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 20000, AnnualReturn: 6.7, InvestmentHorizon: 30.
2025-05-19 12:17:50.926 +05:30 [INF] Calculated investment amount: 54.59.
2025-05-19 12:17:50.927 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 20000, AnnualReturn: 7.3, InvestmentHorizon: 30.
2025-05-19 12:17:50.930 +05:30 [INF] Calculated investment amount: 50.49.
2025-05-19 12:17:50.932 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 20000, AnnualReturn: 10.2, InvestmentHorizon: 30.
2025-05-19 12:17:50.935 +05:30 [INF] Calculated investment amount: 11.07.
2025-05-19 12:17:50.937 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 20000, AnnualReturn: 9.8, InvestmentHorizon: 30.
2025-05-19 12:17:50.940 +05:30 [INF] Calculated investment amount: 11.86.
2025-05-19 12:17:50.945 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 12:17:50.948 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:17:50.952 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 533.71ms
2025-05-19 12:17:50.955 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:17:50.957 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=30 - 200 null application/json; charset=utf-8 600.204ms
2025-05-19 12:17:50.968 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 12:17:50.969 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 12:17:50.974 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:50.980 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:50.984 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 16.0023ms
2025-05-19 12:17:50.986 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 17.7124ms
2025-05-19 12:17:50.992 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 12:17:51.000 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 12:17:51.005 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:51.009 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:17:51.010 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 12:17:51.011 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 12:17:51.015 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:17:51.017 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:17:51.021 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 12:17:51.027 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:17:51.027 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 12:17:51.030 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.8838ms
2025-05-19 12:17:51.033 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:17:51.034 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 12:17:51.037 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 16.0509ms
2025-05-19 12:17:51.038 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 37.851ms
2025-05-19 12:17:51.041 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 12:17:51.049 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 56.1274ms
2025-05-19 12:41:49.106 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 12:41:49.429 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 12:41:49.445 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 12:41:49.448 +05:30 [INF] Hosting environment: Development
2025-05-19 12:41:49.449 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 12:42:05.863 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:42:05.930 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:42:05.941 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 79.3259ms
2025-05-19 12:42:05.958 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:42:06.064 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:42:06.070 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:42:06.099 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:42:06.201 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:42:06.232 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:42:06.236 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:42:06.248 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:42:06.251 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:42:06.254 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:42:06.256 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:42:06.259 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:42:06.274 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:42:06.277 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:42:06.279 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:42:06.283 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:42:06.285 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:42:06.287 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:42:06.289 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:42:06.295 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:42:06.300 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:42:06.302 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:42:06.337 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:42:06.353 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:42:06.355 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:42:06.368 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:42:06.388 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 280.0525ms
2025-05-19 12:42:06.395 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:42:06.403 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 446.1675ms
2025-05-19 12:42:06.416 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - null null
2025-05-19 12:42:06.423 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:42:06.425 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 204 null null 8.988ms
2025-05-19 12:42:06.434 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - application/json 494
2025-05-19 12:42:06.440 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:42:06.442 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:42:06.449 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:42:06.488 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":70,"SubAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:42:06.493 +05:30 [INF] Target Amount: 10000
2025-05-19 12:42:06.496 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:42:06.499 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:42:06.513 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.11, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:42:06.518 +05:30 [INF] Calculated investment amount: 319.3.
2025-05-19 12:42:06.519 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.39, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:42:06.522 +05:30 [INF] Calculated investment amount: 318.65.
2025-05-19 12:42:06.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.41, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:42:06.527 +05:30 [INF] Calculated investment amount: 339.7.
2025-05-19 12:42:06.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.92, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:42:06.536 +05:30 [INF] Calculated investment amount: 346.47.
2025-05-19 12:42:06.541 +05:30 [INF] Calculating investment amount with PercentageSplit: 15.01, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:42:06.544 +05:30 [INF] Calculated investment amount: 355.16.
2025-05-19 12:42:06.545 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.16, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:42:06.548 +05:30 [INF] Calculated investment amount: 362.04.
2025-05-19 12:42:06.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.28, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:42:06.556 +05:30 [INF] Calculated investment amount: 74.84.
2025-05-19 12:42:06.560 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.22, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:42:06.564 +05:30 [INF] Calculated investment amount: 72.84.
2025-05-19 12:42:06.565 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:42:06.568 +05:30 [INF] Calculated investment amount: 237.15.
2025-05-19 12:42:06.570 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:42:06.577 +05:30 [INF] Calculated investment amount: 240.29.
2025-05-19 12:42:06.582 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:42:06.585 +05:30 [INF] Calculated investment amount: 68.25.
2025-05-19 12:42:06.587 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:42:06.590 +05:30 [INF] Calculated investment amount: 69.02.
2025-05-19 12:42:06.596 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:42:06.601 +05:30 [INF] Calculated investment amount: 40.27.
2025-05-19 12:42:06.602 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:42:06.605 +05:30 [INF] Calculated investment amount: 38.3.
2025-05-19 12:42:06.607 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:42:06.609 +05:30 [INF] Calculated investment amount: 74.82.
2025-05-19 12:42:06.615 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:42:06.618 +05:30 [INF] Calculated investment amount: 74.83.
2025-05-19 12:42:06.620 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:42:06.624 +05:30 [INF] Calculated investment amount: 93.35.
2025-05-19 12:42:06.625 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:42:06.628 +05:30 [INF] Calculated investment amount: 89.32.
2025-05-19 12:42:06.630 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:42:06.658 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:42:06.667 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:42:06.685 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:42:06.692 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 230.3034ms
2025-05-19 12:42:06.698 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:42:06.700 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 500 null application/json; charset=utf-8 266.4452ms
2025-05-19 12:47:51.607 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:47:51.613 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:47:51.614 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.2666ms
2025-05-19 12:47:51.623 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:47:51.626 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:47:51.628 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:47:51.629 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:47:51.637 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:47:51.643 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:47:51.644 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:47:51.646 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:47:51.648 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:47:51.650 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:47:51.655 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:47:51.656 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:47:51.661 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:47:51.663 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:47:51.665 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:47:51.668 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:47:51.674 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:47:51.676 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:47:51.680 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:47:51.682 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:47:51.684 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:47:51.690 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:47:51.692 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:47:51.698 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:47:51.699 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:47:51.708 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:47:51.710 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 75.2311ms
2025-05-19 12:47:51.712 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:47:51.714 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 91.0469ms
2025-05-19 12:47:51.722 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - null null
2025-05-19 12:47:51.726 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:47:51.728 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 204 null null 5.7466ms
2025-05-19 12:47:51.733 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - application/json 494
2025-05-19 12:47:51.742 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:47:51.745 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:47:51.747 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:47:51.753 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":70,"SubAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:47:51.761 +05:30 [INF] Target Amount: 10000
2025-05-19 12:47:51.762 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:47:51.764 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:47:51.767 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.11, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:47:51.773 +05:30 [INF] Calculated investment amount: 319.3.
2025-05-19 12:47:51.777 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.39, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:47:51.780 +05:30 [INF] Calculated investment amount: 318.65.
2025-05-19 12:47:51.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.41, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:47:51.786 +05:30 [INF] Calculated investment amount: 339.7.
2025-05-19 12:47:51.791 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.92, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:47:51.795 +05:30 [INF] Calculated investment amount: 346.47.
2025-05-19 12:47:51.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 15.01, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:47:51.799 +05:30 [INF] Calculated investment amount: 355.16.
2025-05-19 12:47:51.801 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.16, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:47:51.807 +05:30 [INF] Calculated investment amount: 362.04.
2025-05-19 12:47:51.811 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.28, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:47:51.814 +05:30 [INF] Calculated investment amount: 74.84.
2025-05-19 12:47:51.815 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.22, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:47:51.821 +05:30 [INF] Calculated investment amount: 72.84.
2025-05-19 12:47:51.826 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:47:51.829 +05:30 [INF] Calculated investment amount: 237.15.
2025-05-19 12:47:51.831 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:47:51.838 +05:30 [INF] Calculated investment amount: 240.29.
2025-05-19 12:47:51.840 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:47:51.844 +05:30 [INF] Calculated investment amount: 68.25.
2025-05-19 12:47:51.846 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:47:51.849 +05:30 [INF] Calculated investment amount: 69.02.
2025-05-19 12:47:51.851 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:47:51.859 +05:30 [INF] Calculated investment amount: 40.27.
2025-05-19 12:47:51.863 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:47:51.866 +05:30 [INF] Calculated investment amount: 38.3.
2025-05-19 12:47:51.871 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:47:51.875 +05:30 [INF] Calculated investment amount: 74.82.
2025-05-19 12:47:51.877 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:47:51.879 +05:30 [INF] Calculated investment amount: 74.83.
2025-05-19 12:47:51.881 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:47:51.884 +05:30 [INF] Calculated investment amount: 93.35.
2025-05-19 12:47:51.890 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:47:51.894 +05:30 [INF] Calculated investment amount: 89.32.
2025-05-19 12:47:51.896 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:47:51.900 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:47:51.913 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:47:51.929 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:47:51.931 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 180.4443ms
2025-05-19 12:47:51.934 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:47:51.942 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 500 null application/json; charset=utf-8 209.503ms
2025-05-19 12:47:53.288 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:47:53.293 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:47:53.294 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:47:53.296 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:47:53.302 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:47:53.308 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:47:53.309 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:47:53.311 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:47:53.313 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:47:53.314 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:47:53.316 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:47:53.317 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:47:53.322 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:47:53.324 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:47:53.326 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:47:53.328 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:47:53.329 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:47:53.331 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:47:53.332 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:47:53.334 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:47:53.341 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:47:53.342 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:47:53.345 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:47:53.349 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:47:53.351 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:47:53.359 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:47:53.362 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 61.9586ms
2025-05-19 12:47:53.364 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:47:53.366 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 77.1416ms
2025-05-19 12:47:53.376 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - application/json 494
2025-05-19 12:47:53.382 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:47:53.384 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:47:53.389 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:47:53.398 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":70,"SubAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:47:53.401 +05:30 [INF] Target Amount: 10000
2025-05-19 12:47:53.406 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:47:53.408 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:47:53.412 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.11, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:47:53.414 +05:30 [INF] Calculated investment amount: 319.3.
2025-05-19 12:47:53.416 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.39, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:47:53.422 +05:30 [INF] Calculated investment amount: 318.65.
2025-05-19 12:47:53.424 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.41, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:47:53.428 +05:30 [INF] Calculated investment amount: 339.7.
2025-05-19 12:47:53.430 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.92, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:47:53.433 +05:30 [INF] Calculated investment amount: 346.47.
2025-05-19 12:47:53.435 +05:30 [INF] Calculating investment amount with PercentageSplit: 15.01, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:47:53.443 +05:30 [INF] Calculated investment amount: 355.16.
2025-05-19 12:47:53.447 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.16, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:47:53.451 +05:30 [INF] Calculated investment amount: 362.04.
2025-05-19 12:47:53.455 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.28, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:47:53.459 +05:30 [INF] Calculated investment amount: 74.84.
2025-05-19 12:47:53.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.22, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:47:53.464 +05:30 [INF] Calculated investment amount: 72.84.
2025-05-19 12:47:53.465 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:47:53.468 +05:30 [INF] Calculated investment amount: 237.15.
2025-05-19 12:47:53.473 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:47:53.477 +05:30 [INF] Calculated investment amount: 240.29.
2025-05-19 12:47:53.478 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:47:53.481 +05:30 [INF] Calculated investment amount: 68.25.
2025-05-19 12:47:53.483 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:47:53.489 +05:30 [INF] Calculated investment amount: 69.02.
2025-05-19 12:47:53.491 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:47:53.495 +05:30 [INF] Calculated investment amount: 40.27.
2025-05-19 12:47:53.496 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:47:53.499 +05:30 [INF] Calculated investment amount: 38.3.
2025-05-19 12:47:53.502 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:47:53.509 +05:30 [INF] Calculated investment amount: 74.82.
2025-05-19 12:47:53.513 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:47:53.517 +05:30 [INF] Calculated investment amount: 74.83.
2025-05-19 12:47:53.523 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:47:53.527 +05:30 [INF] Calculated investment amount: 93.35.
2025-05-19 12:47:53.529 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:47:53.533 +05:30 [INF] Calculated investment amount: 89.32.
2025-05-19 12:47:53.535 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:47:53.546 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:47:53.560 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:47:53.576 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:47:53.579 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 183.7229ms
2025-05-19 12:47:53.582 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:47:53.584 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 500 null application/json; charset=utf-8 207.9976ms
2025-05-19 12:49:41.266 +05:30 [INF] Application is shutting down...
2025-05-19 12:49:45.968 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 12:49:46.162 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 12:49:46.170 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 12:49:46.171 +05:30 [INF] Hosting environment: Development
2025-05-19 12:49:46.173 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 12:49:51.587 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:49:51.647 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:49:51.655 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 68.6518ms
2025-05-19 12:49:51.666 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:49:51.739 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:49:51.745 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:49:51.765 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:49:51.847 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:49:51.873 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:49:51.877 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:49:51.887 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:49:51.889 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:49:51.892 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:49:51.895 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:49:51.897 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:49:51.908 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:49:51.912 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:49:51.914 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:49:51.915 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:49:51.917 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:49:51.918 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:49:51.919 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:49:51.920 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:49:51.922 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:49:51.923 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:49:51.949 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:49:51.959 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:49:51.961 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:49:51.968 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:49:51.982 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 207.731ms
2025-05-19 12:49:51.984 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:49:51.986 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 320.2374ms
2025-05-19 12:49:51.995 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - null null
2025-05-19 12:49:52.001 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:49:52.002 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 204 null null 6.3203ms
2025-05-19 12:49:52.009 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - application/json 494
2025-05-19 12:49:52.016 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:49:52.016 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:49:52.022 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:49:52.052 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":70,"SubAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:49:52.060 +05:30 [INF] Target Amount: 10000
2025-05-19 12:49:52.062 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:49:52.068 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:49:52.080 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.11, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:49:52.083 +05:30 [INF] Calculated investment amount: 319.3.
2025-05-19 12:49:52.084 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.39, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:49:52.086 +05:30 [INF] Calculated investment amount: 318.65.
2025-05-19 12:49:52.087 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.41, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:49:52.095 +05:30 [INF] Calculated investment amount: 339.7.
2025-05-19 12:49:52.097 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.92, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:49:52.100 +05:30 [INF] Calculated investment amount: 346.47.
2025-05-19 12:49:52.101 +05:30 [INF] Calculating investment amount with PercentageSplit: 15.01, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:49:52.103 +05:30 [INF] Calculated investment amount: 355.16.
2025-05-19 12:49:52.107 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.16, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:49:52.111 +05:30 [INF] Calculated investment amount: 362.04.
2025-05-19 12:49:52.112 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.28, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:49:52.115 +05:30 [INF] Calculated investment amount: 74.84.
2025-05-19 12:49:52.116 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.22, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:49:52.118 +05:30 [INF] Calculated investment amount: 72.84.
2025-05-19 12:49:52.119 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:49:52.122 +05:30 [INF] Calculated investment amount: 237.15.
2025-05-19 12:49:52.123 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:49:52.131 +05:30 [INF] Calculated investment amount: 240.29.
2025-05-19 12:49:52.134 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:49:52.137 +05:30 [INF] Calculated investment amount: 68.25.
2025-05-19 12:49:52.139 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:49:52.145 +05:30 [INF] Calculated investment amount: 69.02.
2025-05-19 12:49:52.147 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:49:52.149 +05:30 [INF] Calculated investment amount: 40.27.
2025-05-19 12:49:52.150 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:49:52.153 +05:30 [INF] Calculated investment amount: 38.3.
2025-05-19 12:49:52.154 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:49:52.161 +05:30 [INF] Calculated investment amount: 74.82.
2025-05-19 12:49:52.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:49:52.165 +05:30 [INF] Calculated investment amount: 74.83.
2025-05-19 12:49:52.167 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:49:52.169 +05:30 [INF] Calculated investment amount: 93.35.
2025-05-19 12:49:52.171 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:49:52.178 +05:30 [INF] Calculated investment amount: 89.32.
2025-05-19 12:49:52.179 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:49:52.196 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:49:52.209 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:49:52.222 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:49:52.231 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 201.0563ms
2025-05-19 12:49:52.235 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:49:52.237 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 500 null application/json; charset=utf-8 228.5704ms
2025-05-19 12:49:52.796 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 12:49:52.800 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:49:52.801 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:49:52.802 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:49:52.806 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:49:52.808 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:49:52.813 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:49:52.815 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:49:52.818 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 12:49:52.819 +05:30 [INF] Age adjustments found: {}
2025-05-19 12:49:52.820 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:49:52.821 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:49:52.823 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:49:52.824 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:49:52.829 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:49:52.830 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:49:52.834 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:49:52.835 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 12:49:52.837 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 12:49:52.838 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:49:52.839 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:49:52.845 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:49:52.848 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:49:52.853 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:49:52.854 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:49:52.857 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:49:52.863 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.1954ms
2025-05-19 12:49:52.865 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:49:52.867 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 71.1614ms
2025-05-19 12:49:52.871 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - application/json 494
2025-05-19 12:49:52.875 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:49:52.879 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:49:52.883 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:49:52.887 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":70,"SubAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:49:52.889 +05:30 [INF] Target Amount: 10000
2025-05-19 12:49:52.890 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:49:52.895 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:49:52.898 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.11, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:49:52.900 +05:30 [INF] Calculated investment amount: 319.3.
2025-05-19 12:49:52.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.39, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:49:52.904 +05:30 [INF] Calculated investment amount: 318.65.
2025-05-19 12:49:52.905 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.41, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:49:52.907 +05:30 [INF] Calculated investment amount: 339.7.
2025-05-19 12:49:52.913 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.92, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:49:52.917 +05:30 [INF] Calculated investment amount: 346.47.
2025-05-19 12:49:52.920 +05:30 [INF] Calculating investment amount with PercentageSplit: 15.01, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:49:52.922 +05:30 [INF] Calculated investment amount: 355.16.
2025-05-19 12:49:52.923 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.16, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:49:52.929 +05:30 [INF] Calculated investment amount: 362.04.
2025-05-19 12:49:52.933 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.28, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:49:52.935 +05:30 [INF] Calculated investment amount: 74.84.
2025-05-19 12:49:52.937 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.22, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:49:52.939 +05:30 [INF] Calculated investment amount: 72.84.
2025-05-19 12:49:52.944 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:49:52.948 +05:30 [INF] Calculated investment amount: 237.15.
2025-05-19 12:49:52.950 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:49:52.952 +05:30 [INF] Calculated investment amount: 240.29.
2025-05-19 12:49:52.953 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:49:52.956 +05:30 [INF] Calculated investment amount: 68.25.
2025-05-19 12:49:52.957 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:49:52.967 +05:30 [INF] Calculated investment amount: 69.02.
2025-05-19 12:49:52.971 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:49:52.974 +05:30 [INF] Calculated investment amount: 40.27.
2025-05-19 12:49:52.979 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:49:52.983 +05:30 [INF] Calculated investment amount: 38.3.
2025-05-19 12:49:52.985 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:49:52.987 +05:30 [INF] Calculated investment amount: 74.82.
2025-05-19 12:49:52.988 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:49:52.990 +05:30 [INF] Calculated investment amount: 74.83.
2025-05-19 12:49:52.996 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:49:53.001 +05:30 [INF] Calculated investment amount: 93.35.
2025-05-19 12:49:53.002 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:49:53.004 +05:30 [INF] Calculated investment amount: 89.32.
2025-05-19 12:49:53.006 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:49:53.011 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:49:53.019 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:49:53.034 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:49:53.036 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 149.7093ms
2025-05-19 12:49:53.038 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:49:53.040 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 500 null application/json; charset=utf-8 169.0118ms
2025-05-19 12:50:07.728 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:50:07.735 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:07.737 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.6644ms
2025-05-19 12:50:07.740 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 12:50:07.745 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:07.745 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:50:07.747 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:50:07.760 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:50:07.762 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:50:07.762 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:50:07.763 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:50:07.764 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 12:50:07.770 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 12:50:07.771 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:50:07.774 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:50:07.777 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:50:07.778 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:50:07.779 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:50:07.780 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:50:07.782 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:50:07.787 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:50:07.788 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:50:07.796 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:50:07.797 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:50:07.799 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:50:07.804 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:50:07.810 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:50:07.812 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:50:07.814 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:50:07.816 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.0285ms
2025-05-19 12:50:07.820 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:50:07.821 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.0078ms
2025-05-19 12:50:07.827 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - null null
2025-05-19 12:50:07.829 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:07.830 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 204 null null 3.5531ms
2025-05-19 12:50:07.838 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 491
2025-05-19 12:50:07.843 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:07.843 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:50:07.845 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:50:07.850 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:50:07.857 +05:30 [INF] Target Amount: 100000
2025-05-19 12:50:07.859 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:50:07.861 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:50:07.863 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:50:07.869 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 12:50:07.870 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:50:07.874 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 12:50:07.875 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:50:07.877 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 12:50:07.879 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:50:07.881 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 12:50:07.887 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:50:07.891 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 12:50:07.892 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:50:07.895 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 12:50:07.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:50:07.898 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 12:50:07.904 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:50:07.908 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 12:50:07.910 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:50:07.912 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 12:50:07.913 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:50:07.919 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 12:50:07.921 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:50:07.925 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 12:50:07.926 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:50:07.928 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 12:50:07.929 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:50:07.935 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 12:50:07.937 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:50:07.941 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 12:50:07.942 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:50:07.944 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 12:50:07.946 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:50:07.948 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 12:50:07.954 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:50:07.957 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 12:50:07.959 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:50:07.962 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 12:50:07.963 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:50:07.970 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:50:07.977 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:50:07.992 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:50:07.994 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 146.611ms
2025-05-19 12:50:07.997 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:50:08.004 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 500 null application/json; charset=utf-8 166.2937ms
2025-05-19 12:50:08.076 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 12:50:08.080 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:08.081 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:50:08.083 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:50:08.087 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:50:08.089 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:50:08.089 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:50:08.090 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:50:08.091 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 12:50:08.093 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 12:50:08.094 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:50:08.095 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:50:08.097 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:50:08.098 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:50:08.103 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:50:08.105 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:50:08.106 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:50:08.108 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:50:08.110 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:50:08.111 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:50:08.112 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:50:08.114 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:50:08.116 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:50:08.127 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:50:08.130 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:50:08.132 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:50:08.139 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 52.0918ms
2025-05-19 12:50:08.142 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:50:08.145 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 69.5813ms
2025-05-19 12:50:08.152 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 491
2025-05-19 12:50:08.159 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:08.160 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:50:08.161 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:50:08.164 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:50:08.172 +05:30 [INF] Target Amount: 100000
2025-05-19 12:50:08.175 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:50:08.176 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:50:08.178 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:50:08.180 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 12:50:08.182 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:50:08.190 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 12:50:08.194 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:50:08.196 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 12:50:08.197 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:50:08.204 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 12:50:08.208 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:50:08.210 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 12:50:08.212 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:50:08.214 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 12:50:08.218 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:50:08.222 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 12:50:08.223 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:50:08.226 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 12:50:08.227 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:50:08.229 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 12:50:08.230 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:50:08.237 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 12:50:08.241 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:50:08.243 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 12:50:08.244 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:50:08.247 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 12:50:08.248 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:50:08.254 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 12:50:08.258 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:50:08.261 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 12:50:08.262 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:50:08.264 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 12:50:08.270 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:50:08.274 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 12:50:08.275 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:50:08.277 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 12:50:08.279 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:50:08.281 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 12:50:08.286 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:50:08.291 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:50:08.297 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:50:08.311 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:50:08.313 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 149.1294ms
2025-05-19 12:50:08.320 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:50:08.323 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 500 null application/json; charset=utf-8 170.3687ms
2025-05-19 12:50:08.667 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 12:50:08.673 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:08.674 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:50:08.675 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:50:08.679 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:50:08.681 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:50:08.682 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:50:08.687 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:50:08.688 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 12:50:08.692 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 12:50:08.693 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:50:08.694 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:50:08.696 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:50:08.697 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:50:08.703 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:50:08.704 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:50:08.707 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:50:08.709 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:50:08.710 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:50:08.711 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:50:08.713 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:50:08.714 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:50:08.719 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:50:08.725 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:50:08.726 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:50:08.730 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:50:08.731 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 52.243ms
2025-05-19 12:50:08.739 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:50:08.741 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.0562ms
2025-05-19 12:50:08.746 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 491
2025-05-19 12:50:08.752 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:50:08.756 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:50:08.759 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:50:08.762 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:50:08.764 +05:30 [INF] Target Amount: 100000
2025-05-19 12:50:08.769 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:50:08.772 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:50:08.774 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:50:08.776 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 12:50:08.778 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:50:08.781 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 12:50:08.786 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:50:08.791 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 12:50:08.792 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:50:08.794 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 12:50:08.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:50:08.799 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 12:50:08.804 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:50:08.808 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 12:50:08.810 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:50:08.812 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 12:50:08.814 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:50:08.822 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 12:50:08.826 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:50:08.830 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 12:50:08.834 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:50:08.838 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 12:50:08.840 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:50:08.843 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 12:50:08.846 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:50:08.849 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 12:50:08.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:50:08.858 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 12:50:08.859 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:50:08.861 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 12:50:08.862 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:50:08.864 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 12:50:08.869 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:50:08.873 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 12:50:08.874 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:50:08.876 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 12:50:08.877 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:50:08.879 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 12:50:08.881 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:50:08.892 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:50:08.909 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:50:08.929 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:50:08.931 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 169.3148ms
2025-05-19 12:50:08.937 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:50:08.939 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 500 null application/json; charset=utf-8 192.8205ms
2025-05-19 12:50:16.376 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 12:50:16.492 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 116.0074ms
2025-05-19 12:50:16.748 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 12:50:16.850 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 102.4101ms
2025-05-19 12:51:04.129 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 126
2025-05-19 12:51:04.135 +05:30 [INF] CORS policy execution failed.
2025-05-19 12:51:04.136 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 12:51:04.138 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:51:04.141 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:51:04.153 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:51:04.155 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:51:04.156 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:51:04.157 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:51:04.162 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 12:51:04.163 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 12:51:04.167 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:51:04.168 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:51:04.170 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:51:04.170 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:51:04.172 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:51:04.173 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:51:04.174 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:51:04.178 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:51:04.180 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:51:04.183 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:51:04.184 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:51:04.185 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:51:04.186 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:51:04.189 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:51:04.191 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:51:04.200 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:51:04.202 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 49.314ms
2025-05-19 12:51:04.204 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:51:04.206 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 76.6887ms
2025-05-19 12:51:27.843 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 12:51:27.848 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 12:51:27.854 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:51:27.861 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 12:51:27.864 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 12:51:27.865 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:51:27.872 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.1896ms
2025-05-19 12:51:27.875 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 12:51:27.879 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 36.3048ms
2025-05-19 12:51:53.418 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 819
2025-05-19 12:51:53.425 +05:30 [INF] CORS policy execution failed.
2025-05-19 12:51:53.434 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 12:51:53.437 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:51:53.441 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:51:53.444 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:51:53.453 +05:30 [INF] Target Amount: 100000
2025-05-19 12:51:53.455 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:51:53.457 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:51:53.459 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:51:53.460 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 12:51:53.462 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:51:53.469 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 12:51:53.473 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:51:53.477 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 12:51:53.478 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:51:53.484 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 12:51:53.488 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:51:53.490 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 12:51:53.491 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:51:53.493 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 12:51:53.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:51:53.501 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 12:51:53.506 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:51:53.508 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 12:51:53.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:51:53.511 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 12:51:53.516 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:51:53.520 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 12:51:53.521 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:51:53.523 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 12:51:53.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:51:53.526 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 12:51:53.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:51:53.535 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 12:51:53.539 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:51:53.541 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 12:51:53.542 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:51:53.544 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 12:51:53.546 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:51:53.551 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 12:51:53.555 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:51:53.558 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 12:51:53.559 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:51:53.561 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 12:51:53.566 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:51:53.571 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:51:53.578 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:51:53.591 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:51:53.593 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 149.03ms
2025-05-19 12:51:53.595 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:51:53.601 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 500 null application/json; charset=utf-8 182.9955ms
2025-05-19 12:53:31.494 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 12:53:31.498 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:53:31.500 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.6898ms
2025-05-19 12:53:31.507 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 12:53:31.509 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:53:31.510 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:53:31.511 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 12:53:31.514 +05:30 [INF] Starting allocation calculation...
2025-05-19 12:53:31.516 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 12:53:31.517 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 12:53:31.518 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 12:53:31.525 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 12:53:31.528 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 12:53:31.532 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 12:53:31.533 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 12:53:31.538 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:53:31.542 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:53:31.544 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:53:31.545 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:53:31.546 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:53:31.547 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 12:53:31.549 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 12:53:31.555 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 12:53:31.559 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 12:53:31.560 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 12:53:31.561 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:53:31.565 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 12:53:31.567 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 12:53:31.572 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 12:53:31.574 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 59.7814ms
2025-05-19 12:53:31.576 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 12:53:31.577 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 70.4951ms
2025-05-19 12:53:31.581 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - null null
2025-05-19 12:53:31.585 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:53:31.591 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 204 null null 9.7029ms
2025-05-19 12:53:31.598 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 491
2025-05-19 12:53:31.604 +05:30 [INF] CORS policy execution successful.
2025-05-19 12:53:31.606 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:53:31.610 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 12:53:31.614 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 12:53:31.616 +05:30 [INF] Target Amount: 100000
2025-05-19 12:53:31.617 +05:30 [INF] Investment Horizon: 11
2025-05-19 12:53:31.618 +05:30 [INF] Starting product allocation calculation.
2025-05-19 12:53:31.625 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 12:53:31.628 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 12:53:31.629 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:53:31.631 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 12:53:31.632 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 12:53:31.639 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 12:53:31.640 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 12:53:31.643 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 12:53:31.644 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 12:53:31.646 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 12:53:31.647 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 12:53:31.650 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 12:53:31.651 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 12:53:31.661 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 12:53:31.665 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 12:53:31.668 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 12:53:31.673 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 12:53:31.677 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 12:53:31.678 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 12:53:31.681 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 12:53:31.682 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 12:53:31.684 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 12:53:31.685 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 12:53:31.693 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 12:53:31.696 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 12:53:31.698 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 12:53:31.700 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 12:53:31.705 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 12:53:31.707 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 12:53:31.709 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 12:53:31.710 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 12:53:31.714 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 12:53:31.715 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 12:53:31.723 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 12:53:31.725 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 12:53:31.727 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 12:53:31.729 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 12:53:31.731 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 12:53:31.743 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 12:53:31.757 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 12:53:31.758 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 144.5835ms
2025-05-19 12:53:31.761 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 12:53:31.763 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 500 null application/json; charset=utf-8 164.5828ms
2025-05-19 13:01:44.126 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 13:01:44.198 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:01:44.247 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 121.1715ms
2025-05-19 13:01:44.572 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 13:01:44.643 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:01:44.672 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:01:44.745 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:01:44.835 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:01:44.871 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:01:44.888 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 13:01:44.899 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 13:01:44.927 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 13:01:44.960 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 13:01:44.986 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 13:01:45.012 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 13:01:45.042 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:01:45.062 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:01:45.223 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:01:45.392 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:01:45.447 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:01:45.487 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:01:45.529 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:01:45.573 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:01:45.589 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:01:45.782 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:01:45.797 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:01:45.852 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:01:45.867 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:01:45.956 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:01:45.998 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 1165.0874ms
2025-05-19 13:01:46.072 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:01:46.120 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 1547.0592ms
2025-05-19 13:01:46.321 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - null null
2025-05-19 13:01:46.386 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 13:01:46.583 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:01:46.635 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:01:46.646 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 204 null null 323.9956ms
2025-05-19 13:01:46.687 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:01:46.763 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 491
2025-05-19 13:01:46.790 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:01:46.839 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:01:46.922 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:01:46.932 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:01:46.967 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:01:47.013 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:01:47.138 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 13:01:47.056 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 13:01:47.166 +05:30 [INF] Target Amount: 100000
2025-05-19 13:01:47.210 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 13:01:47.219 +05:30 [INF] Investment Horizon: 11
2025-05-19 13:01:47.248 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 13:01:47.342 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 13:01:47.319 +05:30 [INF] Starting product allocation calculation.
2025-05-19 13:01:47.418 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 13:01:47.459 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 13:01:47.484 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 13:01:47.549 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 13:01:47.587 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:01:47.625 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:01:47.655 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:01:47.606 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:01:47.722 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 13:01:47.684 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:01:47.750 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 13:01:47.776 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:01:47.818 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 13:01:47.846 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:01:47.874 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 13:01:47.894 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:01:47.949 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 13:01:47.962 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:01:48.027 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 13:01:48.052 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:01:48.157 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:01:48.116 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 13:01:48.241 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:01:48.348 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 13:01:48.444 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 13:01:48.386 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:01:48.532 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 13:01:48.570 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:01:48.668 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 13:01:48.740 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:01:48.799 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 1878.7551ms
2025-05-19 13:01:48.831 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:01:48.766 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 13:01:48.858 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 2471.9115ms
2025-05-19 13:01:48.972 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 13:01:49.084 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 491
2025-05-19 13:01:49.116 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 13:01:49.185 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:01:49.262 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:01:49.248 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 13:01:49.452 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:01:49.619 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 13:01:50.472 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 13:01:51.076 +05:30 [INF] Target Amount: 100000
2025-05-19 13:01:51.020 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 13:01:51.175 +05:30 [INF] Investment Horizon: 11
2025-05-19 13:01:51.188 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 13:01:51.215 +05:30 [INF] Starting product allocation calculation.
2025-05-19 13:01:51.253 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 13:01:51.297 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 13:01:51.297 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 13:01:51.363 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 13:01:51.429 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 13:01:51.465 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 13:01:51.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:01:51.573 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 13:01:51.634 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 13:01:51.666 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 13:01:51.692 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 13:01:51.853 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 13:01:51.799 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 13:01:51.886 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 13:01:52.036 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:01:52.118 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 13:01:52.219 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 13:01:52.185 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 13:01:52.288 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 13:01:52.335 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 13:01:52.354 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 13:01:52.548 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 13:01:52.634 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 13:01:52.728 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 13:01:52.725 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 13:01:52.797 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 13:01:52.842 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 13:01:52.889 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 13:01:52.924 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 13:01:52.966 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 13:01:53.038 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 13:01:53.055 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 13:01:53.103 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 13:01:53.170 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 13:01:53.302 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 13:01:53.383 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 13:01:53.647 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 13:01:53.560 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 13:01:53.932 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 13:01:54.522 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:01:54.570 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 13:01:54.642 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 13:01:54.690 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 13:01:54.607 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 7471.2453ms
2025-05-19 13:01:54.749 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 13:01:55.191 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:01:55.222 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 13:01:55.281 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 500 null application/json; charset=utf-8 8517.4805ms
2025-05-19 13:01:55.320 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 13:01:55.453 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 13:01:55.471 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:01:55.524 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 13:01:55.556 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 13:01:55.622 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 13:01:55.661 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 13:01:55.774 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 13:01:55.873 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 13:01:55.900 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 13:01:55.936 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-19 13:01:56.004 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-19 13:01:56.146 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-19 13:01:56.359 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:01:56.396 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 5926.9249ms
2025-05-19 13:01:56.449 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:01:56.472 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 500 null application/json; charset=utf-8 7385.5174ms
2025-05-19 13:10:08.885 +05:30 [INF] Application is shutting down...
2025-05-19 13:11:39.833 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 13:11:41.695 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 13:11:41.829 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 13:11:41.936 +05:30 [INF] Hosting environment: Development
2025-05-19 13:11:41.953 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 13:12:01.292 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 13:12:02.809 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 1530.8737ms
2025-05-19 13:12:05.511 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 13:12:07.098 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1605.3796ms
2025-05-19 13:12:42.673 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 126
2025-05-19 13:12:42.796 +05:30 [INF] CORS policy execution failed.
2025-05-19 13:12:42.813 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 13:12:42.870 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:12:43.159 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:12:44.215 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:12:44.584 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:12:44.600 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 13:12:44.669 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 13:12:44.692 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 13:12:44.720 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 13:12:44.749 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 13:12:44.782 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 13:12:45.002 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:12:45.027 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:12:45.069 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:12:45.098 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:12:45.132 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:12:45.183 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:12:45.197 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:12:45.243 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:12:45.283 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:12:45.318 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:12:45.652 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:12:45.765 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:12:45.782 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:12:45.895 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:12:46.035 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 2795.9407ms
2025-05-19 13:12:46.067 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:12:46.098 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 3425.1021ms
2025-05-19 13:15:57.661 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 819
2025-05-19 13:15:57.835 +05:30 [INF] CORS policy execution failed.
2025-05-19 13:15:57.848 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 13:15:57.882 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:15:57.990 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:15:58.328 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 13:15:58.372 +05:30 [INF] Target Amount: 100000
2025-05-19 13:15:58.398 +05:30 [INF] Investment Horizon: 11
2025-05-19 13:15:58.460 +05:30 [INF] Starting product allocation calculation.
2025-05-19 13:15:58.622 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 13:15:58.666 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 13:15:58.702 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:15:58.747 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 13:15:58.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 13:15:58.816 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 13:15:58.846 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 13:15:58.884 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 13:15:58.916 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 13:15:58.970 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 13:15:58.986 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 13:15:59.040 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 13:15:59.074 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 13:15:59.132 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 13:15:59.166 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 13:15:59.231 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 13:15:59.266 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 13:15:59.316 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 13:15:59.336 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 13:15:59.386 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 13:15:59.418 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 13:15:59.472 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 13:15:59.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 13:15:59.549 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 13:15:59.579 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 13:15:59.643 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 13:15:59.672 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 13:15:59.782 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 13:15:59.840 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:15:59.983 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 13:16:00.158 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 13:16:00.260 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 13:16:00.298 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 13:16:00.349 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 13:16:00.363 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 13:16:00.414 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 13:16:00.430 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 13:16:00.461 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 13:16:00.492 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 13:16:00.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.54, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 11.
2025-05-19 13:16:00.564 +05:30 [INF] Calculated investment amount: 211.39.
2025-05-19 13:16:00.596 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 11.
2025-05-19 13:16:00.656 +05:30 [INF] Calculated investment amount: 210.05.
2025-05-19 13:16:00.683 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.53, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 11.
2025-05-19 13:16:00.753 +05:30 [INF] Calculated investment amount: 259.7.
2025-05-19 13:16:00.789 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.58, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 11.
2025-05-19 13:16:00.831 +05:30 [INF] Calculated investment amount: 267.2.
2025-05-19 13:16:00.877 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 11.
2025-05-19 13:16:00.945 +05:30 [INF] Calculated investment amount: 487.86.
2025-05-19 13:16:00.993 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 11.
2025-05-19 13:16:01.047 +05:30 [INF] Calculated investment amount: 486.31.
2025-05-19 13:16:01.219 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 13:16:01.251 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:16:01.346 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 3301.8219ms
2025-05-19 13:16:01.382 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:16:01.457 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 200 null application/json; charset=utf-8 3796.2032ms
2025-05-19 13:16:20.553 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 13:16:20.561 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:20.564 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 10.5342ms
2025-05-19 13:16:20.573 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 13:16:20.648 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:20.651 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:16:20.653 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:16:20.657 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:16:20.659 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:16:20.663 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 13:16:20.665 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 13:16:20.669 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 13:16:20.672 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 13:16:20.674 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 13:16:20.675 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 13:16:20.680 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:16:20.682 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:16:20.685 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:16:20.686 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:16:20.687 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:16:20.692 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:16:20.693 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:16:20.697 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:16:20.698 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:16:20.700 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:16:20.701 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:16:20.705 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:16:20.709 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:16:20.714 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:16:20.715 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 59.0218ms
2025-05-19 13:16:20.717 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:16:20.719 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 146.0559ms
2025-05-19 13:16:20.726 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - null null
2025-05-19 13:16:20.731 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:20.732 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 204 null null 6.1514ms
2025-05-19 13:16:20.742 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - application/json 491
2025-05-19 13:16:20.747 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:20.748 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:16:20.750 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:16:20.762 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 13:16:20.765 +05:30 [INF] Target Amount: 100000
2025-05-19 13:16:20.766 +05:30 [INF] Investment Horizon: 11
2025-05-19 13:16:20.768 +05:30 [INF] Starting product allocation calculation.
2025-05-19 13:16:20.773 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-19 13:16:20.778 +05:30 [INF] Calculated investment amount: 2737.36.
2025-05-19 13:16:20.780 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:16:20.782 +05:30 [INF] Calculated investment amount: 2730.74.
2025-05-19 13:16:20.783 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-19 13:16:20.785 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-19 13:16:20.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-19 13:16:20.792 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-19 13:16:20.795 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-19 13:16:20.798 +05:30 [INF] Calculated investment amount: 3045.27.
2025-05-19 13:16:20.799 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-19 13:16:20.801 +05:30 [INF] Calculated investment amount: 3101.35.
2025-05-19 13:16:20.802 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-19 13:16:20.804 +05:30 [INF] Calculated investment amount: 1245.37.
2025-05-19 13:16:20.805 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.04, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-19 13:16:20.810 +05:30 [INF] Calculated investment amount: 1218.02.
2025-05-19 13:16:20.814 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-19 13:16:20.816 +05:30 [INF] Calculated investment amount: 3957.37.
2025-05-19 13:16:20.818 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.51, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-19 13:16:20.820 +05:30 [INF] Calculated investment amount: 4001.71.
2025-05-19 13:16:20.821 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-19 13:16:20.825 +05:30 [INF] Calculated investment amount: 1137.57.
2025-05-19 13:16:20.829 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-19 13:16:20.831 +05:30 [INF] Calculated investment amount: 1152.16.
2025-05-19 13:16:20.833 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-19 13:16:20.835 +05:30 [INF] Calculated investment amount: 402.7.
2025-05-19 13:16:20.836 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-19 13:16:20.838 +05:30 [INF] Calculated investment amount: 383.
2025-05-19 13:16:20.842 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-19 13:16:20.845 +05:30 [INF] Calculated investment amount: 748.2.
2025-05-19 13:16:20.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-19 13:16:20.849 +05:30 [INF] Calculated investment amount: 748.33.
2025-05-19 13:16:20.850 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-19 13:16:20.852 +05:30 [INF] Calculated investment amount: 933.49.
2025-05-19 13:16:20.853 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-19 13:16:20.859 +05:30 [INF] Calculated investment amount: 893.17.
2025-05-19 13:16:20.861 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 13:16:20.863 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 13:16:20.864 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 13:16:20.866 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.54, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 11.
2025-05-19 13:16:20.868 +05:30 [INF] Calculated investment amount: 211.39.
2025-05-19 13:16:20.872 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 11.
2025-05-19 13:16:20.878 +05:30 [INF] Calculated investment amount: 210.05.
2025-05-19 13:16:20.880 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.53, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 11.
2025-05-19 13:16:20.883 +05:30 [INF] Calculated investment amount: 259.7.
2025-05-19 13:16:20.885 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.58, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 11.
2025-05-19 13:16:20.893 +05:30 [INF] Calculated investment amount: 267.2.
2025-05-19 13:16:20.894 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 11.
2025-05-19 13:16:20.896 +05:30 [INF] Calculated investment amount: 487.86.
2025-05-19 13:16:20.898 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 11.
2025-05-19 13:16:20.900 +05:30 [INF] Calculated investment amount: 486.31.
2025-05-19 13:16:20.904 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 13:16:20.906 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:16:20.915 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 154.8384ms
2025-05-19 13:16:20.919 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:16:20.922 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=11 - 200 null application/json; charset=utf-8 179.4131ms
2025-05-19 13:16:20.993 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:16:20.994 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:16:21.040 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:21.044 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:21.047 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 53.7126ms
2025-05-19 13:16:21.052 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 58.0532ms
2025-05-19 13:16:21.075 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:16:21.068 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:16:21.079 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:21.083 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:16:21.084 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:16:21.086 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:16:21.092 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:16:21.098 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:16:21.106 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 13:16:21.108 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 13:16:21.110 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:16:21.114 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:16:21.117 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.7732ms
2025-05-19 13:16:21.121 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:16:21.123 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 23.7759ms
2025-05-19 13:16:21.127 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 58.7026ms
2025-05-19 13:16:21.130 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:16:21.144 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 69.133ms
2025-05-19 13:17:09.242 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 13:17:09.248 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.250 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.2999ms
2025-05-19 13:17:09.255 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-19 13:17:09.258 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.262 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:17:09.263 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:17:09.269 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:17:09.270 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:17:09.271 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 13:17:09.272 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 13:17:09.273 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 13:17:09.274 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 13:17:09.279 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 13:17:09.280 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 13:17:09.287 +05:30 [INF] Sub-allocations for equity: {"Large Cap":11.25,"Mid Cap":15,"Small Cap":18.75}
2025-05-19 13:17:09.288 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":5.83,"Corp Bonds":23.33,"Fixed Dep":5.83}
2025-05-19 13:17:09.290 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:17:09.295 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:17:09.296 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 13:17:09.300 +05:30 [INF] Added sub-assets for equity: {"Large Cap":11.25,"Mid Cap":15,"Small Cap":18.75}
2025-05-19 13:17:09.301 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":5.83,"Corp Bonds":23.33,"Fixed Dep":5.83}
2025-05-19 13:17:09.303 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:17:09.305 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:17:09.309 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 13:17:09.313 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":11.25,"Mid Cap":15,"Small Cap":18.75}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":5.83,"Corp Bonds":23.33,"Fixed Dep":5.83}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 13:17:09.316 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:17:09.317 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":11.25,"Mid Cap":15,"Small Cap":18.75}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":5.83,"Corp Bonds":23.33,"Fixed Dep":5.83}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 13:17:09.319 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:17:09.321 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 52.5206ms
2025-05-19 13:17:09.326 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:17:09.329 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.0719ms
2025-05-19 13:17:09.334 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=30000000&investmentHorizon=20 - null null
2025-05-19 13:17:09.341 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.342 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=30000000&investmentHorizon=20 - 204 null null 8.0975ms
2025-05-19 13:17:09.348 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=30000000&investmentHorizon=20 - application/json 498
2025-05-19 13:17:09.351 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.355 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:17:09.359 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:17:09.390 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":11.25,"Mid Cap":15,"Small Cap":18.75}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":5.83,"Corp Bonds":23.33,"Fixed Dep":5.83}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 13:17:09.395 +05:30 [INF] Target Amount: 30000000
2025-05-19 13:17:09.396 +05:30 [INF] Investment Horizon: 20
2025-05-19 13:17:09.403 +05:30 [INF] Starting product allocation calculation.
2025-05-19 13:17:09.406 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.86, TargetAmount: 30000000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-19 13:17:09.417 +05:30 [INF] Calculated investment amount: 261315.5.
2025-05-19 13:17:09.420 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.39, TargetAmount: 30000000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-19 13:17:09.423 +05:30 [INF] Calculated investment amount: 278136.03.
2025-05-19 13:17:09.428 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 30000000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-19 13:17:09.432 +05:30 [INF] Calculated investment amount: 227025.01.
2025-05-19 13:17:09.433 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 30000000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-19 13:17:09.436 +05:30 [INF] Calculated investment amount: 261215.41.
2025-05-19 13:17:09.437 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.65, TargetAmount: 30000000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-19 13:17:09.445 +05:30 [INF] Calculated investment amount: 210645.19.
2025-05-19 13:17:09.447 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.1, TargetAmount: 30000000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-19 13:17:09.449 +05:30 [INF] Calculated investment amount: 228683.12.
2025-05-19 13:17:09.451 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.97, TargetAmount: 30000000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-19 13:17:09.453 +05:30 [INF] Calculated investment amount: 335808.53.
2025-05-19 13:17:09.455 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.86, TargetAmount: 30000000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-19 13:17:09.458 +05:30 [INF] Calculated investment amount: 335939.94.
2025-05-19 13:17:09.459 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.41, TargetAmount: 30000000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-19 13:17:09.462 +05:30 [INF] Calculated investment amount: 918294.21.
2025-05-19 13:17:09.469 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.92, TargetAmount: 30000000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-19 13:17:09.472 +05:30 [INF] Calculated investment amount: 907001.68.
2025-05-19 13:17:09.473 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.86, TargetAmount: 30000000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-19 13:17:09.476 +05:30 [INF] Calculated investment amount: 294061.45.
2025-05-19 13:17:09.477 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.97, TargetAmount: 30000000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-19 13:17:09.479 +05:30 [INF] Calculated investment amount: 294020.73.
2025-05-19 13:17:09.481 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 30000000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-19 13:17:09.486 +05:30 [INF] Calculated investment amount: 61451.69.
2025-05-19 13:17:09.487 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 30000000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-19 13:17:09.491 +05:30 [INF] Calculated investment amount: 66300.56.
2025-05-19 13:17:09.493 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 30000000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-19 13:17:09.495 +05:30 [INF] Calculated investment amount: 101656.4.
2025-05-19 13:17:09.496 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 30000000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-19 13:17:09.499 +05:30 [INF] Calculated investment amount: 92903.84.
2025-05-19 13:17:09.500 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 30000000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-19 13:17:09.508 +05:30 [INF] Calculated investment amount: 134388.46.
2025-05-19 13:17:09.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 30000000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-19 13:17:09.513 +05:30 [INF] Calculated investment amount: 145748.32.
2025-05-19 13:17:09.514 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 13:17:09.515 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 13:17:09.517 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 13:17:09.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.07, TargetAmount: 30000000, AnnualReturn: 8.9, InvestmentHorizon: 20.
2025-05-19 13:17:09.520 +05:30 [INF] Calculated investment amount: 58337.45.
2025-05-19 13:17:09.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.15, TargetAmount: 30000000, AnnualReturn: 9.5, InvestmentHorizon: 20.
2025-05-19 13:17:09.528 +05:30 [INF] Calculated investment amount: 56174.18.
2025-05-19 13:17:09.530 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.06, TargetAmount: 30000000, AnnualReturn: 6.7, InvestmentHorizon: 20.
2025-05-19 13:17:09.532 +05:30 [INF] Calculated investment amount: 86923.81.
2025-05-19 13:17:09.533 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.16, TargetAmount: 30000000, AnnualReturn: 7.3, InvestmentHorizon: 20.
2025-05-19 13:17:09.536 +05:30 [INF] Calculated investment amount: 85032.47.
2025-05-19 13:17:09.537 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.84, TargetAmount: 30000000, AnnualReturn: 10.2, InvestmentHorizon: 20.
2025-05-19 13:17:09.540 +05:30 [INF] Calculated investment amount: 122125.88.
2025-05-19 13:17:09.541 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.72, TargetAmount: 30000000, AnnualReturn: 9.8, InvestmentHorizon: 20.
2025-05-19 13:17:09.548 +05:30 [INF] Calculated investment amount: 125789.2.
2025-05-19 13:17:09.554 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 13:17:09.555 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:17:09.559 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 169.2984ms
2025-05-19 13:17:09.561 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:17:09.562 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=30000000&investmentHorizon=20 - 200 null application/json; charset=utf-8 214.1624ms
2025-05-19 13:17:09.588 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:17:09.600 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:17:09.600 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.614 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.619 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 30.2111ms
2025-05-19 13:17:09.622 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 22.4471ms
2025-05-19 13:17:09.633 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:17:09.643 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:17:09.649 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.652 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:09.653 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:17:09.654 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:17:09.657 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:17:09.662 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:17:09.671 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 13:17:09.675 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:17:09.676 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 13:17:09.686 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 12.0729ms
2025-05-19 13:17:09.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:17:09.689 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:17:09.692 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 21.0102ms
2025-05-19 13:17:09.697 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 54.4879ms
2025-05-19 13:17:09.700 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:17:09.706 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 72.9541ms
2025-05-19 13:17:32.616 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 13:17:32.622 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:32.623 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.336ms
2025-05-19 13:17:32.630 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 13:17:32.634 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:32.635 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:17:32.636 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:17:32.648 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:17:32.650 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:17:32.651 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-19 13:17:32.652 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 13:17:32.653 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 13:17:32.659 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 13:17:32.660 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 13:17:32.664 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 13:17:32.667 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-19 13:17:32.668 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-19 13:17:32.669 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 13:17:32.675 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-19 13:17:32.676 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 13:17:32.680 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-19 13:17:32.681 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-19 13:17:32.685 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 13:17:32.690 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-19 13:17:32.692 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 13:17:32.695 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 13:17:32.700 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:17:32.705 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 13:17:32.739 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:17:32.742 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 94.0861ms
2025-05-19 13:17:32.744 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:17:32.752 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 122.352ms
2025-05-19 13:17:32.764 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - null null
2025-05-19 13:17:32.768 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:32.770 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 204 null null 5.9901ms
2025-05-19 13:17:32.778 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - application/json 483
2025-05-19 13:17:32.782 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:32.783 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:17:32.785 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:17:32.796 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":35,"SubAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 13:17:32.798 +05:30 [INF] Target Amount: 100000
2025-05-19 13:17:32.799 +05:30 [INF] Investment Horizon: 4
2025-05-19 13:17:32.801 +05:30 [INF] Starting product allocation calculation.
2025-05-19 13:17:32.804 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.29, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 4.
2025-05-19 13:17:32.809 +05:30 [INF] Calculated investment amount: 4979.17.
2025-05-19 13:17:32.813 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.71, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-19 13:17:32.815 +05:30 [INF] Calculated investment amount: 4718.8.
2025-05-19 13:17:32.817 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.59, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 4.
2025-05-19 13:17:32.819 +05:30 [INF] Calculated investment amount: 3489.81.
2025-05-19 13:17:32.823 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.91, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 4.
2025-05-19 13:17:32.828 +05:30 [INF] Calculated investment amount: 3234.37.
2025-05-19 13:17:32.829 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.4, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 4.
2025-05-19 13:17:32.831 +05:30 [INF] Calculated investment amount: 3197.23.
2025-05-19 13:17:32.832 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.1, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 4.
2025-05-19 13:17:32.834 +05:30 [INF] Calculated investment amount: 3105.88.
2025-05-19 13:17:32.835 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-19 13:17:32.841 +05:30 [INF] Calculated investment amount: 5034.94.
2025-05-19 13:17:32.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 4.
2025-05-19 13:17:32.861 +05:30 [INF] Calculated investment amount: 4874.52.
2025-05-19 13:17:32.866 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 4.
2025-05-19 13:17:32.874 +05:30 [INF] Calculated investment amount: 6018.34.
2025-05-19 13:17:32.878 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 4.
2025-05-19 13:17:32.880 +05:30 [INF] Calculated investment amount: 6209.61.
2025-05-19 13:17:32.881 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 4.
2025-05-19 13:17:32.883 +05:30 [INF] Calculated investment amount: 4754.51.
2025-05-19 13:17:32.885 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 4.
2025-05-19 13:17:32.891 +05:30 [INF] Calculated investment amount: 4894.87.
2025-05-19 13:17:32.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 4.
2025-05-19 13:17:32.899 +05:30 [INF] Calculated investment amount: 1636.5.
2025-05-19 13:17:32.900 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 4.
2025-05-19 13:17:32.902 +05:30 [INF] Calculated investment amount: 1401.91.
2025-05-19 13:17:32.907 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-19 13:17:32.912 +05:30 [INF] Calculated investment amount: 998.61.
2025-05-19 13:17:32.913 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 4.
2025-05-19 13:17:32.915 +05:30 [INF] Calculated investment amount: 1067.47.
2025-05-19 13:17:32.916 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 4.
2025-05-19 13:17:32.918 +05:30 [INF] Calculated investment amount: 1190.6.
2025-05-19 13:17:32.923 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 4.
2025-05-19 13:17:32.928 +05:30 [INF] Calculated investment amount: 1029.91.
2025-05-19 13:17:32.929 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 4.
2025-05-19 13:17:32.931 +05:30 [INF] Calculated investment amount: 620.51.
2025-05-19 13:17:32.932 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-19 13:17:32.934 +05:30 [INF] Calculated investment amount: 608.8.
2025-05-19 13:17:32.939 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 4.
2025-05-19 13:17:32.941 +05:30 [INF] Calculated investment amount: 610.01.
2025-05-19 13:17:32.943 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 4.
2025-05-19 13:17:32.945 +05:30 [INF] Calculated investment amount: 683.84.
2025-05-19 13:17:32.946 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 4.
2025-05-19 13:17:32.948 +05:30 [INF] Calculated investment amount: 794.99.
2025-05-19 13:17:32.950 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 4.
2025-05-19 13:17:32.952 +05:30 [INF] Calculated investment amount: 834.59.
2025-05-19 13:17:32.953 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 4.
2025-05-19 13:17:32.956 +05:30 [INF] Calculated investment amount: 1286.97.
2025-05-19 13:17:32.957 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 4.
2025-05-19 13:17:32.959 +05:30 [INF] Calculated investment amount: 1349.41.
2025-05-19 13:17:32.961 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 4.
2025-05-19 13:17:32.963 +05:30 [INF] Calculated investment amount: 925.81.
2025-05-19 13:17:32.969 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 4.
2025-05-19 13:17:32.972 +05:30 [INF] Calculated investment amount: 980.72.
2025-05-19 13:17:32.973 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 4.
2025-05-19 13:17:32.975 +05:30 [INF] Calculated investment amount: 1295.11.
2025-05-19 13:17:32.976 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 4.
2025-05-19 13:17:32.978 +05:30 [INF] Calculated investment amount: 1265.93.
2025-05-19 13:17:32.983 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 13:17:32.984 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:17:32.990 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 194.4924ms
2025-05-19 13:17:32.992 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:17:32.995 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 200 null application/json; charset=utf-8 216.8303ms
2025-05-19 13:17:33.015 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:17:33.019 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:17:33.029 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:33.041 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:33.044 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 28.6021ms
2025-05-19 13:17:33.057 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 37.5429ms
2025-05-19 13:17:33.063 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:17:33.067 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:17:33.074 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:33.077 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:17:33.078 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:17:33.079 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:17:33.081 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:17:33.082 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:17:33.086 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:17:33.094 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 13:17:33.097 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 11.7797ms
2025-05-19 13:17:33.099 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 13:17:33.101 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:17:33.102 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:17:33.107 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 43.6571ms
2025-05-19 13:17:33.111 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 17.0477ms
2025-05-19 13:17:33.116 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:17:33.118 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 50.2656ms
2025-05-19 13:18:58.897 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 13:18:58.903 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:58.905 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.5222ms
2025-05-19 13:18:58.909 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-19 13:18:58.916 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:58.920 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:18:58.923 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:18:58.927 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:18:58.929 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:18:58.929 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 13:18:58.931 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 13:18:58.935 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-19 13:18:58.936 +05:30 [INF] Age adjustments found: {}
2025-05-19 13:18:58.939 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 13:18:58.941 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 13:18:58.944 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 13:18:58.945 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 13:18:58.950 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:18:58.952 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:18:58.955 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:18:58.957 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}
2025-05-19 13:18:58.958 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-19 13:18:58.959 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:18:58.960 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:18:58.961 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:18:58.963 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:18:58.975 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:18:58.977 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":70,"subAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:18:58.984 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:18:58.988 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 61.7201ms
2025-05-19 13:18:58.990 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:18:58.992 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 83.862ms
2025-05-19 13:18:59.002 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=30 - null null
2025-05-19 13:18:59.006 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:59.008 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=30 - 204 null null 5.7851ms
2025-05-19 13:18:59.020 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=30 - application/json 494
2025-05-19 13:18:59.024 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:59.025 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:18:59.029 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:18:59.039 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":70,"SubAssets":{"Large Cap":17.5,"Mid Cap":23.33,"Small Cap":29.17}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 13:18:59.043 +05:30 [INF] Target Amount: 100000
2025-05-19 13:18:59.047 +05:30 [INF] Investment Horizon: 30
2025-05-19 13:18:59.049 +05:30 [INF] Starting product allocation calculation.
2025-05-19 13:18:59.052 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.11, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 13:18:59.055 +05:30 [INF] Calculated investment amount: 522.08.
2025-05-19 13:18:59.057 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.39, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 13:18:59.059 +05:30 [INF] Calculated investment amount: 598.53.
2025-05-19 13:18:59.060 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.41, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 13:18:59.062 +05:30 [INF] Calculated investment amount: 362.41.
2025-05-19 13:18:59.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.92, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 13:18:59.070 +05:30 [INF] Calculated investment amount: 477.02.
2025-05-19 13:18:59.074 +05:30 [INF] Calculating investment amount with PercentageSplit: 15.01, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 13:18:59.076 +05:30 [INF] Calculated investment amount: 294.6.
2025-05-19 13:18:59.077 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.16, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 13:18:59.079 +05:30 [INF] Calculated investment amount: 343.3.
2025-05-19 13:18:59.085 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.28, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 13:18:59.089 +05:30 [INF] Calculated investment amount: 296.16.
2025-05-19 13:18:59.090 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.22, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 13:18:59.092 +05:30 [INF] Calculated investment amount: 298.9.
2025-05-19 13:18:59.094 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 13:18:59.096 +05:30 [INF] Calculated investment amount: 679.47.
2025-05-19 13:18:59.102 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 13:18:59.106 +05:30 [INF] Calculated investment amount: 652.73.
2025-05-19 13:18:59.107 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 13:18:59.109 +05:30 [INF] Calculated investment amount: 246.79.
2025-05-19 13:18:59.110 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 13:18:59.112 +05:30 [INF] Calculated investment amount: 240.74.
2025-05-19 13:18:59.119 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 13:18:59.123 +05:30 [INF] Calculated investment amount: 96.66.
2025-05-19 13:18:59.124 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 13:18:59.126 +05:30 [INF] Calculated investment amount: 119.97.
2025-05-19 13:18:59.127 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 13:18:59.130 +05:30 [INF] Calculated investment amount: 140.54.
2025-05-19 13:18:59.135 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 13:18:59.139 +05:30 [INF] Calculated investment amount: 116.19.
2025-05-19 13:18:59.140 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 13:18:59.143 +05:30 [INF] Calculated investment amount: 198.13.
2025-05-19 13:18:59.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 13:18:59.146 +05:30 [INF] Calculated investment amount: 246.97.
2025-05-19 13:18:59.154 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 13:18:59.156 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 13:18:59.159 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 13:18:59.161 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.54, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 30.
2025-05-19 13:18:59.168 +05:30 [INF] Calculated investment amount: 41.84.
2025-05-19 13:18:59.170 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 30.
2025-05-19 13:18:59.174 +05:30 [INF] Calculated investment amount: 37.45.
2025-05-19 13:18:59.176 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.53, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 30.
2025-05-19 13:18:59.178 +05:30 [INF] Calculated investment amount: 75.74.
2025-05-19 13:18:59.179 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.58, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 30.
2025-05-19 13:18:59.188 +05:30 [INF] Calculated investment amount: 70.05.
2025-05-19 13:18:59.193 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 30.
2025-05-19 13:18:59.195 +05:30 [INF] Calculated investment amount: 77.06.
2025-05-19 13:18:59.196 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 30.
2025-05-19 13:18:59.203 +05:30 [INF] Calculated investment amount: 82.31.
2025-05-19 13:18:59.210 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 13:18:59.211 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:18:59.218 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 179.8677ms
2025-05-19 13:18:59.223 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 13:18:59.225 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=30 - 200 null application/json; charset=utf-8 204.9888ms
2025-05-19 13:18:59.252 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:18:59.258 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:59.261 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:18:59.262 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 9.6043ms
2025-05-19 13:18:59.271 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:59.279 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 13:18:59.284 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 23.0312ms
2025-05-19 13:18:59.290 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:59.303 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:18:59.298 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 13:18:59.315 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 13:18:59.321 +05:30 [INF] CORS policy execution successful.
2025-05-19 13:18:59.326 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:18:59.326 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:18:59.327 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:18:59.334 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 9.5011ms
2025-05-19 13:18:59.337 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 13:18:59.339 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 13:18:59.340 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 13:18:59.341 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 61.8515ms
2025-05-19 13:18:59.342 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 13:18:59.352 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.2391ms
2025-05-19 13:18:59.358 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 13:18:59.359 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 61.2739ms
2025-05-19 13:19:33.049 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 126
2025-05-19 13:19:33.054 +05:30 [INF] CORS policy execution failed.
2025-05-19 13:19:33.055 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 13:19:33.058 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:19:33.059 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 13:19:33.082 +05:30 [INF] Starting allocation calculation...
2025-05-19 13:19:33.086 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 13:19:33.087 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 13:19:33.088 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 13:19:33.089 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 13:19:33.090 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 13:19:33.091 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 13:19:33.095 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 13:19:33.101 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:19:33.102 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:19:33.103 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:19:33.105 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:19:33.106 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:19:33.107 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 13:19:33.113 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 13:19:33.116 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 13:19:33.117 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 13:19:33.118 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 13:19:33.119 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:19:33.123 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 13:19:33.126 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 13:19:33.132 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 13:19:33.133 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 51.7242ms
2025-05-19 13:19:33.135 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 13:19:33.136 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 87.7004ms
2025-05-19 14:16:04.295 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 126
2025-05-19 14:16:04.302 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:16:04.304 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:16:04.307 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:16:04.310 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:16:04.325 +05:30 [INF] Starting allocation calculation...
2025-05-19 14:16:04.327 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 14:16:04.330 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 14:16:04.337 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 14:16:04.339 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 14:16:04.344 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 14:16:04.347 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 14:16:04.356 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 14:16:04.362 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:16:04.370 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:16:04.375 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:16:04.381 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:16:04.391 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:16:04.395 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:16:04.403 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:16:04.406 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:16:04.410 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:16:04.414 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:16:04.422 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:16:04.431 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 14:16:04.437 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:16:04.444 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 14:16:04.448 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 123.9099ms
2025-05-19 14:16:04.456 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:16:04.460 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 165.2084ms
2025-05-19 14:16:11.639 +05:30 [INF] Application is shutting down...
2025-05-19 14:16:19.978 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 14:16:20.129 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 14:16:20.135 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 14:16:20.137 +05:30 [INF] Hosting environment: Development
2025-05-19 14:16:20.138 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 14:16:28.553 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 14:16:28.828 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 274.5773ms
2025-05-19 14:16:29.073 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 14:16:29.290 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 217.2443ms
2025-05-19 14:16:40.068 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 126
2025-05-19 14:16:40.086 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:16:40.089 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:16:40.101 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:16:40.156 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:16:40.310 +05:30 [INF] Starting allocation calculation...
2025-05-19 14:16:40.377 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 14:16:40.381 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 14:16:40.389 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 14:16:40.394 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 14:16:40.398 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 14:16:40.400 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 14:16:40.403 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 14:16:40.435 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:16:40.440 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:16:40.444 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:16:40.448 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:16:40.451 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:16:40.454 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:16:40.467 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:16:40.470 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:16:40.472 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:16:40.475 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:16:40.510 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:16:40.537 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 14:16:40.540 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:16:40.559 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 14:16:40.585 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 416.1755ms
2025-05-19 14:16:40.587 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:16:40.591 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 524.3186ms
2025-05-19 14:25:06.372 +05:30 [INF] Application is shutting down...
2025-05-19 14:25:12.242 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 14:25:12.423 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 14:25:12.440 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 14:25:12.447 +05:30 [INF] Hosting environment: Development
2025-05-19 14:25:12.449 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 14:25:37.165 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 126
2025-05-19 14:25:37.301 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:25:37.305 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:25:37.315 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:25:37.372 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:25:37.565 +05:30 [INF] Starting allocation calculation...
2025-05-19 14:25:37.605 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 14:25:37.609 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 14:25:37.639 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 14:25:37.642 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 14:25:37.650 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 14:25:37.653 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 14:25:37.658 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 14:25:37.697 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:25:37.701 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:25:37.705 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:25:37.709 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:25:37.716 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:25:37.720 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:25:37.724 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:25:37.732 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:25:37.736 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:25:37.740 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:25:37.809 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:25:37.835 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 14:25:37.838 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:25:37.865 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 14:25:37.903 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 513.9354ms
2025-05-19 14:25:37.909 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:25:37.917 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 756.8453ms
2025-05-19 14:25:42.622 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 14:25:42.766 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 144.2119ms
2025-05-19 14:25:43.000 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 14:25:43.208 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 208.067ms
2025-05-19 14:25:52.058 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 126
2025-05-19 14:25:52.068 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:25:52.070 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:25:52.074 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:25:52.081 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:25:52.093 +05:30 [INF] Starting allocation calculation...
2025-05-19 14:25:52.098 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 14:25:52.106 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 14:25:52.109 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 14:25:52.113 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-19 14:25:52.116 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-19 14:25:52.124 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 14:25:52.127 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 14:25:52.133 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:25:52.140 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:25:52.144 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:25:52.147 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:25:52.155 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:25:52.159 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-19 14:25:52.163 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}
2025-05-19 14:25:52.170 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 14:25:52.173 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 14:25:52.177 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 14:25:52.181 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:25:52.197 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 14:25:52.200 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":4.17,"Corp Bonds":16.67,"Fixed Dep":4.17}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 14:25:52.213 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 14:25:52.217 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 126.4813ms
2025-05-19 14:25:52.225 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:25:52.229 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 171.1417ms
2025-05-19 14:26:27.783 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - application/json 126
2025-05-19 14:26:27.799 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:26:27.800 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:26:27.810 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-19 14:26:27.827 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-19 14:26:27.831 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - 401 0 null 48.0651ms
2025-05-19 14:30:13.263 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 14:30:13.277 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 13.8104ms
2025-05-19 14:30:13.501 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 14:30:13.513 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 12.018ms
2025-05-19 14:31:03.516 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - application/json 117
2025-05-19 14:31:03.523 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:31:03.525 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:31:03.529 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-19 14:31:03.533 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-19 14:31:03.536 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - 401 0 null 19.3904ms
2025-05-19 14:31:30.691 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - application/json 117
2025-05-19 14:31:30.706 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:31:30.707 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:31:30.712 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-19 14:31:30.715 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-19 14:31:30.723 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - 401 0 null 32.0323ms
2025-05-19 14:31:37.458 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 14:31:37.470 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 11.307ms
2025-05-19 14:31:37.678 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 14:31:37.689 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 10.583ms
2025-05-19 14:31:47.929 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - application/json 117
2025-05-19 14:31:47.939 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:31:47.946 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:31:47.954 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-19 14:31:47.959 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-19 14:31:47.970 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - 401 0 null 40.6238ms
2025-05-19 14:32:51.171 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 14:32:51.179 +05:30 [INF] CORS policy execution successful.
2025-05-19 14:32:51.182 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 10.3519ms
2025-05-19 14:32:51.188 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 14:32:51.193 +05:30 [INF] CORS policy execution successful.
2025-05-19 14:32:51.195 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 14:32:51.200 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 14:32:51.511 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 14:32:51.521 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 314.8196ms
2025-05-19 14:32:51.524 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 14:32:51.526 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 338.5498ms
2025-05-19 14:32:57.059 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - application/json 117
2025-05-19 14:32:57.065 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:32:57.066 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:32:57.077 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-19 14:32:57.089 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-19 14:32:57.093 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - 401 0 null 33.8707ms
2025-05-19 14:33:06.278 +05:30 [INF] Application is shutting down...
2025-05-19 14:33:14.099 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 14:33:14.243 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 14:33:14.248 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 14:33:14.250 +05:30 [INF] Hosting environment: Development
2025-05-19 14:33:14.251 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 14:33:20.411 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 14:33:20.575 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 164.4367ms
2025-05-19 14:33:20.659 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 14:33:20.761 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 101.7766ms
2025-05-19 14:34:05.524 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - application/json 118
2025-05-19 14:34:05.546 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:34:05.548 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:34:05.561 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-19 14:34:05.569 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-19 14:34:05.573 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - 401 0 null 49.4671ms
2025-05-19 14:34:25.128 +05:30 [INF] Application is shutting down...
2025-05-19 14:34:29.738 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 14:34:29.893 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 14:34:29.921 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 14:34:29.923 +05:30 [INF] Hosting environment: Development
2025-05-19 14:34:29.926 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 14:34:38.052 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 14:34:38.428 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 378.0303ms
2025-05-19 14:34:38.509 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 14:34:38.817 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 308.9018ms
2025-05-19 14:34:54.103 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - application/json 118
2025-05-19 14:34:54.122 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:34:54.125 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:34:54.135 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.UserInputController.SubmitInput (WisVest)'
2025-05-19 14:34:54.197 +05:30 [INF] Route matched with {action = "SubmitInput", controller = "UserInput"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SubmitInput(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.UserInputController (WisVest).
2025-05-19 14:34:54.344 +05:30 [WRN] Invalid investment horizon: 31
2025-05-19 14:34:54.360 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 14:34:54.405 +05:30 [INF] Executed action WisVestAPI.Controllers.UserInputController.SubmitInput (WisVest) in 192.2633ms
2025-05-19 14:34:54.411 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.UserInputController.SubmitInput (WisVest)'
2025-05-19 14:34:54.415 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/UserInput/submit-input - 400 null application/json; charset=utf-8 311.5487ms
2025-05-19 14:35:17.837 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-19 14:35:17.845 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:35:17.846 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:35:17.850 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:35:17.859 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:35:17.892 +05:30 [INF] Starting allocation calculation...
2025-05-19 14:35:17.959 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 14:35:17.963 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 14:35:17.972 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 14:35:17.975 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 14:35:17.978 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 14:35:17.980 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 14:35:17.995 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 14:35:18.031 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 14:35:18.036 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 14:35:18.039 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 14:35:18.043 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 14:35:18.047 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 14:35:18.056 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 14:35:18.060 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 14:35:18.064 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 14:35:18.071 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 14:35:18.075 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 14:35:18.121 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 14:35:18.145 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 14:35:18.149 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 14:35:18.170 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 14:35:18.180 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 307.6271ms
2025-05-19 14:35:18.188 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:35:18.194 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 357.1246ms
2025-05-19 14:41:59.779 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-19 14:41:59.787 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:41:59.788 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:41:59.794 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:41:59.797 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:41:59.817 +05:30 [INF] Starting allocation calculation...
2025-05-19 14:41:59.826 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 14:41:59.828 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 14:41:59.830 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 14:41:59.835 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 14:41:59.838 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 14:41:59.842 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 14:41:59.845 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 14:41:59.855 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 14:41:59.858 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 14:41:59.862 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 14:41:59.869 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 14:41:59.873 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 14:41:59.877 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 14:41:59.880 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 14:41:59.888 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 14:41:59.892 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 14:41:59.895 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 14:41:59.903 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 14:41:59.910 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 14:41:59.913 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 14:41:59.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 14:41:59.929 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 114.3879ms
2025-05-19 14:41:59.935 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:41:59.938 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 158.4636ms
2025-05-19 14:42:10.008 +05:30 [INF] Application is shutting down...
2025-05-19 14:44:59.702 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 14:44:59.877 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 14:44:59.891 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 14:44:59.894 +05:30 [INF] Hosting environment: Development
2025-05-19 14:44:59.896 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 14:45:09.741 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-19 14:45:10.066 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 327.6197ms
2025-05-19 14:45:10.292 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-19 14:45:10.514 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 222.0112ms
2025-05-19 14:45:25.878 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-19 14:45:25.898 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:45:25.901 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:45:25.911 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:45:25.971 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:45:26.132 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-19 14:45:26.204 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 216.6208ms
2025-05-19 14:45:26.207 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:45:26.209 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 331.0349ms
2025-05-19 14:45:39.191 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-19 14:45:39.198 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:45:39.199 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:45:39.202 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:45:39.206 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:45:39.235 +05:30 [INF] Starting allocation calculation...
2025-05-19 14:45:39.294 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 14:45:39.298 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 14:45:39.306 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 14:45:39.309 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 14:45:39.311 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 14:45:39.315 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 14:45:39.326 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 14:45:39.359 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 14:45:39.364 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 14:45:39.367 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 14:45:39.372 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 14:45:39.376 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 14:45:39.379 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 14:45:39.383 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 14:45:39.390 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 14:45:39.394 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 14:45:39.398 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 14:45:39.450 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 14:45:39.473 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 14:45:39.477 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 14:45:39.491 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 14:45:39.497 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 284.2396ms
2025-05-19 14:45:39.500 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:45:39.506 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 314.8456ms
2025-05-19 14:45:46.843 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 116
2025-05-19 14:45:46.852 +05:30 [INF] CORS policy execution failed.
2025-05-19 14:45:46.854 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 14:45:46.858 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:45:46.861 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 14:45:46.880 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-19 14:45:46.885 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 8.5157ms
2025-05-19 14:45:46.893 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 14:45:46.897 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 53.8885ms
2025-05-19 15:11:17.955 +05:30 [INF] Application is shutting down...
2025-05-19 15:13:59.680 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 15:13:59.819 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 15:13:59.824 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 15:13:59.827 +05:30 [INF] Hosting environment: Development
2025-05-19 15:13:59.828 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 15:29:13.346 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 15:29:13.404 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:29:13.414 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 70.6943ms
2025-05-19 15:29:13.424 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 15:29:13.507 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:29:13.515 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 15:29:13.536 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 15:29:13.713 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:29:13.737 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 195.3614ms
2025-05-19 15:29:13.740 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 15:29:13.743 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 318.8911ms
2025-05-19 15:32:47.471 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 15:32:47.482 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:32:47.484 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 13.2035ms
2025-05-19 15:32:47.493 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 15:32:47.503 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:32:47.505 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 15:32:47.511 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 15:32:47.558 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 15:32:47.569 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 44.7839ms
2025-05-19 15:32:47.573 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 15:32:47.575 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 82.207ms
2025-05-19 15:33:04.424 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:33:04.430 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:04.433 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.9025ms
2025-05-19 15:33:04.443 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-19 15:33:04.449 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:04.450 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:04.456 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:04.483 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:04.495 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:04.497 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 15:33:04.501 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 15:33:04.507 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:04.509 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:04.512 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:04.517 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:04.531 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:04.534 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:04.539 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:04.546 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:04.548 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:04.550 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:04.552 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:04.558 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:04.560 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:04.564 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:04.580 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:04.596 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:04.599 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:04.603 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:04.609 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 143.3102ms
2025-05-19 15:33:04.612 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:04.613 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 170.0857ms
2025-05-19 15:33:04.618 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:33:04.625 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:04.629 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 11.314ms
2025-05-19 15:33:04.633 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 486
2025-05-19 15:33:04.638 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:04.642 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:04.647 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:04.671 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 15:33:04.677 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:04.679 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:04.684 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:33:04.690 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:33:04.723 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:33:04.735 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:33:04.752 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:04.759 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 108.1295ms
2025-05-19 15:33:04.761 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:04.763 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 500 null application/json; charset=utf-8 129.9306ms
2025-05-19 15:33:09.946 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:33:09.951 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:09.952 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.486ms
2025-05-19 15:33:09.959 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-19 15:33:09.961 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:09.962 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:09.963 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:09.967 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:09.969 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:09.969 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 15:33:09.971 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 15:33:09.977 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:09.979 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:09.980 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:09.982 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:09.984 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:09.986 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:09.990 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:09.992 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:09.996 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:09.998 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:09.999 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:10.000 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:10.002 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:10.007 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:10.009 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:10.015 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:10.016 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:10.018 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:10.020 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 53.7146ms
2025-05-19 15:33:10.026 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:10.028 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 68.9103ms
2025-05-19 15:33:10.033 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:33:10.035 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:10.036 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 3.6761ms
2025-05-19 15:33:10.044 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 486
2025-05-19 15:33:10.049 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:10.050 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:10.052 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:10.060 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 15:33:10.063 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:10.064 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:10.065 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:33:10.067 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:33:10.070 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:33:10.084 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:33:10.101 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:10.103 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 43.9013ms
2025-05-19 15:33:10.110 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:10.112 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 500 null application/json; charset=utf-8 68.2268ms
2025-05-19 15:33:13.785 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-19 15:33:13.798 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:13.800 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:13.802 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:13.809 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:13.812 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:13.813 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 15:33:13.815 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 15:33:13.817 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:13.818 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:13.819 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:13.820 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:13.822 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:13.827 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:13.829 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:13.832 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:13.835 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:13.836 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:13.837 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:13.838 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:13.843 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:13.844 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:13.849 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:13.856 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:13.861 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:13.865 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:13.867 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 60.6583ms
2025-05-19 15:33:13.869 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:13.871 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 85.2741ms
2025-05-19 15:33:13.879 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 486
2025-05-19 15:33:13.886 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:13.886 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:13.888 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:13.900 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 15:33:13.902 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:13.903 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:13.905 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:33:13.912 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:33:13.917 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:33:13.930 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:33:13.964 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:13.967 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 67.9247ms
2025-05-19 15:33:13.970 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:13.971 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 500 null application/json; charset=utf-8 92.2048ms
2025-05-19 15:33:15.129 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:33:15.136 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:15.140 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 10.8244ms
2025-05-19 15:33:15.150 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-19 15:33:15.156 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:15.160 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:15.164 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:15.172 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:15.179 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:15.181 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 15:33:15.184 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 15:33:15.187 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:15.190 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:15.197 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:15.201 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:15.204 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:15.209 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:15.213 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:15.218 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:15.220 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:15.227 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:33:15.231 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:33:15.234 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:33:15.236 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:33:15.238 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:33:15.245 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:15.252 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:15.254 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:33:15.260 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:15.263 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 91.6389ms
2025-05-19 15:33:15.265 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:15.267 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 117.104ms
2025-05-19 15:33:15.279 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:33:15.285 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:15.287 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 8.0455ms
2025-05-19 15:33:15.298 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 486
2025-05-19 15:33:15.312 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:15.313 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:15.321 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:15.336 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 15:33:15.339 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:15.345 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:15.347 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:33:15.352 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:33:15.356 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:33:15.377 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:33:15.398 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:15.401 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 66.2106ms
2025-05-19 15:33:15.404 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:15.406 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 500 null application/json; charset=utf-8 108.2147ms
2025-05-19 15:33:17.776 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:33:17.781 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:17.782 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:17.785 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:17.788 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:17.790 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:17.791 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:33:17.795 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:33:17.797 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:17.799 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:17.800 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:17.802 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:17.804 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:33:17.804 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:33:17.806 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:33:17.811 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:33:17.814 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:33:17.817 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:33:17.818 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:33:17.819 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:33:17.820 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:33:17.821 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:33:17.823 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:33:17.831 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:17.835 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:33:17.838 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:17.840 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 51.8752ms
2025-05-19 15:33:17.846 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:17.848 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 72.2741ms
2025-05-19 15:33:17.856 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 483
2025-05-19 15:33:17.864 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:17.867 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:17.869 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:17.873 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 15:33:17.882 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:17.885 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:17.886 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:33:17.888 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:33:17.895 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:33:17.907 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:33:17.929 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:17.933 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 61.0597ms
2025-05-19 15:33:17.936 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:17.938 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 500 null application/json; charset=utf-8 82.1589ms
2025-05-19 15:33:20.368 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:33:20.381 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:20.385 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 16.9284ms
2025-05-19 15:33:20.389 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:33:20.392 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:20.393 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:20.398 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:20.406 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:20.409 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:20.415 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:33:20.416 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:33:20.420 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:20.421 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:20.422 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:20.423 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:20.425 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:20.428 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:20.433 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:20.435 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:20.438 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:20.440 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:20.441 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:20.442 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:20.447 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:20.448 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:20.453 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:20.456 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:20.457 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:20.463 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:20.466 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 60.3867ms
2025-05-19 15:33:20.468 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:20.470 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 80.5893ms
2025-05-19 15:33:20.474 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:33:20.481 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:20.485 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 10.3624ms
2025-05-19 15:33:20.489 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:33:20.492 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:20.497 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:20.501 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:20.506 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:33:20.508 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:20.514 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:20.518 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:33:20.520 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:20.523 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 17.6141ms
2025-05-19 15:33:20.525 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:20.530 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 41.1844ms
2025-05-19 15:33:26.144 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:33:26.155 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:26.158 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.6824ms
2025-05-19 15:33:26.161 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:33:26.168 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:26.169 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:26.174 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:26.177 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:26.183 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:26.186 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:33:26.189 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:33:26.190 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:26.191 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:26.193 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:26.195 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:26.199 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:26.202 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:26.204 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:26.206 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:26.210 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:26.213 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:26.218 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:26.220 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:26.221 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:26.223 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:26.224 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:26.228 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:26.233 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:26.238 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:26.240 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 62.4947ms
2025-05-19 15:33:26.242 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:26.244 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 82.4599ms
2025-05-19 15:33:26.252 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:33:26.270 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:26.274 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 22.4501ms
2025-05-19 15:33:26.279 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:33:26.286 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:26.290 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:26.293 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:26.300 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:33:26.306 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:26.308 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:26.309 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:33:26.310 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:26.313 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 12.7239ms
2025-05-19 15:33:26.320 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:26.325 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 45.4159ms
2025-05-19 15:33:27.341 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:33:27.355 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:27.356 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:27.357 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:27.361 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:27.363 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:27.368 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:33:27.369 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:33:27.373 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:27.375 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:27.376 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:27.377 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:27.378 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:27.384 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:27.385 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:27.389 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:27.390 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:27.392 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:27.393 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:27.394 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:27.395 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:27.401 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:27.402 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:27.409 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:27.410 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:27.411 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:27.418 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 57.663ms
2025-05-19 15:33:27.421 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:27.423 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.5629ms
2025-05-19 15:33:27.426 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:33:27.433 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:27.435 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:27.439 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:27.442 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:33:27.443 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:27.445 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:27.450 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:33:27.452 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:27.454 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 12.8971ms
2025-05-19 15:33:27.457 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:27.459 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 32.1104ms
2025-05-19 15:33:30.913 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:33:30.928 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:30.930 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:30.935 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:33:30.941 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:33:30.943 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:33:30.943 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:33:30.944 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:33:30.946 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:33:30.947 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:33:30.951 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:33:30.953 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:33:30.957 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:30.958 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:30.959 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:30.960 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:30.961 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:30.968 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:33:30.970 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:33:30.973 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:33:30.974 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:33:30.976 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:33:30.977 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:30.980 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:33:30.986 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:33:30.990 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:33:30.992 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 50.9036ms
2025-05-19 15:33:30.994 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:33:30.995 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.7799ms
2025-05-19 15:33:31.003 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:33:31.009 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:33:31.010 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:31.011 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:33:31.019 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:33:31.023 +05:30 [INF] Target Amount: 10000
2025-05-19 15:33:31.024 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:33:31.025 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:33:31.026 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:33:31.028 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 8.9755ms
2025-05-19 15:33:31.030 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:33:31.036 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 32.9927ms
2025-05-19 15:34:04.411 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:34:04.425 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:04.426 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 15.2973ms
2025-05-19 15:34:04.434 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:34:04.438 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:04.439 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:04.441 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:34:04.445 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:34:04.451 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:34:04.452 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:34:04.455 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:34:04.456 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:34:04.457 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:34:04.458 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:34:04.460 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:34:04.462 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:04.467 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:04.468 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:04.471 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:04.474 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:04.475 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:04.476 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:04.480 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:04.483 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:04.486 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:04.487 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:04.490 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:34:04.491 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:04.493 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:34:04.499 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 55.2685ms
2025-05-19 15:34:04.502 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:04.503 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 68.705ms
2025-05-19 15:34:04.517 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:34:04.523 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:04.524 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 6.6022ms
2025-05-19 15:34:04.531 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:34:04.536 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:04.536 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:04.538 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:34:04.541 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:34:04.543 +05:30 [INF] Target Amount: 10000
2025-05-19 15:34:04.544 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:34:04.550 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:34:04.551 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:34:04.553 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 12.2268ms
2025-05-19 15:34:04.555 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:04.557 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 25.8879ms
2025-05-19 15:34:05.437 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:34:05.443 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:05.443 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:05.446 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:34:05.452 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:34:05.454 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:34:05.455 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:34:05.456 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:34:05.458 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:34:05.459 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:34:05.461 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:34:05.466 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:34:05.470 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:05.471 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:05.472 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:05.474 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:05.475 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:05.476 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:05.478 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:05.484 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:05.486 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:05.490 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:05.491 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:05.494 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:34:05.499 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:05.506 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:34:05.520 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 68.2822ms
2025-05-19 15:34:05.524 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:05.525 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 88.2227ms
2025-05-19 15:34:05.534 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:34:05.541 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:05.542 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:05.543 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:34:05.554 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:34:05.556 +05:30 [INF] Target Amount: 10000
2025-05-19 15:34:05.558 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:34:05.559 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:34:05.562 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:34:05.567 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 14.229ms
2025-05-19 15:34:05.572 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:05.574 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 40.1532ms
2025-05-19 15:34:26.875 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:34:26.881 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:26.883 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.5913ms
2025-05-19 15:34:26.887 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:34:26.894 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:26.896 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:26.900 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:34:26.904 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:34:26.909 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:34:26.910 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:34:26.914 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:34:26.915 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:34:26.916 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:34:26.918 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:34:26.919 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:34:26.922 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:26.929 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:26.931 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:26.932 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:26.934 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:26.935 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:26.937 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:26.942 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:26.944 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:26.947 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:26.949 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:26.952 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:34:26.953 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:26.962 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:34:26.967 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 63.843ms
2025-05-19 15:34:26.969 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:26.973 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 85.7474ms
2025-05-19 15:34:26.978 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:34:26.980 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:26.981 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 3.3504ms
2025-05-19 15:34:26.984 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:34:26.991 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:26.992 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:26.997 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:34:27.000 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:34:27.001 +05:30 [INF] Target Amount: 10000
2025-05-19 15:34:27.002 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:34:27.007 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:34:27.010 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:34:27.012 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 12.1284ms
2025-05-19 15:34:27.014 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:27.016 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 31.3252ms
2025-05-19 15:34:28.608 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:34:28.614 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:28.615 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:28.617 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:34:28.620 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:34:28.627 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:34:28.629 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:34:28.633 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:34:28.634 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:34:28.636 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:34:28.641 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:34:28.644 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:34:28.648 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:28.649 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:28.650 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:28.652 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:28.653 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:28.654 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:28.662 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:28.663 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:28.667 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:28.669 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:28.670 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:28.678 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:34:28.681 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:28.683 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:34:28.685 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 64.6277ms
2025-05-19 15:34:28.686 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:28.691 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 82.5207ms
2025-05-19 15:34:28.697 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:34:28.700 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:28.701 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:28.702 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:34:28.715 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:34:28.726 +05:30 [INF] Target Amount: 10000
2025-05-19 15:34:28.731 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:34:28.733 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:34:28.734 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:34:28.736 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 21.4122ms
2025-05-19 15:34:28.739 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:28.745 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 48.3526ms
2025-05-19 15:34:55.253 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:34:55.258 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:55.259 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.6613ms
2025-05-19 15:34:55.262 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:34:55.264 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:55.265 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:55.269 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:34:55.271 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:34:55.272 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:34:55.273 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:34:55.274 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:34:55.274 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:34:55.276 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:34:55.278 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:34:55.279 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:34:55.287 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:55.290 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:55.292 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:55.296 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:55.297 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:55.299 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:55.302 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:55.306 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:55.309 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:55.310 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:55.312 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:55.315 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:34:55.321 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:55.325 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:34:55.326 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 55.7622ms
2025-05-19 15:34:55.328 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:55.330 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 67.8729ms
2025-05-19 15:34:55.339 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:34:55.346 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:55.347 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 7.9269ms
2025-05-19 15:34:55.358 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:34:55.362 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:55.364 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:55.371 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:34:55.379 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:34:55.381 +05:30 [INF] Target Amount: 10000
2025-05-19 15:34:55.386 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:34:55.388 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:34:55.391 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:34:55.394 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 15.1224ms
2025-05-19 15:34:55.396 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:55.404 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 45.7424ms
2025-05-19 15:34:56.236 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:34:56.241 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:56.243 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:56.244 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:34:56.247 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:34:56.253 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:34:56.254 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:34:56.255 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:34:56.256 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:34:56.257 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:34:56.258 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:34:56.259 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:34:56.261 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:56.262 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:56.264 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:56.265 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:56.272 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:56.273 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:34:56.277 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:34:56.278 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:34:56.279 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:34:56.281 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:34:56.282 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:56.293 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:34:56.295 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:34:56.297 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:34:56.305 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 57.5506ms
2025-05-19 15:34:56.306 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:34:56.308 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 71.6779ms
2025-05-19 15:34:56.312 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:34:56.315 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:34:56.320 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:56.324 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:34:56.327 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:34:56.329 +05:30 [INF] Target Amount: 10000
2025-05-19 15:34:56.330 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:34:56.335 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:34:56.337 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:34:56.339 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 11.528ms
2025-05-19 15:34:56.341 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:34:56.343 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 30.4129ms
2025-05-19 15:35:42.189 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:35:42.195 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:42.196 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.7677ms
2025-05-19 15:35:42.199 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:35:42.208 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:42.209 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:42.214 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:35:42.218 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:35:42.224 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:35:42.226 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:35:42.229 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:35:42.230 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:35:42.231 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:35:42.232 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:35:42.233 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:35:42.235 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:42.239 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:42.241 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:42.245 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:42.246 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:42.248 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:42.249 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:42.251 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:42.256 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:42.258 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:42.261 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:42.265 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:35:42.266 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:42.267 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:35:42.273 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 55.0223ms
2025-05-19 15:35:42.276 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:42.277 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 78.1832ms
2025-05-19 15:35:42.283 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:35:42.289 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:42.290 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 7.5648ms
2025-05-19 15:35:42.297 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:35:42.300 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:42.301 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:42.307 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:35:42.313 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:35:42.315 +05:30 [INF] Target Amount: 10000
2025-05-19 15:35:42.317 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:35:42.318 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:35:42.323 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:35:42.326 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 13.0321ms
2025-05-19 15:35:42.329 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:42.330 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 32.9226ms
2025-05-19 15:35:43.924 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:35:43.929 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:43.930 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:43.932 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:35:43.942 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:35:43.947 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:35:43.949 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:35:43.951 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:35:43.952 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:35:43.956 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:35:43.959 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:35:43.961 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:35:43.963 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:43.965 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:43.967 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:43.969 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:43.974 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:43.976 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:43.980 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:43.982 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:43.983 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:43.984 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:43.990 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:43.995 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:35:43.996 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:43.999 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:35:44.000 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.5804ms
2025-05-19 15:35:44.007 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:44.008 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 84.7959ms
2025-05-19 15:35:44.017 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:35:44.023 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:44.027 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:44.029 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:35:44.033 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:35:44.035 +05:30 [INF] Target Amount: 10000
2025-05-19 15:35:44.041 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:35:44.042 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:35:44.046 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:35:44.048 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 15.3941ms
2025-05-19 15:35:44.050 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:44.052 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 35.2075ms
2025-05-19 15:35:44.966 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:35:44.973 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:44.974 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:44.975 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:35:44.979 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:35:44.981 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:35:44.982 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:35:44.983 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:35:44.984 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:35:44.985 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:35:44.993 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:35:44.994 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:35:44.999 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:45.000 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:45.002 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:45.006 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:45.009 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:45.011 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:45.013 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:45.014 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:45.015 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:45.016 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:45.018 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:45.025 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:35:45.026 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:45.029 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:35:45.030 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 51.7499ms
2025-05-19 15:35:45.033 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:45.034 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 67.4686ms
2025-05-19 15:35:45.042 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:35:45.046 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:45.047 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:45.049 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:35:45.056 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:35:45.060 +05:30 [INF] Target Amount: 10000
2025-05-19 15:35:45.061 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:35:45.062 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:35:45.064 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:35:45.066 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 10.6397ms
2025-05-19 15:35:45.073 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:45.075 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 32.6317ms
2025-05-19 15:35:45.178 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:35:45.182 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:45.183 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:45.184 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:35:45.191 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:35:45.196 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:35:45.197 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:35:45.198 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:35:45.199 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:35:45.201 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:35:45.202 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:35:45.207 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:35:45.210 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:45.212 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:45.215 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:45.218 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:45.219 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:45.225 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:35:45.226 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:35:45.229 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:35:45.231 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:35:45.232 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:35:45.234 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:45.238 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:35:45.242 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:35:45.246 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:35:45.248 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 57.1431ms
2025-05-19 15:35:45.250 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:35:45.251 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 73.3254ms
2025-05-19 15:35:45.260 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:35:45.267 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:35:45.268 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:45.272 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:35:45.278 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:35:45.280 +05:30 [INF] Target Amount: 10000
2025-05-19 15:35:45.282 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:35:45.283 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:35:45.284 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:35:45.291 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 12.6149ms
2025-05-19 15:35:45.295 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:35:45.297 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 37.1312ms
2025-05-19 15:36:56.571 +05:30 [INF] Application is shutting down...
2025-05-19 15:37:43.165 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 15:37:43.310 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 15:37:43.314 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 15:37:43.315 +05:30 [INF] Hosting environment: Development
2025-05-19 15:37:43.316 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 15:37:45.518 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:37:45.575 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:37:45.584 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 67.6072ms
2025-05-19 15:37:45.596 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:37:45.673 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:37:45.679 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:37:45.701 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:37:45.788 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:37:45.815 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:37:45.817 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:37:45.826 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:37:45.830 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:37:45.831 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:37:45.832 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:37:45.836 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:37:45.850 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:37:45.853 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:37:45.854 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:37:45.855 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:37:45.857 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:37:45.858 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:37:45.862 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:37:45.863 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:37:45.867 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:37:45.869 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:37:45.890 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:37:45.900 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:37:45.903 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:37:45.926 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:37:45.940 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 224.1708ms
2025-05-19 15:37:45.944 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:37:45.948 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 352.1285ms
2025-05-19 15:37:45.955 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:37:45.973 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:37:45.976 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 20.4363ms
2025-05-19 15:37:45.980 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:37:45.983 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:37:45.984 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:37:45.991 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:37:46.016 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:37:46.019 +05:30 [INF] Target Amount: 10000
2025-05-19 15:37:46.024 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:37:46.025 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:37:46.027 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:37:46.034 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 35.9681ms
2025-05-19 15:37:46.038 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:37:46.040 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 60.4957ms
2025-05-19 15:37:47.529 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:37:47.534 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:37:47.537 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:37:47.538 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:37:47.543 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:37:47.548 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:37:47.549 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:37:47.552 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:37:47.553 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:37:47.554 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:37:47.555 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:37:47.556 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:37:47.558 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:37:47.563 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:37:47.565 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:37:47.568 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:37:47.569 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:37:47.571 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:37:47.572 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:37:47.573 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:37:47.574 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:37:47.580 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:37:47.583 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:37:47.589 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:37:47.590 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:37:47.598 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:37:47.601 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.8415ms
2025-05-19 15:37:47.603 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:37:47.604 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 75.5475ms
2025-05-19 15:37:47.613 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:37:47.617 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:37:47.618 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:37:47.620 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:37:47.624 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:37:47.632 +05:30 [INF] Target Amount: 10000
2025-05-19 15:37:47.634 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:37:47.636 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:37:47.637 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:37:47.640 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 16.7528ms
2025-05-19 15:37:47.646 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:37:47.650 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 36.6174ms
2025-05-19 15:46:33.435 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:46:33.442 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:46:33.443 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.5063ms
2025-05-19 15:46:33.448 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:46:33.456 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:46:33.457 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:46:33.461 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:46:33.468 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:46:33.474 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:46:33.476 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:46:33.478 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:46:33.480 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:46:33.481 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:46:33.485 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:46:33.490 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:46:33.493 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:46:33.495 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:46:33.497 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:46:33.503 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:46:33.506 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:46:33.509 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:46:33.512 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:46:33.519 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:46:33.524 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:46:33.527 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:46:33.531 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:46:33.546 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:46:33.549 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:46:33.560 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:46:33.564 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 97.4502ms
2025-05-19 15:46:33.570 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:46:33.575 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 127.2841ms
2025-05-19 15:46:33.590 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:46:33.595 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:46:33.596 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 6.3032ms
2025-05-19 15:46:33.602 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:46:33.609 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:46:33.610 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:46:33.614 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:46:33.620 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:46:33.628 +05:30 [INF] Target Amount: 10000
2025-05-19 15:46:33.629 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:46:33.630 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:46:33.632 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:46:33.635 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 17.3868ms
2025-05-19 15:46:33.639 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:46:33.645 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 43.4131ms
2025-05-19 15:46:42.866 +05:30 [INF] Application is shutting down...
2025-05-19 15:46:48.202 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 15:46:48.323 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 15:46:48.328 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 15:46:48.330 +05:30 [INF] Hosting environment: Development
2025-05-19 15:46:48.331 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 15:46:55.031 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:46:57.103 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:47:42.040 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:47:46.254 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:47:49.109 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:47:53.066 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:48:56.226 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.226 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.226 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.226 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.226 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.226 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.236 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 119131.7909ms
2025-05-19 15:48:56.236 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 67125.629ms
2025-05-19 15:48:56.236 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 74194.393ms
2025-05-19 15:48:56.236 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 69979.9393ms
2025-05-19 15:48:56.236 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 63168.9751ms
2025-05-19 15:48:56.237 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 121207.6212ms
2025-05-19 15:48:56.248 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:48:56.251 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:48:56.254 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:48:56.260 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:48:56.270 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:48:56.276 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:48:56.295 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.306 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 45.7478ms
2025-05-19 15:48:56.312 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 15:48:56.390 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.390 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.390 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.390 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.390 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.390 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:56.394 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:56.394 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:56.394 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:56.395 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:56.396 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:56.397 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:56.423 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:48:56.423 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:48:56.423 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:48:56.423 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:48:56.423 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:48:56.423 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:48:56.517 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:48:56.517 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:48:56.517 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:48:56.518 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:48:56.518 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:48:56.518 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:48:56.550 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:48:56.550 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:48:56.550 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:48:56.550 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:48:56.550 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:48:56.550 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:48:56.553 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:48:56.554 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:48:56.556 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:48:56.558 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:48:56.560 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 15:48:56.562 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:48:56.578 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:48:56.578 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:48:56.578 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:48:56.578 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:48:56.578 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 15:48:56.578 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:48:56.583 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:48:56.585 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:48:56.587 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:48:56.588 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:48:56.590 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:48:56.592 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:48:56.593 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:48:56.598 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:48:56.601 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:48:56.603 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:48:56.605 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:48:56.607 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:48:56.608 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:48:56.613 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:48:56.615 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:48:56.618 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:48:56.621 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:48:56.622 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:48:56.628 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:48:56.629 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:48:56.631 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:48:56.637 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:48:56.639 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:48:56.643 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:48:56.662 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.662 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:48:56.662 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:48:56.662 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.662 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.662 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.664 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.670 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:48:56.674 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:48:56.677 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.679 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.681 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.683 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.684 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:48:56.686 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:48:56.691 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.693 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.696 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.699 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.700 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:48:56.701 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:48:56.706 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.709 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.711 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.714 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.716 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:48:56.718 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:48:56.722 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.724 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.726 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.728 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.730 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:48:56.732 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 15:48:56.737 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.739 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.742 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:56.744 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.746 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:48:56.748 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 15:48:56.752 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.754 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.757 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:56.759 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.761 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:48:56.763 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 15:48:56.769 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.771 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.774 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:56.776 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.778 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:48:56.780 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 15:48:56.785 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.787 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.790 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:56.791 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.794 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:48:56.795 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 15:48:56.804 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.804 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.804 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:56.831 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:48:56.831 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:56.831 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:56.831 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:56.831 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:48:56.831 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:56.841 +05:30 [ERR] Error occurred while saving final allocation to file.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
2025-05-19 15:48:56.841 +05:30 [ERR] Error occurred while saving final allocation to file.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
2025-05-19 15:48:56.842 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:48:56.844 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:48:56.851 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:48:56.854 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:48:56.888 +05:30 [ERR] Error computing sub-allocations.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 390
2025-05-19 15:48:56.926 +05:30 [ERR] Error computing sub-allocations.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 390
2025-05-19 15:48:56.931 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:48:56.936 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:56.940 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 15:48:56.942 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:56.961 +05:30 [ERR] Error during allocation calculation.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 390
2025-05-19 15:48:56.974 +05:30 [ERR] Error during allocation calculation.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 390
2025-05-19 15:48:56.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:48:56.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:48:56.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:48:56.984 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:48:57.002 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 554.326ms
2025-05-19 15:48:57.048 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 597.6959ms
2025-05-19 15:48:57.099 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 666.6871ms
2025-05-19 15:48:57.099 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 637.7558ms
2025-05-19 15:48:57.099 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 633.5621ms
2025-05-19 15:48:57.107 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 670.6345ms
2025-05-19 15:48:57.114 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.121 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.123 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.128 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.130 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.136 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.139 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 390
   at WisVestAPI.Controllers.AllocationController.GetAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\AllocationController.cs:line 34
   at lambda_method41(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-05-19 15:48:57.140 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.IO.IOException: The process cannot access the file 'C:\Users\divya.t1\Desktop\Final backend code without enhancements\FinalAllocation.json' because it is being used by another process.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)
   at System.IO.File.WriteToFileAsync(String path, FileMode mode, String contents, Encoding encoding, CancellationToken cancellationToken)
   at WisVestAPI.Services.AllocationService.SaveFinalAllocationToFileAsync(Dictionary`2 finalAllocation) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 45
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\AllocationService.cs:line 390
   at WisVestAPI.Controllers.AllocationController.GetAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\AllocationController.cs:line 34
   at lambda_method17(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-05-19 15:48:57.144 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 832.3353ms
2025-05-19 15:48:57.146 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 891.4639ms
2025-05-19 15:48:57.150 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 880.6966ms
2025-05-19 15:48:57.153 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 901.9517ms
2025-05-19 15:48:57.202 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 500 null text/plain; charset=utf-8 953.9276ms
2025-05-19 15:48:57.234 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 500 null text/plain; charset=utf-8 958.017ms
2025-05-19 15:48:57.242 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:48:57.246 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:48:57.253 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-19 15:48:57.258 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - null null
2025-05-19 15:48:57.262 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-19 15:48:57.272 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.276 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.280 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.286 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.292 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.292 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.294 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 47.6937ms
2025-05-19 15:48:57.295 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 41.461ms
2025-05-19 15:48:57.297 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 204 null null 38.8036ms
2025-05-19 15:48:57.302 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 40.5162ms
2025-05-19 15:48:57.304 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:48:57.310 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:48:57.320 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 483
2025-05-19 15:48:57.325 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - application/json 513
2025-05-19 15:48:57.334 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 483
2025-05-19 15:48:57.340 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:48:57.343 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.351 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.354 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.357 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.360 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:48:57.364 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.369 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.371 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.372 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.373 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:48:57.382 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:48:57.384 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:48:57.385 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:48:57.387 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:48:57.388 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:48:57.414 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:48:57.416 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:48:57.419 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:48:57.419 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 15:48:57.419 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:48:57.419 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 15:48:57.419 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 15:48:57.420 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:48:57.422 +05:30 [INF] Target Amount: 10000
2025-05-19 15:48:57.430 +05:30 [INF] Target Amount: 10000
2025-05-19 15:48:57.434 +05:30 [INF] Target Amount: 10000
2025-05-19 15:48:57.437 +05:30 [INF] Target Amount: 10000
2025-05-19 15:48:57.443 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:57.443 +05:30 [INF] Investment Horizon: 23
2025-05-19 15:48:57.445 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:48:57.447 +05:30 [INF] Investment Horizon: 22
2025-05-19 15:48:57.449 +05:30 [INF] Investment Horizon: 23
2025-05-19 15:48:57.450 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:57.454 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:48:57.457 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:48:57.458 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 15:48:57.461 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:48:57.464 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:57.468 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:48:57.473 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:48:57.478 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:57.479 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:48:57.479 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:48:57.483 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 88.8226ms
2025-05-19 15:48:57.483 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 83.6355ms
2025-05-19 15:48:57.488 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:57.493 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:48:57.496 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:48:57.498 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.504 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.506 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:48:57.513 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:48:57.524 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:48:57.526 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 215.5891ms
2025-05-19 15:48:57.528 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=22 - 400 null application/json; charset=utf-8 203.1378ms
2025-05-19 15:48:57.529 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:48:57.544 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:48:57.559 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:48:57.572 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:48:57.575 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 172.3738ms
2025-05-19 15:48:57.577 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 166.4111ms
2025-05-19 15:48:57.593 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:48:57.606 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.619 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.623 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:48:57.625 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 304.9702ms
2025-05-19 15:48:57.631 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 296.7322ms
2025-05-19 15:48:57.637 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:57.656 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:48:57.657 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:48:57.668 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:48:57.672 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 332.4076ms
2025-05-19 15:48:57.677 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:48:57.678 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 436.6697ms
2025-05-19 15:48:57.685 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 483
2025-05-19 15:48:57.692 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:48:57.693 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.697 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:48:57.701 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 15:48:57.703 +05:30 [INF] Target Amount: 10000
2025-05-19 15:48:57.708 +05:30 [INF] Investment Horizon: 23
2025-05-19 15:48:57.709 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:48:57.714 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:48:57.718 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:48:57.731 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:48:57.745 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:48:57.747 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 46.2854ms
2025-05-19 15:48:57.750 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:48:57.756 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 71.2256ms
2025-05-19 15:49:50.140 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:49:50.151 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:49:50.153 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 12.896ms
2025-05-19 15:49:50.164 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:49:50.172 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:49:50.174 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:49:50.179 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:49:50.185 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:49:50.189 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:49:50.191 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:49:50.195 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:49:50.198 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:49:50.200 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:49:50.202 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:49:50.204 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:49:50.207 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:49:50.211 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:49:50.214 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:49:50.217 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:49:50.220 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:49:50.223 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:49:50.229 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:49:50.232 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:49:50.236 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:49:50.239 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:49:50.244 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:49:50.251 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:49:50.254 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:49:50.260 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:49:50.264 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 79.7626ms
2025-05-19 15:49:50.267 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:49:50.270 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 105.1682ms
2025-05-19 15:49:50.282 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-19 15:49:50.287 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:49:50.289 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 7.3076ms
2025-05-19 15:49:50.295 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 483
2025-05-19 15:49:50.299 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:49:50.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:49:50.302 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:49:50.306 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 15:49:50.309 +05:30 [INF] Target Amount: 10000
2025-05-19 15:49:50.311 +05:30 [INF] Investment Horizon: 23
2025-05-19 15:49:50.312 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:49:50.315 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:49:50.318 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:49:50.322 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:49:50.329 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:49:50.331 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 25.5319ms
2025-05-19 15:49:50.334 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:49:50.336 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 41.6634ms
2025-05-19 15:51:03.371 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:51:03.384 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:51:03.387 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 15.8677ms
2025-05-19 15:51:03.395 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 15:51:03.401 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:51:03.403 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:51:03.407 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:51:03.422 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:51:03.432 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:51:03.434 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:51:03.437 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:51:03.445 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:51:03.449 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:51:03.452 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 15:51:03.455 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 15:51:03.464 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 15:51:03.467 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 15:51:03.470 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:51:03.474 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:51:03.481 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 15:51:03.484 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 15:51:03.488 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 15:51:03.497 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:51:03.500 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:51:03.504 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 15:51:03.513 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 15:51:03.522 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:51:03.529 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 15:51:03.534 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:51:03.538 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 116.1387ms
2025-05-19 15:51:03.546 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:51:03.548 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 152.7357ms
2025-05-19 15:51:03.558 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-19 15:51:03.566 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:51:03.568 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 9.5437ms
2025-05-19 15:51:03.575 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 477
2025-05-19 15:51:03.583 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:51:03.587 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:51:03.590 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:51:03.602 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-19 15:51:03.605 +05:30 [INF] Target Amount: 10000
2025-05-19 15:51:03.607 +05:30 [INF] Investment Horizon: 23
2025-05-19 15:51:03.614 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:51:03.617 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:51:03.621 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:51:03.630 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:51:03.648 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:51:03.650 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 48.2137ms
2025-05-19 15:51:03.656 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:51:03.658 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 83.8491ms
2025-05-19 15:54:51.135 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 15:54:51.140 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:54:51.141 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.4607ms
2025-05-19 15:54:51.147 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 15:54:51.150 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:54:51.154 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:54:51.157 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:54:51.162 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:54:51.163 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:54:51.164 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 15:54:51.166 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 15:54:51.172 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:54:51.173 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:54:51.177 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:54:51.178 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:54:51.180 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:54:51.181 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:54:51.183 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:54:51.190 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:54:51.193 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:54:51.195 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 15:54:51.196 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 15:54:51.197 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 15:54:51.198 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 15:54:51.200 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 15:54:51.206 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:54:51.211 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:54:51.214 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 15:54:51.216 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:54:51.221 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 59.8526ms
2025-05-19 15:54:51.226 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:54:51.227 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 79.9066ms
2025-05-19 15:54:51.232 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-19 15:54:51.241 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:54:51.245 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 12.7606ms
2025-05-19 15:54:51.250 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 483
2025-05-19 15:54:51.258 +05:30 [INF] CORS policy execution successful.
2025-05-19 15:54:51.263 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:54:51.266 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 15:54:51.278 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 15:54:51.280 +05:30 [INF] Target Amount: 10000
2025-05-19 15:54:51.281 +05:30 [INF] Investment Horizon: 23
2025-05-19 15:54:51.282 +05:30 [INF] Starting product allocation calculation.
2025-05-19 15:54:51.286 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 15:54:51.296 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 15:54:51.311 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 15:54:51.327 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:54:51.329 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 50.9448ms
2025-05-19 15:54:51.331 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 15:54:51.334 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 83.4221ms
2025-05-19 15:58:57.025 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 116
2025-05-19 15:58:57.031 +05:30 [INF] CORS policy execution failed.
2025-05-19 15:58:57.033 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 15:58:57.034 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:58:57.037 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:58:57.045 +05:30 [INF] Starting allocation calculation...
2025-05-19 15:58:57.052 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 15:58:57.054 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 15:58:57.057 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 15:58:57.060 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 15:58:57.068 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 15:58:57.071 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 15:58:57.075 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 15:58:57.080 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:58:57.087 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:58:57.090 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:58:57.094 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:58:57.102 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:58:57.105 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 15:58:57.109 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 15:58:57.117 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 15:58:57.121 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 15:58:57.124 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 15:58:57.133 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:58:57.141 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 15:58:57.148 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 15:58:57.155 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 15:58:57.158 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 114.3101ms
2025-05-19 15:58:57.167 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 15:58:57.171 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 145.593ms
2025-05-19 15:59:32.970 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 15:59:32.989 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 15:59:32.996 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 15:59:33.001 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 15:59:33.007 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 15:59:33.009 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 15:59:33.015 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.9018ms
2025-05-19 15:59:33.024 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 15:59:33.026 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 56.5046ms
2025-05-19 16:00:14.785 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - application/json 814
2025-05-19 16:00:14.792 +05:30 [INF] CORS policy execution failed.
2025-05-19 16:00:14.795 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 16:00:14.798 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:00:14.800 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:00:14.814 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:00:14.825 +05:30 [INF] Target Amount: 1000
2025-05-19 16:00:14.832 +05:30 [INF] Investment Horizon: 30
2025-05-19 16:00:14.835 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:00:14.846 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 16:00:14.856 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 16:00:14.889 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 16:00:14.922 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:00:14.932 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 118.4814ms
2025-05-19 16:00:14.940 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:00:14.950 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - 500 null application/json; charset=utf-8 164.237ms
2025-05-19 16:02:09.999 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - application/json 814
2025-05-19 16:02:10.006 +05:30 [INF] CORS policy execution failed.
2025-05-19 16:02:10.007 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 16:02:10.009 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:02:10.015 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:02:10.032 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:02:10.040 +05:30 [INF] Target Amount: 1000
2025-05-19 16:02:10.044 +05:30 [INF] Investment Horizon: 30
2025-05-19 16:02:10.048 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:02:10.061 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 16:02:10.068 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 16:02:10.098 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 16:02:10.134 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:02:10.138 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 107.926ms
2025-05-19 16:02:10.147 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:02:10.151 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - 500 null application/json; charset=utf-8 152.0776ms
2025-05-19 16:04:20.917 +05:30 [INF] Application is shutting down...
2025-05-19 16:04:28.562 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 16:04:28.672 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 16:04:28.678 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 16:04:28.680 +05:30 [INF] Hosting environment: Development
2025-05-19 16:04:28.681 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 16:04:38.498 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - application/json 814
2025-05-19 16:04:38.648 +05:30 [INF] CORS policy execution failed.
2025-05-19 16:04:38.653 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 16:04:38.662 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:04:38.726 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:04:39.039 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:04:39.044 +05:30 [INF] Target Amount: 1000
2025-05-19 16:04:39.047 +05:30 [INF] Investment Horizon: 30
2025-05-19 16:04:39.053 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:04:39.127 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 1000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 16:04:39.136 +05:30 [INF] Calculated investment amount: 7.46.
2025-05-19 16:04:39.140 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 1000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 16:04:39.148 +05:30 [INF] Calculated investment amount: 8.55.
2025-05-19 16:04:39.152 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 1000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 16:04:39.158 +05:30 [INF] Calculated investment amount: 1.55.
2025-05-19 16:04:39.165 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 1000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 16:04:39.171 +05:30 [INF] Calculated investment amount: 2.04.
2025-05-19 16:04:39.173 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 1000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 16:04:39.187 +05:30 [INF] Calculated investment amount: 0.5.
2025-05-19 16:04:39.193 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 1000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 16:04:39.204 +05:30 [INF] Calculated investment amount: 0.59.
2025-05-19 16:04:39.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.93, TargetAmount: 1000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 16:04:39.221 +05:30 [INF] Calculated investment amount: 20.66.
2025-05-19 16:04:39.225 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.57, TargetAmount: 1000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 16:04:39.239 +05:30 [INF] Calculated investment amount: 21.
2025-05-19 16:04:39.244 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.42, TargetAmount: 1000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 16:04:39.256 +05:30 [INF] Calculated investment amount: 4.75.
2025-05-19 16:04:39.266 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.58, TargetAmount: 1000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 16:04:39.274 +05:30 [INF] Calculated investment amount: 4.57.
2025-05-19 16:04:39.281 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 1000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 16:04:39.286 +05:30 [INF] Calculated investment amount: 10.35.
2025-05-19 16:04:39.288 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 1000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 16:04:39.294 +05:30 [INF] Calculated investment amount: 10.12.
2025-05-19 16:04:39.300 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 1000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 16:04:39.307 +05:30 [INF] Calculated investment amount: 3.64.
2025-05-19 16:04:39.311 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 1000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 16:04:39.334 +05:30 [INF] Calculated investment amount: 4.46.
2025-05-19 16:04:39.337 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 1000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 16:04:39.349 +05:30 [INF] Calculated investment amount: 0.84.
2025-05-19 16:04:39.354 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 1000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 16:04:39.366 +05:30 [INF] Calculated investment amount: 0.7.
2025-05-19 16:04:39.370 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 1000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 16:04:39.382 +05:30 [INF] Calculated investment amount: 0.6.
2025-05-19 16:04:39.385 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 1000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 16:04:39.396 +05:30 [INF] Calculated investment amount: 0.74.
2025-05-19 16:04:39.402 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 1000, AnnualReturn: 5.2, InvestmentHorizon: 30.
2025-05-19 16:04:39.416 +05:30 [INF] Calculated investment amount: 1.29.
2025-05-19 16:04:39.420 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 1000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 16:04:39.434 +05:30 [INF] Calculated investment amount: 1.3.
2025-05-19 16:04:39.437 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 1000, AnnualReturn: 3.5, InvestmentHorizon: 30.
2025-05-19 16:04:39.449 +05:30 [INF] Calculated investment amount: 3.21.
2025-05-19 16:04:39.453 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 1000, AnnualReturn: 4, InvestmentHorizon: 30.
2025-05-19 16:04:39.466 +05:30 [INF] Calculated investment amount: 3.14.
2025-05-19 16:04:39.470 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 1000, AnnualReturn: 5.1, InvestmentHorizon: 30.
2025-05-19 16:04:39.483 +05:30 [INF] Calculated investment amount: 2.09.
2025-05-19 16:04:39.487 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 1000, AnnualReturn: 5.4, InvestmentHorizon: 30.
2025-05-19 16:04:39.501 +05:30 [INF] Calculated investment amount: 2.04.
2025-05-19 16:04:39.505 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 1000, AnnualReturn: 8.9, InvestmentHorizon: 30.
2025-05-19 16:04:39.516 +05:30 [INF] Calculated investment amount: 1.5.
2025-05-19 16:04:39.520 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 1000, AnnualReturn: 9.5, InvestmentHorizon: 30.
2025-05-19 16:04:39.530 +05:30 [INF] Calculated investment amount: 1.36.
2025-05-19 16:04:39.535 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 1000, AnnualReturn: 6.7, InvestmentHorizon: 30.
2025-05-19 16:04:39.539 +05:30 [INF] Calculated investment amount: 2.73.
2025-05-19 16:04:39.541 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 1000, AnnualReturn: 7.3, InvestmentHorizon: 30.
2025-05-19 16:04:39.549 +05:30 [INF] Calculated investment amount: 2.52.
2025-05-19 16:04:39.552 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 1000, AnnualReturn: 10.2, InvestmentHorizon: 30.
2025-05-19 16:04:39.559 +05:30 [INF] Calculated investment amount: 0.55.
2025-05-19 16:04:39.569 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 1000, AnnualReturn: 9.8, InvestmentHorizon: 30.
2025-05-19 16:04:39.580 +05:30 [INF] Calculated investment amount: 0.59.
2025-05-19 16:04:39.614 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:04:39.634 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:04:39.681 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 936.2381ms
2025-05-19 16:04:39.690 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:04:39.699 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - 200 null application/json; charset=utf-8 1204.1486ms
2025-05-19 16:04:50.139 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:04:50.156 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:50.162 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 23.8353ms
2025-05-19 16:04:50.175 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 16:04:50.337 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:50.341 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:04:50.354 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:04:50.412 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:04:50.431 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:04:50.436 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 16:04:50.439 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 16:04:50.444 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:04:50.447 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:04:50.453 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:04:50.463 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:04:50.499 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 16:04:50.506 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 16:04:50.510 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 16:04:50.513 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 16:04:50.522 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 16:04:50.526 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 16:04:50.529 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 16:04:50.537 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 16:04:50.541 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 16:04:50.545 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 16:04:50.601 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 16:04:50.621 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:04:50.624 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 16:04:50.639 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:04:50.645 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 280.6637ms
2025-05-19 16:04:50.656 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:04:50.660 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 485.065ms
2025-05-19 16:04:50.670 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-19 16:04:50.675 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:50.676 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 6.5594ms
2025-05-19 16:04:50.684 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 483
2025-05-19 16:04:50.690 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:50.691 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:04:50.693 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:04:50.704 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 16:04:50.706 +05:30 [INF] Target Amount: 10000
2025-05-19 16:04:50.707 +05:30 [INF] Investment Horizon: 23
2025-05-19 16:04:50.711 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:04:50.728 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.38, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-19 16:04:50.738 +05:30 [INF] Calculated investment amount: 104.75.
2025-05-19 16:04:50.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.62, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 16:04:50.745 +05:30 [INF] Calculated investment amount: 113.86.
2025-05-19 16:04:50.750 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-19 16:04:50.753 +05:30 [INF] Calculated investment amount: 47.82.
2025-05-19 16:04:50.755 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.32, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-19 16:04:50.766 +05:30 [INF] Calculated investment amount: 57.32.
2025-05-19 16:04:50.772 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.95, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-19 16:04:50.777 +05:30 [INF] Calculated investment amount: 34.13.
2025-05-19 16:04:50.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.55, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-19 16:04:50.792 +05:30 [INF] Calculated investment amount: 37.82.
2025-05-19 16:04:50.799 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-19 16:04:50.812 +05:30 [INF] Calculated investment amount: 174.51.
2025-05-19 16:04:50.815 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-19 16:04:50.822 +05:30 [INF] Calculated investment amount: 174.85.
2025-05-19 16:04:50.831 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-19 16:04:50.838 +05:30 [INF] Calculated investment amount: 150.85.
2025-05-19 16:04:50.841 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-19 16:04:50.854 +05:30 [INF] Calculated investment amount: 147.62.
2025-05-19 16:04:50.857 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-19 16:04:50.870 +05:30 [INF] Calculated investment amount: 150.61.
2025-05-19 16:04:50.877 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-19 16:04:50.884 +05:30 [INF] Calculated investment amount: 149.22.
2025-05-19 16:04:50.888 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-19 16:04:50.900 +05:30 [INF] Calculated investment amount: 39.28.
2025-05-19 16:04:50.907 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-19 16:04:50.917 +05:30 [INF] Calculated investment amount: 43.91.
2025-05-19 16:04:50.922 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 16:04:50.929 +05:30 [INF] Calculated investment amount: 18.76.
2025-05-19 16:04:50.939 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-19 16:04:50.949 +05:30 [INF] Calculated investment amount: 16.57.
2025-05-19 16:04:50.956 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-19 16:04:50.963 +05:30 [INF] Calculated investment amount: 25.27.
2025-05-19 16:04:50.972 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-19 16:04:50.983 +05:30 [INF] Calculated investment amount: 28.48.
2025-05-19 16:04:50.989 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 16:04:50.993 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 16:04:51.003 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 16:04:51.007 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 23.
2025-05-19 16:04:51.020 +05:30 [INF] Calculated investment amount: 25.47.
2025-05-19 16:04:51.024 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 23.
2025-05-19 16:04:51.037 +05:30 [INF] Calculated investment amount: 24.06.
2025-05-19 16:04:51.041 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 23.
2025-05-19 16:04:51.054 +05:30 [INF] Calculated investment amount: 27.
2025-05-19 16:04:51.057 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 23.
2025-05-19 16:04:51.070 +05:30 [INF] Calculated investment amount: 25.71.
2025-05-19 16:04:51.079 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 23.
2025-05-19 16:04:51.086 +05:30 [INF] Calculated investment amount: 20.46.
2025-05-19 16:04:51.089 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 23.
2025-05-19 16:04:51.104 +05:30 [INF] Calculated investment amount: 21.43.
2025-05-19 16:04:51.116 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:04:51.118 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:04:51.133 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 430.3471ms
2025-05-19 16:04:51.140 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:04:51.145 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 200 null application/json; charset=utf-8 460.8778ms
2025-05-19 16:04:51.198 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:04:51.203 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:04:51.205 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:51.208 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:51.212 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 13.7159ms
2025-05-19 16:04:51.213 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.1868ms
2025-05-19 16:04:51.220 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:04:51.235 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:04:51.248 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:51.248 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:04:51.254 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:04:51.257 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:04:51.264 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:04:51.267 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:04:51.279 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:04:51.294 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:04:51.298 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:04:51.309 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 34.7147ms
2025-05-19 16:04:51.313 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:04:51.313 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:04:51.337 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 48.3489ms
2025-05-19 16:04:51.338 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 103.7349ms
2025-05-19 16:04:51.345 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:04:51.365 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 144.5738ms
2025-05-19 16:05:17.202 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - application/json 814
2025-05-19 16:05:17.210 +05:30 [INF] CORS policy execution failed.
2025-05-19 16:05:17.213 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 16:05:17.214 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:05:17.220 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:05:17.234 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:05:17.239 +05:30 [INF] Target Amount: 1000
2025-05-19 16:05:17.245 +05:30 [INF] Investment Horizon: 30
2025-05-19 16:05:17.250 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:05:17.257 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 1000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 16:05:17.267 +05:30 [INF] Calculated investment amount: 7.46.
2025-05-19 16:05:17.272 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 1000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 16:05:17.283 +05:30 [INF] Calculated investment amount: 8.55.
2025-05-19 16:05:17.288 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 1000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 16:05:17.299 +05:30 [INF] Calculated investment amount: 1.55.
2025-05-19 16:05:17.302 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 1000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 16:05:17.309 +05:30 [INF] Calculated investment amount: 2.04.
2025-05-19 16:05:17.317 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 1000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 16:05:17.323 +05:30 [INF] Calculated investment amount: 0.5.
2025-05-19 16:05:17.331 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 1000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 16:05:17.337 +05:30 [INF] Calculated investment amount: 0.59.
2025-05-19 16:05:17.341 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.93, TargetAmount: 1000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 16:05:17.352 +05:30 [INF] Calculated investment amount: 20.66.
2025-05-19 16:05:17.358 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.57, TargetAmount: 1000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 16:05:17.369 +05:30 [INF] Calculated investment amount: 21.
2025-05-19 16:05:17.374 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.42, TargetAmount: 1000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 16:05:17.383 +05:30 [INF] Calculated investment amount: 4.75.
2025-05-19 16:05:17.386 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.58, TargetAmount: 1000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 16:05:17.397 +05:30 [INF] Calculated investment amount: 4.57.
2025-05-19 16:05:17.400 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 1000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 16:05:17.406 +05:30 [INF] Calculated investment amount: 10.35.
2025-05-19 16:05:17.415 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 1000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 16:05:17.421 +05:30 [INF] Calculated investment amount: 10.12.
2025-05-19 16:05:17.430 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 1000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 16:05:17.436 +05:30 [INF] Calculated investment amount: 3.64.
2025-05-19 16:05:17.439 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 1000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 16:05:17.453 +05:30 [INF] Calculated investment amount: 4.46.
2025-05-19 16:05:17.458 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 1000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 16:05:17.467 +05:30 [INF] Calculated investment amount: 0.84.
2025-05-19 16:05:17.474 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 1000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 16:05:17.482 +05:30 [INF] Calculated investment amount: 0.7.
2025-05-19 16:05:17.485 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 1000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 16:05:17.490 +05:30 [INF] Calculated investment amount: 0.6.
2025-05-19 16:05:17.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 1000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 16:05:17.501 +05:30 [INF] Calculated investment amount: 0.74.
2025-05-19 16:05:17.503 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 1000, AnnualReturn: 5.2, InvestmentHorizon: 30.
2025-05-19 16:05:17.514 +05:30 [INF] Calculated investment amount: 1.29.
2025-05-19 16:05:17.520 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 1000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 16:05:17.528 +05:30 [INF] Calculated investment amount: 1.3.
2025-05-19 16:05:17.533 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 1000, AnnualReturn: 3.5, InvestmentHorizon: 30.
2025-05-19 16:05:17.540 +05:30 [INF] Calculated investment amount: 3.21.
2025-05-19 16:05:17.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 1000, AnnualReturn: 4, InvestmentHorizon: 30.
2025-05-19 16:05:17.561 +05:30 [INF] Calculated investment amount: 3.14.
2025-05-19 16:05:17.567 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 1000, AnnualReturn: 5.1, InvestmentHorizon: 30.
2025-05-19 16:05:17.574 +05:30 [INF] Calculated investment amount: 2.09.
2025-05-19 16:05:17.583 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 1000, AnnualReturn: 5.4, InvestmentHorizon: 30.
2025-05-19 16:05:17.595 +05:30 [INF] Calculated investment amount: 2.04.
2025-05-19 16:05:17.601 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 1000, AnnualReturn: 8.9, InvestmentHorizon: 30.
2025-05-19 16:05:17.608 +05:30 [INF] Calculated investment amount: 1.5.
2025-05-19 16:05:17.617 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 1000, AnnualReturn: 9.5, InvestmentHorizon: 30.
2025-05-19 16:05:17.627 +05:30 [INF] Calculated investment amount: 1.36.
2025-05-19 16:05:17.633 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 1000, AnnualReturn: 6.7, InvestmentHorizon: 30.
2025-05-19 16:05:17.644 +05:30 [INF] Calculated investment amount: 2.73.
2025-05-19 16:05:17.652 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 1000, AnnualReturn: 7.3, InvestmentHorizon: 30.
2025-05-19 16:05:17.664 +05:30 [INF] Calculated investment amount: 2.52.
2025-05-19 16:05:17.668 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 1000, AnnualReturn: 10.2, InvestmentHorizon: 30.
2025-05-19 16:05:17.682 +05:30 [INF] Calculated investment amount: 0.55.
2025-05-19 16:05:17.686 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 1000, AnnualReturn: 9.8, InvestmentHorizon: 30.
2025-05-19 16:05:17.709 +05:30 [INF] Calculated investment amount: 0.59.
2025-05-19 16:05:17.720 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:05:17.722 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:05:17.735 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 501.7653ms
2025-05-19 16:05:17.739 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:05:17.742 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - 200 null application/json; charset=utf-8 539.2403ms
2025-05-19 16:05:46.348 +05:30 [INF] Application is shutting down...
2025-05-19 16:05:51.690 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 16:05:51.843 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 16:05:51.847 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 16:05:51.848 +05:30 [INF] Hosting environment: Development
2025-05-19 16:05:51.849 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 16:05:57.662 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - application/json 814
2025-05-19 16:05:57.724 +05:30 [INF] CORS policy execution failed.
2025-05-19 16:05:57.727 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 16:05:57.732 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:05:57.757 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:05:57.881 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:05:57.885 +05:30 [INF] Target Amount: 1000
2025-05-19 16:05:57.886 +05:30 [INF] Investment Horizon: 30
2025-05-19 16:05:57.889 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:05:57.923 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 16:05:57.944 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 16:05:57.947 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 16:05:57.962 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:05:57.985 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 221.0235ms
2025-05-19 16:05:57.989 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:05:57.994 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000&investmentHorizon=30 - 500 null application/json; charset=utf-8 333.6053ms
2025-05-19 16:06:14.213 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 814
2025-05-19 16:06:14.233 +05:30 [INF] CORS policy execution failed.
2025-05-19 16:06:14.235 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 16:06:14.238 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:06:14.241 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:06:14.250 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:06:14.253 +05:30 [INF] Target Amount: 10000
2025-05-19 16:06:14.256 +05:30 [INF] Investment Horizon: 30
2025-05-19 16:06:14.259 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:06:14.268 +05:30 [ERR] Invalid input detected: Target amount must be greater than zero.
System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
2025-05-19 16:06:14.273 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
2025-05-19 16:06:14.279 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Target amount must be greater than zero.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 28
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 79
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Services\ProductAllocationService.cs:line 98
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 133
2025-05-19 16:06:14.294 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:06:14.305 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 59.4984ms
2025-05-19 16:06:14.309 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:06:14.313 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 100.0004ms
2025-05-19 16:07:22.935 +05:30 [INF] Application is shutting down...
2025-05-19 16:07:27.893 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 16:07:28.012 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 16:07:28.017 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 16:07:28.019 +05:30 [INF] Hosting environment: Development
2025-05-19 16:07:28.020 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 16:07:33.562 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 814
2025-05-19 16:07:33.634 +05:30 [INF] CORS policy execution failed.
2025-05-19 16:07:33.637 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-19 16:07:33.641 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:07:33.667 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:07:33.791 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:07:33.795 +05:30 [INF] Target Amount: 10000
2025-05-19 16:07:33.797 +05:30 [INF] Investment Horizon: 30
2025-05-19 16:07:33.800 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:07:33.833 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 16:07:33.837 +05:30 [INF] Calculated investment amount: 74.62.
2025-05-19 16:07:33.838 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 16:07:33.839 +05:30 [INF] Calculated investment amount: 85.46.
2025-05-19 16:07:33.840 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 16:07:33.842 +05:30 [INF] Calculated investment amount: 15.54.
2025-05-19 16:07:33.846 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 16:07:33.849 +05:30 [INF] Calculated investment amount: 20.44.
2025-05-19 16:07:33.850 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 16:07:33.851 +05:30 [INF] Calculated investment amount: 5.04.
2025-05-19 16:07:33.852 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 16:07:33.854 +05:30 [INF] Calculated investment amount: 5.89.
2025-05-19 16:07:33.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.93, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 16:07:33.856 +05:30 [INF] Calculated investment amount: 206.62.
2025-05-19 16:07:33.857 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.57, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 16:07:33.863 +05:30 [INF] Calculated investment amount: 209.96.
2025-05-19 16:07:33.864 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.42, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 16:07:33.867 +05:30 [INF] Calculated investment amount: 47.52.
2025-05-19 16:07:33.868 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.58, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 16:07:33.869 +05:30 [INF] Calculated investment amount: 45.73.
2025-05-19 16:07:33.870 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 16:07:33.871 +05:30 [INF] Calculated investment amount: 103.53.
2025-05-19 16:07:33.872 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 16:07:33.880 +05:30 [INF] Calculated investment amount: 101.23.
2025-05-19 16:07:33.882 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 16:07:33.883 +05:30 [INF] Calculated investment amount: 36.35.
2025-05-19 16:07:33.884 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 16:07:33.886 +05:30 [INF] Calculated investment amount: 44.63.
2025-05-19 16:07:33.887 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 16:07:33.888 +05:30 [INF] Calculated investment amount: 8.42.
2025-05-19 16:07:33.889 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 16:07:33.894 +05:30 [INF] Calculated investment amount: 6.97.
2025-05-19 16:07:33.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 16:07:33.898 +05:30 [INF] Calculated investment amount: 5.97.
2025-05-19 16:07:33.899 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 16:07:33.900 +05:30 [INF] Calculated investment amount: 7.36.
2025-05-19 16:07:33.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 30.
2025-05-19 16:07:33.903 +05:30 [INF] Calculated investment amount: 12.89.
2025-05-19 16:07:33.904 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 16:07:33.905 +05:30 [INF] Calculated investment amount: 12.96.
2025-05-19 16:07:33.910 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 30.
2025-05-19 16:07:33.913 +05:30 [INF] Calculated investment amount: 32.07.
2025-05-19 16:07:33.914 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 30.
2025-05-19 16:07:33.916 +05:30 [INF] Calculated investment amount: 31.45.
2025-05-19 16:07:33.917 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 30.
2025-05-19 16:07:33.918 +05:30 [INF] Calculated investment amount: 20.91.
2025-05-19 16:07:33.919 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 30.
2025-05-19 16:07:33.920 +05:30 [INF] Calculated investment amount: 20.44.
2025-05-19 16:07:33.925 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 30.
2025-05-19 16:07:33.928 +05:30 [INF] Calculated investment amount: 14.95.
2025-05-19 16:07:33.929 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 30.
2025-05-19 16:07:33.930 +05:30 [INF] Calculated investment amount: 13.6.
2025-05-19 16:07:33.931 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 30.
2025-05-19 16:07:33.933 +05:30 [INF] Calculated investment amount: 27.3.
2025-05-19 16:07:33.934 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 30.
2025-05-19 16:07:33.935 +05:30 [INF] Calculated investment amount: 25.24.
2025-05-19 16:07:33.936 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 30.
2025-05-19 16:07:33.941 +05:30 [INF] Calculated investment amount: 5.54.
2025-05-19 16:07:33.942 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 30.
2025-05-19 16:07:33.945 +05:30 [INF] Calculated investment amount: 5.93.
2025-05-19 16:07:33.958 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:07:33.966 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:07:33.981 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 307.4299ms
2025-05-19 16:07:33.984 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:07:33.989 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 200 null application/json; charset=utf-8 429.073ms
2025-05-19 16:10:53.325 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:10:53.334 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:53.337 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 14.0651ms
2025-05-19 16:10:53.345 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-19 16:10:53.426 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:53.428 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:10:53.433 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:10:53.458 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:10:53.466 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:10:53.469 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:10:53.470 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:10:53.471 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:10:53.473 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:10:53.475 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-19 16:10:53.482 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-19 16:10:53.514 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-19 16:10:53.518 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-19 16:10:53.522 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-19 16:10:53.525 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-19 16:10:53.529 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-19 16:10:53.531 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-19 16:10:53.534 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-19 16:10:53.536 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-19 16:10:53.538 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-19 16:10:53.548 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-19 16:10:53.604 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-19 16:10:53.622 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:10:53.629 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-19 16:10:53.635 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:10:53.643 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 206.9459ms
2025-05-19 16:10:53.651 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:10:53.654 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 309.3403ms
2025-05-19 16:10:53.663 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - null null
2025-05-19 16:10:53.669 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:53.671 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 204 null null 7.7312ms
2025-05-19 16:10:53.680 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - application/json 525
2025-05-19 16:10:53.684 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:53.685 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:10:53.687 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:10:53.698 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":68.75,"SubAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"Percentage":-1.25,"SubAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"Percentage":-1.25,"SubAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-6.25,"SubAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}}
2025-05-19 16:10:53.699 +05:30 [INF] Target Amount: 100000
2025-05-19 16:10:53.700 +05:30 [INF] Investment Horizon: 21
2025-05-19 16:10:53.701 +05:30 [ERR] Invalid PercentageSplit detected: -0.21 for sub-asset Gov Bonds in asset fixedIncome
2025-05-19 16:10:53.705 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:10:53.711 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 14.4069ms
2025-05-19 16:10:53.716 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:10:53.718 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 400 null application/json; charset=utf-8 38.0549ms
2025-05-19 16:10:59.203 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:10:59.214 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:59.217 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 14.0129ms
2025-05-19 16:10:59.231 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 16:10:59.237 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:59.243 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:10:59.246 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:10:59.252 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:10:59.258 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:10:59.261 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:10:59.264 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:10:59.267 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:10:59.270 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:10:59.273 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 16:10:59.276 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 16:10:59.283 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:10:59.286 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:10:59.288 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:10:59.290 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:10:59.291 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:10:59.298 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:10:59.299 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:10:59.301 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:10:59.302 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:10:59.304 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:10:59.305 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:10:59.308 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:10:59.313 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:10:59.315 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:10:59.317 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 65.7215ms
2025-05-19 16:10:59.319 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:10:59.320 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 89.2377ms
2025-05-19 16:10:59.329 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - null null
2025-05-19 16:10:59.334 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:59.335 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 204 null null 5.8935ms
2025-05-19 16:10:59.339 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - application/json 508
2025-05-19 16:10:59.346 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:10:59.347 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:10:59.348 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:10:59.352 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 16:10:59.353 +05:30 [INF] Target Amount: 100000
2025-05-19 16:10:59.354 +05:30 [INF] Investment Horizon: 21
2025-05-19 16:10:59.359 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:10:59.362 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:10:59.364 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 13.7353ms
2025-05-19 16:10:59.366 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:10:59.367 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 400 null application/json; charset=utf-8 27.356ms
2025-05-19 16:11:02.195 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 16:11:02.212 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:11:02.215 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:11:02.218 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:11:02.222 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:11:02.225 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:11:02.225 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:11:02.226 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:11:02.231 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:11:02.232 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:11:02.233 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 16:11:02.234 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 16:11:02.236 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:11:02.237 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:11:02.239 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:11:02.240 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:11:02.241 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:11:02.242 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:11:02.249 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:11:02.252 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:11:02.253 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:11:02.254 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:11:02.255 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:11:02.258 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:11:02.259 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:11:02.260 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:11:02.267 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 45.7293ms
2025-05-19 16:11:02.268 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:11:02.270 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.5763ms
2025-05-19 16:11:02.274 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - application/json 508
2025-05-19 16:11:02.282 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:11:02.284 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:11:02.285 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:11:02.288 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 16:11:02.289 +05:30 [INF] Target Amount: 100000
2025-05-19 16:11:02.290 +05:30 [INF] Investment Horizon: 21
2025-05-19 16:11:02.291 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:11:02.293 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:11:02.299 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 11.7501ms
2025-05-19 16:11:02.301 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:11:02.303 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 400 null application/json; charset=utf-8 28.1863ms
2025-05-19 16:18:11.901 +05:30 [INF] Application is shutting down...
2025-05-19 16:18:19.629 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 16:18:19.758 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 16:18:19.763 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 16:18:19.765 +05:30 [INF] Hosting environment: Development
2025-05-19 16:18:19.767 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 16:18:25.169 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:18:25.231 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:25.241 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 73.6908ms
2025-05-19 16:18:25.253 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 16:18:25.366 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:25.376 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:18:25.404 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:18:25.513 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:18:25.543 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:18:25.545 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:18:25.554 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:18:25.557 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:18:25.558 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:18:25.559 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 16:18:25.560 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 16:18:25.573 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:18:25.576 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:18:25.577 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:18:25.579 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:18:25.580 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:18:25.581 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:18:25.582 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:18:25.583 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:18:25.593 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:18:25.594 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:18:25.622 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:18:25.632 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:18:25.636 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:18:25.645 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:18:25.661 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 249.2391ms
2025-05-19 16:18:25.664 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:18:25.667 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 414.2058ms
2025-05-19 16:18:25.673 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - null null
2025-05-19 16:18:25.678 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:25.681 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 204 null null 7.2898ms
2025-05-19 16:18:25.689 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - application/json 508
2025-05-19 16:18:25.694 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:25.695 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:18:25.708 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:18:25.761 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 16:18:25.763 +05:30 [INF] Target Amount: 100000
2025-05-19 16:18:25.765 +05:30 [INF] Investment Horizon: 21
2025-05-19 16:18:25.770 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:18:25.772 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:18:25.777 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 66.6743ms
2025-05-19 16:18:25.779 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:18:25.781 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 400 null application/json; charset=utf-8 91.3606ms
2025-05-19 16:18:28.960 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-19 16:18:28.973 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:28.975 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:18:28.977 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:18:28.981 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:18:28.985 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:18:28.989 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:18:28.990 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:18:28.991 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:18:28.993 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:18:28.994 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 16:18:28.995 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 16:18:28.997 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:18:28.998 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:18:29.000 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:18:29.001 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:18:29.002 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:18:29.008 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 16:18:29.009 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 16:18:29.011 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:18:29.012 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:18:29.014 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:18:29.016 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:18:29.020 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:18:29.022 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:18:29.023 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:18:29.025 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 45.1129ms
2025-05-19 16:18:29.027 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:18:29.034 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 73.9174ms
2025-05-19 16:18:29.040 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - application/json 508
2025-05-19 16:18:29.044 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:29.048 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:18:29.050 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:18:29.054 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 16:18:29.057 +05:30 [INF] Target Amount: 100000
2025-05-19 16:18:29.058 +05:30 [INF] Investment Horizon: 21
2025-05-19 16:18:29.059 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:18:29.061 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:18:29.066 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 13.9282ms
2025-05-19 16:18:29.068 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:18:29.069 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=21 - 400 null application/json; charset=utf-8 29.3343ms
2025-05-19 16:18:41.155 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:18:41.166 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.168 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.1666ms
2025-05-19 16:18:41.174 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 16:18:41.182 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.184 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:18:41.185 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:18:41.190 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:18:41.196 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:18:41.197 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 16:18:41.199 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 16:18:41.201 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:18:41.202 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:18:41.203 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:18:41.209 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:18:41.217 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 16:18:41.219 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 16:18:41.220 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 16:18:41.221 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 16:18:41.226 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 16:18:41.228 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 16:18:41.230 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 16:18:41.232 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 16:18:41.234 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 16:18:41.235 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 16:18:41.236 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 16:18:41.239 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:18:41.245 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 16:18:41.247 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:18:41.248 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 60.1638ms
2025-05-19 16:18:41.250 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:18:41.251 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 77.2576ms
2025-05-19 16:18:41.260 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=21 - null null
2025-05-19 16:18:41.264 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.265 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=21 - 204 null null 4.9638ms
2025-05-19 16:18:41.269 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=21 - application/json 483
2025-05-19 16:18:41.278 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.279 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:18:41.282 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:18:41.289 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 16:18:41.295 +05:30 [INF] Target Amount: 10000
2025-05-19 16:18:41.298 +05:30 [INF] Investment Horizon: 21
2025-05-19 16:18:41.305 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:18:41.346 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.38, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 21.
2025-05-19 16:18:41.354 +05:30 [INF] Calculated investment amount: 126.75.
2025-05-19 16:18:41.357 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.62, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 21.
2025-05-19 16:18:41.370 +05:30 [INF] Calculated investment amount: 135.78.
2025-05-19 16:18:41.373 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 21.
2025-05-19 16:18:41.380 +05:30 [INF] Calculated investment amount: 60.52.
2025-05-19 16:18:41.383 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.32, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 21.
2025-05-19 16:18:41.388 +05:30 [INF] Calculated investment amount: 70.62.
2025-05-19 16:18:41.391 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.95, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 21.
2025-05-19 16:18:41.398 +05:30 [INF] Calculated investment amount: 44.36.
2025-05-19 16:18:41.401 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.55, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 21.
2025-05-19 16:18:41.406 +05:30 [INF] Calculated investment amount: 48.47.
2025-05-19 16:18:41.413 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 21.
2025-05-19 16:18:41.417 +05:30 [INF] Calculated investment amount: 192.39.
2025-05-19 16:18:41.420 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 21.
2025-05-19 16:18:41.430 +05:30 [INF] Calculated investment amount: 192.03.
2025-05-19 16:18:41.433 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 21.
2025-05-19 16:18:41.437 +05:30 [INF] Calculated investment amount: 172.07.
2025-05-19 16:18:41.440 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 21.
2025-05-19 16:18:41.451 +05:30 [INF] Calculated investment amount: 169.33.
2025-05-19 16:18:41.454 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 21.
2025-05-19 16:18:41.463 +05:30 [INF] Calculated investment amount: 167.63.
2025-05-19 16:18:41.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 21.
2025-05-19 16:18:41.467 +05:30 [INF] Calculated investment amount: 166.71.
2025-05-19 16:18:41.469 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 21.
2025-05-19 16:18:41.472 +05:30 [INF] Calculated investment amount: 45.65.
2025-05-19 16:18:41.478 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 21.
2025-05-19 16:18:41.480 +05:30 [INF] Calculated investment amount: 49.62.
2025-05-19 16:18:41.482 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 21.
2025-05-19 16:18:41.485 +05:30 [INF] Calculated investment amount: 22.37.
2025-05-19 16:18:41.487 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 21.
2025-05-19 16:18:41.493 +05:30 [INF] Calculated investment amount: 20.16.
2025-05-19 16:18:41.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 21.
2025-05-19 16:18:41.498 +05:30 [INF] Calculated investment amount: 29.75.
2025-05-19 16:18:41.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 21.
2025-05-19 16:18:41.502 +05:30 [INF] Calculated investment amount: 32.6.
2025-05-19 16:18:41.507 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 16:18:41.509 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 16:18:41.511 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 16:18:41.513 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 21.
2025-05-19 16:18:41.516 +05:30 [INF] Calculated investment amount: 30.21.
2025-05-19 16:18:41.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 21.
2025-05-19 16:18:41.524 +05:30 [INF] Calculated investment amount: 28.85.
2025-05-19 16:18:41.525 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 21.
2025-05-19 16:18:41.528 +05:30 [INF] Calculated investment amount: 30.74.
2025-05-19 16:18:41.530 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 21.
2025-05-19 16:18:41.532 +05:30 [INF] Calculated investment amount: 29.6.
2025-05-19 16:18:41.533 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 21.
2025-05-19 16:18:41.535 +05:30 [INF] Calculated investment amount: 24.84.
2025-05-19 16:18:41.536 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 21.
2025-05-19 16:18:41.538 +05:30 [INF] Calculated investment amount: 25.83.
2025-05-19 16:18:41.556 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:18:41.563 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:18:41.569 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 283.1522ms
2025-05-19 16:18:41.573 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:18:41.584 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=21 - 200 null application/json; charset=utf-8 314.3239ms
2025-05-19 16:18:41.625 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:18:41.631 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:18:41.631 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.636 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.636 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.5895ms
2025-05-19 16:18:41.638 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.6774ms
2025-05-19 16:18:41.646 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:18:41.651 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:18:41.659 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.659 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:18:41.665 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:18:41.666 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:18:41.676 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:18:41.677 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:18:41.687 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:18:41.696 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:18:41.699 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:18:41.701 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:18:41.705 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 21.1877ms
2025-05-19 16:18:41.708 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:18:41.710 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 29.6323ms
2025-05-19 16:18:41.715 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 68.7322ms
2025-05-19 16:18:41.717 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:18:41.723 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 72.3615ms
2025-05-19 16:19:01.161 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:19:01.168 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.169 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.0065ms
2025-05-19 16:19:01.174 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-19 16:19:01.209 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.211 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:01.212 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:01.222 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:19:01.224 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:19:01.225 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:19:01.226 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:19:01.229 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-19 16:19:01.230 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-19 16:19:01.236 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-19 16:19:01.238 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-19 16:19:01.242 +05:30 [INF] Sub-allocations for equity: {"Large Cap":8.33,"Mid Cap":11.11,"Small Cap":13.89}
2025-05-19 16:19:01.245 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:19:01.247 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.11,"Energy":2.78,"Agriculture":2.78}
2025-05-19 16:19:01.255 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-19 16:19:01.258 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-19 16:19:01.261 +05:30 [INF] Added sub-assets for equity: {"Large Cap":8.33,"Mid Cap":11.11,"Small Cap":13.89}
2025-05-19 16:19:01.264 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:19:01.271 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.11,"Energy":2.78,"Agriculture":2.78}
2025-05-19 16:19:01.273 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-19 16:19:01.276 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-19 16:19:01.279 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":33.33,"subAssets":{"Large Cap":8.33,"Mid Cap":11.11,"Small Cap":13.89}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":6.67,"subAssets":{"Precious Metals":1.11,"Energy":2.78,"Agriculture":2.78}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-19 16:19:01.286 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:19:01.290 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":33.33,"subAssets":{"Large Cap":8.33,"Mid Cap":11.11,"Small Cap":13.89}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":6.67,"subAssets":{"Precious Metals":1.11,"Energy":2.78,"Agriculture":2.78}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-19 16:19:01.292 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:19:01.294 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 73.0289ms
2025-05-19 16:19:01.297 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:01.303 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 129.1921ms
2025-05-19 16:19:01.309 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 16:19:01.312 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.313 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 4.4038ms
2025-05-19 16:19:01.321 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 499
2025-05-19 16:19:01.325 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.326 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:01.328 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:01.331 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":33.33,"SubAssets":{"Large Cap":8.33,"Mid Cap":11.11,"Small Cap":13.89}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":6.67,"SubAssets":{"Precious Metals":1.11,"Energy":2.78,"Agriculture":2.78}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":0,"SubAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}}
2025-05-19 16:19:01.338 +05:30 [INF] Target Amount: 10000
2025-05-19 16:19:01.339 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:19:01.342 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:19:01.346 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.34, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 16:19:01.358 +05:30 [INF] Calculated investment amount: 27.36.
2025-05-19 16:19:01.361 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:01.365 +05:30 [INF] Calculated investment amount: 31.08.
2025-05-19 16:19:01.375 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.91, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 16:19:01.378 +05:30 [INF] Calculated investment amount: 19.42.
2025-05-19 16:19:01.380 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.2, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 16:19:01.387 +05:30 [INF] Calculated investment amount: 25.21.
2025-05-19 16:19:01.389 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 16:19:01.392 +05:30 [INF] Calculated investment amount: 16.
2025-05-19 16:19:01.394 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 16:19:01.397 +05:30 [INF] Calculated investment amount: 18.5.
2025-05-19 16:19:01.401 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:01.404 +05:30 [INF] Calculated investment amount: 41.3.
2025-05-19 16:19:01.406 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 16:19:01.408 +05:30 [INF] Calculated investment amount: 41.85.
2025-05-19 16:19:01.409 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 16:19:01.413 +05:30 [INF] Calculated investment amount: 96.76.
2025-05-19 16:19:01.419 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 16:19:01.422 +05:30 [INF] Calculated investment amount: 93.16.
2025-05-19 16:19:01.423 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 16:19:01.425 +05:30 [INF] Calculated investment amount: 34.72.
2025-05-19 16:19:01.427 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 16:19:01.428 +05:30 [INF] Calculated investment amount: 33.86.
2025-05-19 16:19:01.430 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.61, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 16:19:01.432 +05:30 [INF] Calculated investment amount: 6.91.
2025-05-19 16:19:01.437 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.5, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 16:19:01.439 +05:30 [INF] Calculated investment amount: 8.5.
2025-05-19 16:19:01.441 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.31, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:01.443 +05:30 [INF] Calculated investment amount: 10.21.
2025-05-19 16:19:01.444 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.47, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 16:19:01.446 +05:30 [INF] Calculated investment amount: 8.56.
2025-05-19 16:19:01.447 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.52, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 16:19:01.454 +05:30 [INF] Calculated investment amount: 14.27.
2025-05-19 16:19:01.455 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.26, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 16:19:01.457 +05:30 [INF] Calculated investment amount: 17.71.
2025-05-19 16:19:01.458 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 29.
2025-05-19 16:19:01.460 +05:30 [INF] Calculated investment amount: 234.5.
2025-05-19 16:19:01.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:01.463 +05:30 [INF] Calculated investment amount: 238.09.
2025-05-19 16:19:01.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.67, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 29.
2025-05-19 16:19:01.471 +05:30 [INF] Calculated investment amount: 172.21.
2025-05-19 16:19:01.473 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.33, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 29.
2025-05-19 16:19:01.475 +05:30 [INF] Calculated investment amount: 170.91.
2025-05-19 16:19:01.476 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.86, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 29.
2025-05-19 16:19:01.480 +05:30 [INF] Calculated investment amount: 114.86.
2025-05-19 16:19:01.490 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 29.
2025-05-19 16:19:01.494 +05:30 [INF] Calculated investment amount: 111.84.
2025-05-19 16:19:01.497 +05:30 [INF] Skipping sub-asset REITs in asset class realEstate due to zero percentage split.
2025-05-19 16:19:01.507 +05:30 [INF] Skipping sub-asset Residential Prop in asset class realEstate due to zero percentage split.
2025-05-19 16:19:01.511 +05:30 [INF] Skipping sub-asset Commercial Prop in asset class realEstate due to zero percentage split.
2025-05-19 16:19:01.525 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:19:01.528 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:01.533 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 202.0295ms
2025-05-19 16:19:01.540 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:01.542 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 220.3508ms
2025-05-19 16:19:01.563 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:01.567 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:01.570 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.573 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.574 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.7356ms
2025-05-19 16:19:01.575 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.8341ms
2025-05-19 16:19:01.580 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:01.585 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:01.589 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.598 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:01.598 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:01.599 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:01.601 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:01.603 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:01.606 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:19:01.617 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:01.618 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:19:01.623 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 9.6099ms
2025-05-19 16:19:01.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:01.628 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:01.632 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 26.3886ms
2025-05-19 16:19:01.643 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 58.4638ms
2025-05-19 16:19:01.647 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:01.664 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 84.2184ms
2025-05-19 16:19:14.842 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:19:14.848 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:14.850 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.876ms
2025-05-19 16:19:14.854 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 16:19:14.861 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:14.862 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:14.864 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:14.867 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:19:14.869 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:19:14.870 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:19:14.875 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:19:14.876 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-19 16:19:14.877 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-19 16:19:14.879 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:19:14.880 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:19:14.881 +05:30 [INF] Sub-allocations for equity: {"Large Cap":8.75,"Mid Cap":11.67,"Small Cap":14.58}
2025-05-19 16:19:14.883 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}
2025-05-19 16:19:14.884 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:19:14.889 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-19 16:19:14.892 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:19:14.893 +05:30 [INF] Added sub-assets for equity: {"Large Cap":8.75,"Mid Cap":11.67,"Small Cap":14.58}
2025-05-19 16:19:14.895 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}
2025-05-19 16:19:14.897 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:19:14.900 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-19 16:19:14.903 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 16:19:14.912 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":8.75,"Mid Cap":11.67,"Small Cap":14.58}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:19:14.918 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:19:14.920 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":8.75,"Mid Cap":11.67,"Small Cap":14.58}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 16:19:14.929 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:19:14.931 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 64.7343ms
2025-05-19 16:19:14.934 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:14.936 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 82.4534ms
2025-05-19 16:19:14.947 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 16:19:14.951 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:14.953 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 6.2353ms
2025-05-19 16:19:14.962 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 504
2025-05-19 16:19:14.968 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:14.970 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:14.977 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:14.982 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":35,"SubAssets":{"Large Cap":8.75,"Mid Cap":11.67,"Small Cap":14.58}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 16:19:14.985 +05:30 [INF] Target Amount: 10000
2025-05-19 16:19:14.987 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:19:14.996 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:19:14.999 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.56, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 16:19:15.002 +05:30 [INF] Calculated investment amount: 28.75.
2025-05-19 16:19:15.004 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:15.015 +05:30 [INF] Calculated investment amount: 32.64.
2025-05-19 16:19:15.018 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.21, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 16:19:15.027 +05:30 [INF] Calculated investment amount: 20.4.
2025-05-19 16:19:15.029 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.46, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 16:19:15.033 +05:30 [INF] Calculated investment amount: 26.47.
2025-05-19 16:19:15.036 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.5, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 16:19:15.045 +05:30 [INF] Calculated investment amount: 16.78.
2025-05-19 16:19:15.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.08, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 16:19:15.049 +05:30 [INF] Calculated investment amount: 19.43.
2025-05-19 16:19:15.050 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.4, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:15.052 +05:30 [INF] Calculated investment amount: 82.6.
2025-05-19 16:19:15.053 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.27, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 16:19:15.061 +05:30 [INF] Calculated investment amount: 83.96.
2025-05-19 16:19:15.062 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.05, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 16:19:15.064 +05:30 [INF] Calculated investment amount: 193.66.
2025-05-19 16:19:15.065 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.62, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 16:19:15.067 +05:30 [INF] Calculated investment amount: 186.33.
2025-05-19 16:19:15.068 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.28, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 16:19:15.070 +05:30 [INF] Calculated investment amount: 69.43.
2025-05-19 16:19:15.077 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.39, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 16:19:15.080 +05:30 [INF] Calculated investment amount: 67.92.
2025-05-19 16:19:15.081 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 16:19:15.084 +05:30 [INF] Calculated investment amount: 10.42.
2025-05-19 16:19:15.085 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 16:19:15.092 +05:30 [INF] Calculated investment amount: 12.75.
2025-05-19 16:19:15.094 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:15.096 +05:30 [INF] Calculated investment amount: 15.35.
2025-05-19 16:19:15.098 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 16:19:15.100 +05:30 [INF] Calculated investment amount: 12.82.
2025-05-19 16:19:15.101 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 16:19:15.108 +05:30 [INF] Calculated investment amount: 21.5.
2025-05-19 16:19:15.110 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 16:19:15.112 +05:30 [INF] Calculated investment amount: 26.43.
2025-05-19 16:19:15.113 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 29.
2025-05-19 16:19:15.115 +05:30 [INF] Calculated investment amount: 58.63.
2025-05-19 16:19:15.116 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:15.124 +05:30 [INF] Calculated investment amount: 59.52.
2025-05-19 16:19:15.125 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.17, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 29.
2025-05-19 16:19:15.127 +05:30 [INF] Calculated investment amount: 43.14.
2025-05-19 16:19:15.128 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.33, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 29.
2025-05-19 16:19:15.130 +05:30 [INF] Calculated investment amount: 42.65.
2025-05-19 16:19:15.131 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 29.
2025-05-19 16:19:15.133 +05:30 [INF] Calculated investment amount: 28.6.
2025-05-19 16:19:15.139 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 29.
2025-05-19 16:19:15.142 +05:30 [INF] Calculated investment amount: 28.07.
2025-05-19 16:19:15.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.54, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 16:19:15.146 +05:30 [INF] Calculated investment amount: 4.56.
2025-05-19 16:19:15.147 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 16:19:15.149 +05:30 [INF] Calculated investment amount: 4.1.
2025-05-19 16:19:15.150 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.53, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 16:19:15.157 +05:30 [INF] Calculated investment amount: 8.08.
2025-05-19 16:19:15.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.58, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 16:19:15.163 +05:30 [INF] Calculated investment amount: 7.52.
2025-05-19 16:19:15.165 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 16:19:15.172 +05:30 [INF] Calculated investment amount: 8.49.
2025-05-19 16:19:15.174 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 16:19:15.177 +05:30 [INF] Calculated investment amount: 9.04.
2025-05-19 16:19:15.183 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:19:15.186 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:15.197 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 215.2445ms
2025-05-19 16:19:15.201 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:15.203 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 241.7152ms
2025-05-19 16:19:15.251 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:15.254 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:15.263 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:15.288 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:15.291 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 39.2682ms
2025-05-19 16:19:15.292 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 38.7977ms
2025-05-19 16:19:15.308 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:15.313 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:15.322 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:15.327 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:15.330 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:15.331 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:15.334 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:15.336 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:15.346 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:19:15.353 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:15.354 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:19:15.365 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 14.5144ms
2025-05-19 16:19:15.366 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:15.370 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:15.373 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 27.0373ms
2025-05-19 16:19:15.374 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 61.6037ms
2025-05-19 16:19:15.376 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:15.387 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 79.0035ms
2025-05-19 16:19:29.520 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:19:29.530 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:29.531 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 10.8571ms
2025-05-19 16:19:29.542 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-19 16:19:29.547 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:29.550 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:29.552 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:29.562 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:19:29.565 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:19:29.566 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:19:29.567 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:19:29.568 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-19 16:19:29.569 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-19 16:19:29.570 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 16:19:29.572 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 16:19:29.577 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-19 16:19:29.582 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 16:19:29.584 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:19:29.585 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-19 16:19:29.586 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-19 16:19:29.587 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-19 16:19:29.589 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 16:19:29.594 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:19:29.597 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-19 16:19:29.598 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-19 16:19:29.601 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-19 16:19:29.608 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:19:29.613 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-19 16:19:29.615 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:19:29.618 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 57.6822ms
2025-05-19 16:19:29.620 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:29.627 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 85.1086ms
2025-05-19 16:19:29.635 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 16:19:29.640 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:29.641 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 5.9736ms
2025-05-19 16:19:29.645 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 486
2025-05-19 16:19:29.648 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:29.649 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:29.651 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:29.655 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"Percentage":0,"SubAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}}
2025-05-19 16:19:29.657 +05:30 [INF] Target Amount: 10000
2025-05-19 16:19:29.659 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:19:29.673 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:19:29.677 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 16:19:29.683 +05:30 [INF] Calculated investment amount: 41.04.
2025-05-19 16:19:29.685 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:29.690 +05:30 [INF] Calculated investment amount: 46.66.
2025-05-19 16:19:29.692 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.87, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 16:19:29.707 +05:30 [INF] Calculated investment amount: 29.14.
2025-05-19 16:19:29.709 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.8, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 16:19:29.716 +05:30 [INF] Calculated investment amount: 37.82.
2025-05-19 16:19:29.718 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 16:19:29.723 +05:30 [INF] Calculated investment amount: 23.99.
2025-05-19 16:19:29.726 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.11, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 16:19:29.738 +05:30 [INF] Calculated investment amount: 27.75.
2025-05-19 16:19:29.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:29.750 +05:30 [INF] Calculated investment amount: 61.95.
2025-05-19 16:19:29.753 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 16:19:29.757 +05:30 [INF] Calculated investment amount: 62.91.
2025-05-19 16:19:29.760 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.78, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 16:19:29.771 +05:30 [INF] Calculated investment amount: 145.14.
2025-05-19 16:19:29.773 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.22, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 16:19:29.785 +05:30 [INF] Calculated investment amount: 139.82.
2025-05-19 16:19:29.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.46, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 16:19:29.792 +05:30 [INF] Calculated investment amount: 52.07.
2025-05-19 16:19:29.802 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.54, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 16:19:29.806 +05:30 [INF] Calculated investment amount: 50.89.
2025-05-19 16:19:29.809 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 16:19:29.820 +05:30 [INF] Calculated investment amount: 10.42.
2025-05-19 16:19:29.822 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 16:19:29.834 +05:30 [INF] Calculated investment amount: 12.75.
2025-05-19 16:19:29.837 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:29.848 +05:30 [INF] Calculated investment amount: 15.35.
2025-05-19 16:19:29.851 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 16:19:29.856 +05:30 [INF] Calculated investment amount: 12.82.
2025-05-19 16:19:29.859 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 16:19:29.870 +05:30 [INF] Calculated investment amount: 21.5.
2025-05-19 16:19:29.872 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 16:19:29.875 +05:30 [INF] Calculated investment amount: 26.43.
2025-05-19 16:19:29.876 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 29.
2025-05-19 16:19:29.884 +05:30 [INF] Calculated investment amount: 58.63.
2025-05-19 16:19:29.886 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:29.891 +05:30 [INF] Calculated investment amount: 59.52.
2025-05-19 16:19:29.893 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.17, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 29.
2025-05-19 16:19:29.906 +05:30 [INF] Calculated investment amount: 43.14.
2025-05-19 16:19:29.908 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.33, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 29.
2025-05-19 16:19:29.917 +05:30 [INF] Calculated investment amount: 42.65.
2025-05-19 16:19:29.920 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 29.
2025-05-19 16:19:29.924 +05:30 [INF] Calculated investment amount: 28.6.
2025-05-19 16:19:29.927 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 29.
2025-05-19 16:19:29.937 +05:30 [INF] Calculated investment amount: 28.07.
2025-05-19 16:19:29.938 +05:30 [INF] Skipping sub-asset REITs in asset class realEstate due to zero percentage split.
2025-05-19 16:19:29.941 +05:30 [INF] Skipping sub-asset Residential Prop in asset class realEstate due to zero percentage split.
2025-05-19 16:19:29.946 +05:30 [INF] Skipping sub-asset Commercial Prop in asset class realEstate due to zero percentage split.
2025-05-19 16:19:29.951 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:19:29.953 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:29.955 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 301.3562ms
2025-05-19 16:19:29.957 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:29.963 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 317.8395ms
2025-05-19 16:19:29.981 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:29.985 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:29.986 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:29.986 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 4.9146ms
2025-05-19 16:19:29.990 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:29.999 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:30.000 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 13.9806ms
2025-05-19 16:19:30.004 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:30.009 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:30.008 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:30.016 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:30.020 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:30.024 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:30.024 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:30.026 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.4599ms
2025-05-19 16:19:30.032 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:30.033 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:30.036 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:19:30.037 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 38.5729ms
2025-05-19 16:19:30.039 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:19:30.044 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:30.050 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.2151ms
2025-05-19 16:19:30.052 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:30.054 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 46.1407ms
2025-05-19 16:19:45.814 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:19:45.822 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:45.823 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.9896ms
2025-05-19 16:19:45.828 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-19 16:19:45.832 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:45.833 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:45.838 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:45.842 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:19:45.845 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:19:45.846 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:19:45.848 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:19:45.849 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-19 16:19:45.850 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-19 16:19:45.856 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-19 16:19:45.857 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-19 16:19:45.859 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-19 16:19:45.860 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 16:19:45.861 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:19:45.863 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-19 16:19:45.865 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-19 16:19:45.872 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-19 16:19:45.873 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 16:19:45.875 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:19:45.877 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-19 16:19:45.878 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-19 16:19:45.879 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-19 16:19:45.882 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:19:45.883 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-19 16:19:45.890 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:19:45.892 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 49.4895ms
2025-05-19 16:19:45.894 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:19:45.895 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 67.0565ms
2025-05-19 16:19:45.902 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 16:19:45.907 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:45.908 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 5.9818ms
2025-05-19 16:19:45.912 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 486
2025-05-19 16:19:45.916 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:45.918 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:45.920 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:45.922 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"Percentage":0,"SubAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}}
2025-05-19 16:19:45.924 +05:30 [INF] Target Amount: 10000
2025-05-19 16:19:45.933 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:19:45.935 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:19:45.938 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 16:19:45.941 +05:30 [INF] Calculated investment amount: 41.04.
2025-05-19 16:19:45.942 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:45.944 +05:30 [INF] Calculated investment amount: 46.66.
2025-05-19 16:19:45.945 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.87, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 16:19:45.947 +05:30 [INF] Calculated investment amount: 29.14.
2025-05-19 16:19:45.948 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.8, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 16:19:45.950 +05:30 [INF] Calculated investment amount: 37.82.
2025-05-19 16:19:45.956 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 16:19:45.960 +05:30 [INF] Calculated investment amount: 23.99.
2025-05-19 16:19:45.963 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.11, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 16:19:45.967 +05:30 [INF] Calculated investment amount: 27.75.
2025-05-19 16:19:45.977 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:45.982 +05:30 [INF] Calculated investment amount: 61.95.
2025-05-19 16:19:45.989 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 16:19:45.994 +05:30 [INF] Calculated investment amount: 62.91.
2025-05-19 16:19:45.996 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.78, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 16:19:46.001 +05:30 [INF] Calculated investment amount: 145.14.
2025-05-19 16:19:46.010 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.22, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 16:19:46.014 +05:30 [INF] Calculated investment amount: 139.82.
2025-05-19 16:19:46.017 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.46, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 16:19:46.028 +05:30 [INF] Calculated investment amount: 52.07.
2025-05-19 16:19:46.031 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.54, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 16:19:46.041 +05:30 [INF] Calculated investment amount: 50.89.
2025-05-19 16:19:46.044 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 16:19:46.048 +05:30 [INF] Calculated investment amount: 10.42.
2025-05-19 16:19:46.058 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 16:19:46.062 +05:30 [INF] Calculated investment amount: 12.75.
2025-05-19 16:19:46.065 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:19:46.074 +05:30 [INF] Calculated investment amount: 15.35.
2025-05-19 16:19:46.077 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 16:19:46.081 +05:30 [INF] Calculated investment amount: 12.82.
2025-05-19 16:19:46.084 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 16:19:46.094 +05:30 [INF] Calculated investment amount: 21.5.
2025-05-19 16:19:46.097 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 16:19:46.108 +05:30 [INF] Calculated investment amount: 26.43.
2025-05-19 16:19:46.111 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 29.
2025-05-19 16:19:46.115 +05:30 [INF] Calculated investment amount: 58.63.
2025-05-19 16:19:46.125 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:19:46.129 +05:30 [INF] Calculated investment amount: 59.52.
2025-05-19 16:19:46.132 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.17, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 29.
2025-05-19 16:19:46.144 +05:30 [INF] Calculated investment amount: 43.14.
2025-05-19 16:19:46.147 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.33, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 29.
2025-05-19 16:19:46.155 +05:30 [INF] Calculated investment amount: 42.65.
2025-05-19 16:19:46.156 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 29.
2025-05-19 16:19:46.159 +05:30 [INF] Calculated investment amount: 28.6.
2025-05-19 16:19:46.160 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 29.
2025-05-19 16:19:46.163 +05:30 [INF] Calculated investment amount: 28.07.
2025-05-19 16:19:46.165 +05:30 [INF] Skipping sub-asset REITs in asset class realEstate due to zero percentage split.
2025-05-19 16:19:46.172 +05:30 [INF] Skipping sub-asset Residential Prop in asset class realEstate due to zero percentage split.
2025-05-19 16:19:46.173 +05:30 [INF] Skipping sub-asset Commercial Prop in asset class realEstate due to zero percentage split.
2025-05-19 16:19:46.177 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:19:46.178 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:46.184 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 262.109ms
2025-05-19 16:19:46.187 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:19:46.189 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 277.0486ms
2025-05-19 16:19:46.213 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:46.215 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:46.218 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:46.221 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:46.222 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.6499ms
2025-05-19 16:19:46.223 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.2992ms
2025-05-19 16:19:46.227 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:19:46.231 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:19:46.237 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:46.246 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:19:46.247 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:46.249 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:46.251 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:19:46.261 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:19:46.265 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:19:46.269 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:46.269 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:19:46.272 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.9954ms
2025-05-19 16:19:46.273 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:19:46.275 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:19:46.276 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.7272ms
2025-05-19 16:19:46.283 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 51.352ms
2025-05-19 16:19:46.285 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:19:46.290 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 62.7799ms
2025-05-19 16:20:02.008 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:20:02.015 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.016 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.4862ms
2025-05-19 16:20:02.021 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 16:20:02.030 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.031 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:20:02.032 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:20:02.035 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:20:02.037 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:20:02.038 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:20:02.039 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:20:02.046 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-19 16:20:02.047 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-19 16:20:02.048 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-19 16:20:02.049 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-19 16:20:02.052 +05:30 [INF] Sub-allocations for equity: {"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}
2025-05-19 16:20:02.054 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 16:20:02.055 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}
2025-05-19 16:20:02.061 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}
2025-05-19 16:20:02.063 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}
2025-05-19 16:20:02.065 +05:30 [INF] Added sub-assets for equity: {"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}
2025-05-19 16:20:02.066 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 16:20:02.067 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}
2025-05-19 16:20:02.068 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}
2025-05-19 16:20:02.074 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}
2025-05-19 16:20:02.076 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}},"cash":{"percentage":16.67,"subAssets":{"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}},"realEstate":{"percentage":6.67,"subAssets":{"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}}}
2025-05-19 16:20:02.079 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:20:02.081 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}},"cash":{"percentage":16.67,"subAssets":{"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}},"realEstate":{"percentage":6.67,"subAssets":{"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}}}
2025-05-19 16:20:02.082 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:20:02.084 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 48.6059ms
2025-05-19 16:20:02.086 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:20:02.087 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 65.6145ms
2025-05-19 16:20:02.092 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 16:20:02.103 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.104 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 11.9275ms
2025-05-19 16:20:02.109 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 503
2025-05-19 16:20:02.113 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.114 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:20:02.115 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:20:02.117 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"Percentage":16.67,"SubAssets":{"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}},"cash":{"Percentage":16.67,"SubAssets":{"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}},"realEstate":{"Percentage":6.67,"SubAssets":{"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}}}}
2025-05-19 16:20:02.119 +05:30 [INF] Target Amount: 10000
2025-05-19 16:20:02.120 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:20:02.121 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:20:02.123 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 16:20:02.131 +05:30 [INF] Calculated investment amount: 24.65.
2025-05-19 16:20:02.132 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.59, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:20:02.134 +05:30 [INF] Calculated investment amount: 27.97.
2025-05-19 16:20:02.135 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 16:20:02.137 +05:30 [INF] Calculated investment amount: 17.48.
2025-05-19 16:20:02.138 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 16:20:02.147 +05:30 [INF] Calculated investment amount: 22.69.
2025-05-19 16:20:02.148 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.43, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 16:20:02.150 +05:30 [INF] Calculated investment amount: 14.39.
2025-05-19 16:20:02.151 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.07, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 16:20:02.153 +05:30 [INF] Calculated investment amount: 16.66.
2025-05-19 16:20:02.154 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:20:02.156 +05:30 [INF] Calculated investment amount: 61.95.
2025-05-19 16:20:02.158 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 16:20:02.161 +05:30 [INF] Calculated investment amount: 62.91.
2025-05-19 16:20:02.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.78, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 16:20:02.164 +05:30 [INF] Calculated investment amount: 145.14.
2025-05-19 16:20:02.172 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.22, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 16:20:02.174 +05:30 [INF] Calculated investment amount: 139.82.
2025-05-19 16:20:02.176 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.46, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 16:20:02.179 +05:30 [INF] Calculated investment amount: 52.07.
2025-05-19 16:20:02.180 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.54, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 16:20:02.182 +05:30 [INF] Calculated investment amount: 50.89.
2025-05-19 16:20:02.183 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.54, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 16:20:02.186 +05:30 [INF] Calculated investment amount: 17.44.
2025-05-19 16:20:02.187 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.24, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 16:20:02.196 +05:30 [INF] Calculated investment amount: 21.08.
2025-05-19 16:20:02.197 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.27, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:20:02.199 +05:30 [INF] Calculated investment amount: 25.47.
2025-05-19 16:20:02.200 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 16:20:02.202 +05:30 [INF] Calculated investment amount: 21.38.
2025-05-19 16:20:02.203 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.81, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 16:20:02.206 +05:30 [INF] Calculated investment amount: 35.77.
2025-05-19 16:20:02.212 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 16:20:02.215 +05:30 [INF] Calculated investment amount: 44.
2025-05-19 16:20:02.217 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.25, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 29.
2025-05-19 16:20:02.221 +05:30 [INF] Calculated investment amount: 97.71.
2025-05-19 16:20:02.230 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.08, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:20:02.234 +05:30 [INF] Calculated investment amount: 99.12.
2025-05-19 16:20:02.237 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.95, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 29.
2025-05-19 16:20:02.246 +05:30 [INF] Calculated investment amount: 71.91.
2025-05-19 16:20:02.248 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.22, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 29.
2025-05-19 16:20:02.251 +05:30 [INF] Calculated investment amount: 71.18.
2025-05-19 16:20:02.253 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.03, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 29.
2025-05-19 16:20:02.262 +05:30 [INF] Calculated investment amount: 47.98.
2025-05-19 16:20:02.265 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.14, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 29.
2025-05-19 16:20:02.269 +05:30 [INF] Calculated investment amount: 46.56.
2025-05-19 16:20:02.271 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.72, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 16:20:02.283 +05:30 [INF] Calculated investment amount: 6.07.
2025-05-19 16:20:02.286 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 16:20:02.290 +05:30 [INF] Calculated investment amount: 5.47.
2025-05-19 16:20:02.299 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 16:20:02.303 +05:30 [INF] Calculated investment amount: 10.83.
2025-05-19 16:20:02.306 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.77, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 16:20:02.316 +05:30 [INF] Calculated investment amount: 9.98.
2025-05-19 16:20:02.318 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.89, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 16:20:02.321 +05:30 [INF] Calculated investment amount: 11.3.
2025-05-19 16:20:02.323 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 16:20:02.328 +05:30 [INF] Calculated investment amount: 12.03.
2025-05-19 16:20:02.332 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:20:02.333 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:20:02.336 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 219.2439ms
2025-05-19 16:20:02.338 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:20:02.344 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 234.7767ms
2025-05-19 16:20:02.368 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:20:02.371 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.373 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 5.5584ms
2025-05-19 16:20:02.374 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:20:02.382 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:20:02.402 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.415 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.415 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 41.5448ms
2025-05-19 16:20:02.417 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:20:02.423 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:20:02.432 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:20:02.435 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:20:02.438 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:20:02.438 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:20:02.440 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:20:02.443 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.4805ms
2025-05-19 16:20:02.445 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:20:02.448 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:20:02.450 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:20:02.451 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 69.2128ms
2025-05-19 16:20:02.453 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:20:02.464 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 18.7645ms
2025-05-19 16:20:02.466 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:20:02.468 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 45.2183ms
2025-05-19 16:34:08.799 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 16:34:08.806 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:34:08.808 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 9.0964ms
2025-05-19 16:34:08.813 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 16:34:08.816 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:34:08.818 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 16:34:08.826 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 16:34:09.161 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:34:09.169 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 339.0911ms
2025-05-19 16:34:09.174 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 16:34:09.177 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 363.9452ms
2025-05-19 16:35:50.594 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:35:50.623 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:50.628 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 34.7084ms
2025-05-19 16:35:50.663 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-19 16:35:50.686 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:50.690 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:35:50.696 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:35:50.715 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:35:50.724 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:35:50.739 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:35:50.744 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:35:50.755 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:35:50.760 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:35:50.765 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:35:50.777 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:35:50.784 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:35:50.790 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:35:50.803 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:35:50.810 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:35:50.823 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:35:50.829 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:35:50.845 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:35:50.852 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:35:50.859 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:35:50.878 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:35:50.893 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:35:50.908 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:35:50.916 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:35:50.923 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:35:50.941 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 226.6004ms
2025-05-19 16:35:50.950 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:35:50.961 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 298.452ms
2025-05-19 16:35:50.983 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - null null
2025-05-19 16:35:51.006 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:51.011 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - 204 null null 27.1758ms
2025-05-19 16:35:51.033 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - application/json 513
2025-05-19 16:35:51.046 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:51.060 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:35:51.074 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:35:51.085 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 16:35:51.091 +05:30 [INF] Target Amount: 10000000
2025-05-19 16:35:51.106 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:35:51.110 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:35:51.123 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:35:51.130 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 46.4674ms
2025-05-19 16:35:51.144 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:35:51.149 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - 400 null application/json; charset=utf-8 115.3413ms
2025-05-19 16:35:56.323 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:35:56.335 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:56.337 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.9174ms
2025-05-19 16:35:56.343 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-19 16:35:56.347 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:56.349 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:35:56.354 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:35:56.357 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:35:56.360 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:35:56.361 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:35:56.362 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:35:56.364 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:35:56.365 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:35:56.366 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:35:56.373 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:35:56.376 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:35:56.378 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:35:56.379 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:35:56.381 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:35:56.387 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:35:56.389 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:35:56.391 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:35:56.392 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:35:56.394 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:35:56.399 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:35:56.402 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:35:56.406 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:35:56.408 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:35:56.409 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:35:56.412 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 54.8852ms
2025-05-19 16:35:56.419 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:35:56.421 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 77.7651ms
2025-05-19 16:35:56.426 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - null null
2025-05-19 16:35:56.429 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:56.431 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - 204 null null 4.7002ms
2025-05-19 16:35:56.441 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - application/json 513
2025-05-19 16:35:56.447 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:56.453 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:35:56.456 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:35:56.462 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 16:35:56.471 +05:30 [INF] Target Amount: 10000000
2025-05-19 16:35:56.475 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:35:56.478 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:35:56.484 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:35:56.486 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 24.8863ms
2025-05-19 16:35:56.489 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:35:56.491 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - 400 null application/json; charset=utf-8 49.3597ms
2025-05-19 16:35:57.860 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-19 16:35:57.875 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:57.879 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:35:57.883 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:35:57.900 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:35:57.907 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:35:57.920 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:35:57.924 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:35:57.935 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:35:57.939 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:35:57.944 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:35:57.949 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:35:57.964 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:35:57.975 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:35:57.981 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:35:57.988 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:35:57.999 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:35:58.005 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:35:58.010 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:35:58.021 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:35:58.025 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:35:58.030 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:35:58.042 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:35:58.051 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:35:58.061 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:35:58.066 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:35:58.079 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 180.1709ms
2025-05-19 16:35:58.091 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:35:58.096 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 235.5398ms
2025-05-19 16:35:58.120 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - application/json 513
2025-05-19 16:35:58.147 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:35:58.152 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:35:58.158 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:35:58.178 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 16:35:58.184 +05:30 [INF] Target Amount: 10000000
2025-05-19 16:35:58.198 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:35:58.202 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:35:58.219 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:35:58.226 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 49.4271ms
2025-05-19 16:35:58.240 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:35:58.252 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - 400 null application/json; charset=utf-8 132.534ms
2025-05-19 16:36:01.843 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:36:01.851 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:01.852 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 9.219ms
2025-05-19 16:36:01.862 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-19 16:36:01.868 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:01.869 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:01.871 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:36:01.999 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:36:02.001 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:36:02.003 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:36:02.004 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:36:02.006 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:36:02.011 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:36:02.012 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:36:02.014 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:36:02.016 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:02.018 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:02.029 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:02.031 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:02.034 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:02.036 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:02.043 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:02.045 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:02.048 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:02.051 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:02.056 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:02.060 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:36:02.062 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:02.063 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:36:02.065 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 66.35ms
2025-05-19 16:36:02.067 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:02.068 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 207.529ms
2025-05-19 16:36:02.078 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - null null
2025-05-19 16:36:02.081 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:02.082 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - 204 null null 4.6071ms
2025-05-19 16:36:02.086 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - application/json 513
2025-05-19 16:36:02.095 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:02.096 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:02.098 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:36:02.101 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 16:36:02.102 +05:30 [INF] Target Amount: 10000000
2025-05-19 16:36:02.103 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:36:02.105 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:36:02.107 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:36:02.109 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 8.9767ms
2025-05-19 16:36:02.120 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:02.123 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000000&investmentHorizon=29 - 400 null application/json; charset=utf-8 36.0142ms
2025-05-19 16:36:07.823 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 16:36:07.831 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:07.833 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 10.2174ms
2025-05-19 16:36:07.839 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 16:36:07.848 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:07.850 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:07.852 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:36:07.856 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:36:07.859 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:36:07.861 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:36:07.863 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:36:07.872 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:36:07.875 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:36:07.877 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:36:07.878 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:36:07.881 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:07.890 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:07.893 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:07.897 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:07.904 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:07.906 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:07.908 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:07.910 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:07.912 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:07.914 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:07.916 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:07.924 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:36:07.926 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:07.927 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:36:07.930 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 73.9874ms
2025-05-19 16:36:07.938 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:07.940 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 100.8221ms
2025-05-19 16:36:07.945 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 16:36:07.949 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:07.955 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 9.8307ms
2025-05-19 16:36:07.961 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 513
2025-05-19 16:36:07.971 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:07.973 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:07.975 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:36:07.979 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 16:36:07.987 +05:30 [INF] Target Amount: 10000
2025-05-19 16:36:07.990 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:36:07.992 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:36:07.998 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:36:08.003 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 24.1199ms
2025-05-19 16:36:08.007 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:08.011 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 400 null application/json; charset=utf-8 49.8501ms
2025-05-19 16:36:08.784 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 16:36:08.798 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:08.802 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:08.815 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:36:08.825 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:36:08.840 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:36:08.844 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:36:08.856 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:36:08.860 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:36:08.872 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:36:08.877 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:36:08.881 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:36:08.898 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:08.911 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:08.924 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:08.931 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:08.946 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:08.958 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:08.963 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:08.969 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:08.984 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:08.990 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:08.997 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:09.015 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:36:09.021 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:09.034 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:36:09.047 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 222.2467ms
2025-05-19 16:36:09.052 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:09.055 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 271.295ms
2025-05-19 16:36:09.070 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 513
2025-05-19 16:36:09.074 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:09.075 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:09.077 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:36:09.081 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 16:36:09.083 +05:30 [INF] Target Amount: 10000
2025-05-19 16:36:09.091 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:36:09.094 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:36:09.098 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:36:09.104 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 23.2648ms
2025-05-19 16:36:09.106 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:09.108 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 400 null application/json; charset=utf-8 38.4499ms
2025-05-19 16:36:09.405 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 16:36:09.412 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:09.414 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:09.417 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:36:09.424 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:36:09.428 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:36:09.429 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 16:36:09.432 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 16:36:09.434 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:36:09.436 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:36:09.441 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:36:09.443 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:36:09.447 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:09.450 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:09.456 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:09.459 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:09.461 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:09.463 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 16:36:09.466 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 16:36:09.473 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 16:36:09.476 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 16:36:09.479 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 16:36:09.481 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:09.489 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:36:09.491 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 16:36:09.493 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:36:09.496 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 71.3613ms
2025-05-19 16:36:09.498 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:09.500 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 94.9127ms
2025-05-19 16:36:09.505 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 513
2025-05-19 16:36:09.517 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:09.519 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:09.521 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:36:09.524 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 16:36:09.526 +05:30 [INF] Target Amount: 10000
2025-05-19 16:36:09.533 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:36:09.535 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 16:36:09.538 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:36:09.541 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 16.7408ms
2025-05-19 16:36:09.543 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:09.545 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 400 null application/json; charset=utf-8 39.3552ms
2025-05-19 16:36:10.982 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-19 16:36:10.999 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:11.011 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:11.017 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:36:11.036 +05:30 [INF] Starting allocation calculation...
2025-05-19 16:36:11.044 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 16:36:11.054 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-19 16:36:11.067 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-19 16:36:11.073 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 16:36:11.079 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 16:36:11.093 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 16:36:11.100 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 16:36:11.117 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 16:36:11.123 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 16:36:11.129 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 16:36:11.146 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 16:36:11.160 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 16:36:11.168 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-19 16:36:11.184 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-19 16:36:11.191 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-19 16:36:11.207 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-19 16:36:11.214 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-19 16:36:11.230 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 16:36:11.241 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 16:36:11.246 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-19 16:36:11.248 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 16:36:11.251 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 215.778ms
2025-05-19 16:36:11.256 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 16:36:11.258 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 275.3483ms
2025-05-19 16:36:11.268 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 486
2025-05-19 16:36:11.273 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:11.275 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:11.277 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:36:11.283 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-19 16:36:11.290 +05:30 [INF] Target Amount: 10000
2025-05-19 16:36:11.293 +05:30 [INF] Investment Horizon: 29
2025-05-19 16:36:11.295 +05:30 [INF] Starting product allocation calculation.
2025-05-19 16:36:11.299 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 16:36:11.309 +05:30 [INF] Calculated investment amount: 82.08.
2025-05-19 16:36:11.312 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:36:11.317 +05:30 [INF] Calculated investment amount: 93.33.
2025-05-19 16:36:11.327 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 16:36:11.332 +05:30 [INF] Calculated investment amount: 17.48.
2025-05-19 16:36:11.334 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 16:36:11.358 +05:30 [INF] Calculated investment amount: 22.69.
2025-05-19 16:36:11.362 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 16:36:11.374 +05:30 [INF] Calculated investment amount: 5.75.
2025-05-19 16:36:11.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 16:36:11.382 +05:30 [INF] Calculated investment amount: 6.67.
2025-05-19 16:36:11.390 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.93, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:36:11.396 +05:30 [INF] Calculated investment amount: 216.95.
2025-05-19 16:36:11.399 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.57, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 16:36:11.411 +05:30 [INF] Calculated investment amount: 220.04.
2025-05-19 16:36:11.415 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.42, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 16:36:11.425 +05:30 [INF] Calculated investment amount: 50.75.
2025-05-19 16:36:11.428 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.58, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 16:36:11.433 +05:30 [INF] Calculated investment amount: 48.98.
2025-05-19 16:36:11.443 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 16:36:11.450 +05:30 [INF] Calculated investment amount: 109.23.
2025-05-19 16:36:11.462 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 16:36:11.480 +05:30 [INF] Calculated investment amount: 107.
2025-05-19 16:36:11.494 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 16:36:11.515 +05:30 [INF] Calculated investment amount: 39.19.
2025-05-19 16:36:11.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 16:36:11.547 +05:30 [INF] Calculated investment amount: 47.44.
2025-05-19 16:36:11.553 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 16:36:11.574 +05:30 [INF] Calculated investment amount: 9.19.
2025-05-19 16:36:11.591 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 16:36:11.602 +05:30 [INF] Calculated investment amount: 7.69.
2025-05-19 16:36:11.608 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 16:36:11.632 +05:30 [INF] Calculated investment amount: 6.48.
2025-05-19 16:36:11.638 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 16:36:11.649 +05:30 [INF] Calculated investment amount: 7.87.
2025-05-19 16:36:11.665 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 29.
2025-05-19 16:36:11.675 +05:30 [INF] Calculated investment amount: 13.56.
2025-05-19 16:36:11.682 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 16:36:11.707 +05:30 [INF] Calculated investment amount: 13.6.
2025-05-19 16:36:11.722 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 29.
2025-05-19 16:36:11.741 +05:30 [INF] Calculated investment amount: 33.19.
2025-05-19 16:36:11.754 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 29.
2025-05-19 16:36:11.766 +05:30 [INF] Calculated investment amount: 32.71.
2025-05-19 16:36:11.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 29.
2025-05-19 16:36:11.796 +05:30 [INF] Calculated investment amount: 21.98.
2025-05-19 16:36:11.802 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 29.
2025-05-19 16:36:11.811 +05:30 [INF] Calculated investment amount: 21.54.
2025-05-19 16:36:11.816 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 16:36:11.837 +05:30 [INF] Calculated investment amount: 16.28.
2025-05-19 16:36:11.844 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 16:36:11.863 +05:30 [INF] Calculated investment amount: 14.89.
2025-05-19 16:36:11.869 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 16:36:11.880 +05:30 [INF] Calculated investment amount: 29.12.
2025-05-19 16:36:11.894 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 16:36:11.911 +05:30 [INF] Calculated investment amount: 27.09.
2025-05-19 16:36:11.917 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 16:36:11.933 +05:30 [INF] Calculated investment amount: 6.1.
2025-05-19 16:36:11.939 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 16:36:11.956 +05:30 [INF] Calculated investment amount: 6.51.
2025-05-19 16:36:11.974 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 16:36:11.980 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:36:11.997 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 714.9492ms
2025-05-19 16:36:12.004 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 16:36:12.009 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 740.6458ms
2025-05-19 16:36:12.059 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:36:12.071 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:36:12.082 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:12.101 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:12.105 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 46.1125ms
2025-05-19 16:36:12.109 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 37.9285ms
2025-05-19 16:36:12.145 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 16:36:12.167 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 16:36:12.180 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:12.199 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:36:12.203 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:36:12.206 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:36:12.211 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 16:36:12.223 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 16:36:12.237 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 16:36:12.264 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:36:12.266 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 16:36:12.286 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 26.8282ms
2025-05-19 16:36:12.289 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 16:36:12.297 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 16:36:12.323 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 85.4992ms
2025-05-19 16:36:12.329 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 161.9601ms
2025-05-19 16:36:12.347 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 16:36:12.378 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 233.1093ms
2025-05-19 16:38:27.401 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 16:38:27.420 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:38:27.424 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 23.5525ms
2025-05-19 16:38:27.447 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 16:38:27.458 +05:30 [INF] CORS policy execution successful.
2025-05-19 16:38:27.470 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 16:38:27.486 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 16:38:27.509 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 16:38:27.529 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 34.911ms
2025-05-19 16:38:27.535 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 16:38:27.540 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 92.6955ms
2025-05-19 17:00:52.345 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:00:52.367 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:00:52.370 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 24.7398ms
2025-05-19 17:00:52.386 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-19 17:00:52.398 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:00:52.400 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:00:52.403 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:00:52.409 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:00:52.420 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:00:52.422 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:00:52.424 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:00:52.431 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:00:52.434 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:00:52.436 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:00:52.439 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:00:52.444 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:00:52.452 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:00:52.455 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:00:52.458 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:00:52.462 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:00:52.470 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:00:52.474 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:00:52.478 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:00:52.482 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:00:52.486 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:00:52.499 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:00:52.505 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:00:52.514 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:00:52.517 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:00:52.521 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 112.7974ms
2025-05-19 17:00:52.524 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:00:52.534 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 148.2486ms
2025-05-19 17:00:52.549 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - null null
2025-05-19 17:00:52.556 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:00:52.558 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 204 null null 9.5282ms
2025-05-19 17:00:52.573 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - application/json 513
2025-05-19 17:00:52.587 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:00:52.590 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:00:52.593 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:00:52.598 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 17:00:52.607 +05:30 [INF] Target Amount: 100000
2025-05-19 17:00:52.608 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:00:52.611 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 17:00:52.614 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:00:52.616 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 18.0946ms
2025-05-19 17:00:52.619 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:00:52.620 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 400 null application/json; charset=utf-8 47.4591ms
2025-05-19 17:09:10.284 +05:30 [INF] Application is shutting down...
2025-05-19 17:09:17.604 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 17:09:17.825 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 17:09:17.830 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 17:09:17.832 +05:30 [INF] Hosting environment: Development
2025-05-19 17:09:17.833 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 17:09:20.393 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:09:20.448 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:20.460 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 68.968ms
2025-05-19 17:09:20.470 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-19 17:09:20.547 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:20.552 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:09:20.574 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:09:20.651 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:09:20.678 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:09:20.680 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:09:20.689 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:09:20.693 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:09:20.694 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:09:20.695 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:09:20.700 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:09:20.715 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:09:20.718 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:09:20.719 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:09:20.720 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:09:20.721 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:09:20.722 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:09:20.725 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:09:20.726 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:09:20.727 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:09:20.728 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:09:20.753 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:09:20.763 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:09:20.765 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:09:20.773 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:09:20.788 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 207.3559ms
2025-05-19 17:09:20.793 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:09:20.796 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 326.4347ms
2025-05-19 17:09:20.805 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - null null
2025-05-19 17:09:20.811 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:20.812 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 204 null null 6.876ms
2025-05-19 17:09:20.817 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - application/json 513
2025-05-19 17:09:20.827 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:20.830 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:09:20.834 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:09:20.856 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 17:09:20.861 +05:30 [INF] Target Amount: 100000
2025-05-19 17:09:20.862 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:09:20.864 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 17:09:20.866 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:09:20.869 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 32.2999ms
2025-05-19 17:09:20.871 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:09:20.873 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 400 null application/json; charset=utf-8 55.4097ms
2025-05-19 17:09:36.756 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:09:36.763 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:36.764 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.8566ms
2025-05-19 17:09:36.771 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-19 17:09:36.774 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:36.775 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:09:36.777 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:09:36.785 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:09:36.790 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:09:36.792 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:09:36.793 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:09:36.794 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:09:36.794 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:09:36.795 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:09:36.796 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:09:36.804 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:09:36.806 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:09:36.808 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:09:36.809 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:09:36.811 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:09:36.817 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:09:36.821 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:09:36.822 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:09:36.823 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:09:36.824 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:09:36.825 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:09:36.828 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:09:36.829 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:09:36.837 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:09:36.838 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 54.0569ms
2025-05-19 17:09:36.840 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:09:36.842 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 70.5643ms
2025-05-19 17:09:36.853 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - null null
2025-05-19 17:09:36.856 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:36.857 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 204 null null 3.6293ms
2025-05-19 17:09:36.860 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - application/json 513
2025-05-19 17:09:36.863 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:36.868 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:09:36.870 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:09:36.874 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 17:09:36.876 +05:30 [INF] Target Amount: 100000
2025-05-19 17:09:36.877 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:09:36.878 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 17:09:36.887 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:09:36.889 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 16.0748ms
2025-05-19 17:09:36.891 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:09:36.892 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 400 null application/json; charset=utf-8 32.1727ms
2025-05-19 17:09:59.729 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:09:59.735 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:59.736 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.0673ms
2025-05-19 17:09:59.742 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-19 17:09:59.745 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:59.746 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:09:59.747 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:09:59.750 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:09:59.752 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:09:59.753 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:09:59.754 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:09:59.755 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:09:59.757 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:09:59.759 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:09:59.761 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:09:59.763 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:09:59.765 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:09:59.766 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:09:59.767 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:09:59.768 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:09:59.769 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:09:59.769 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:09:59.770 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:09:59.773 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-19 17:09:59.775 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:09:59.778 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:09:59.780 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:09:59.781 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:09:59.783 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:09:59.784 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 35.3224ms
2025-05-19 17:09:59.786 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:09:59.786 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 44.8474ms
2025-05-19 17:09:59.791 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - null null
2025-05-19 17:09:59.795 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:59.795 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 204 null null 4.0222ms
2025-05-19 17:09:59.799 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - application/json 513
2025-05-19 17:09:59.801 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:09:59.801 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:09:59.803 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:09:59.809 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 17:09:59.812 +05:30 [INF] Target Amount: 100000
2025-05-19 17:09:59.813 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:09:59.814 +05:30 [ERR] Invalid PercentageSplit detected: -2.5 for sub-asset Liquid Mutual Funds in asset cash
2025-05-19 17:09:59.815 +05:30 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:09:59.816 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 10.1515ms
2025-05-19 17:09:59.818 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:09:59.819 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 400 null application/json; charset=utf-8 20.2905ms
2025-05-19 17:12:30.305 +05:30 [INF] Application is shutting down...
2025-05-19 17:12:35.136 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 17:12:35.289 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 17:12:35.293 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 17:12:35.296 +05:30 [INF] Hosting environment: Development
2025-05-19 17:12:35.297 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 17:12:48.185 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:12:48.249 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.259 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 75.0156ms
2025-05-19 17:12:48.268 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-19 17:12:48.355 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.361 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:12:48.388 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:12:48.470 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:12:48.497 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:12:48.499 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:12:48.510 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:12:48.513 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:12:48.514 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:12:48.515 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 17:12:48.519 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 17:12:48.536 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 17:12:48.542 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 17:12:48.543 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:12:48.544 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:12:48.545 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 17:12:48.546 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-19 17:12:48.547 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-19 17:12:48.548 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:12:48.549 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:12:48.550 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 17:12:48.575 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 17:12:48.586 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:12:48.591 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 17:12:48.598 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:12:48.612 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 216.8475ms
2025-05-19 17:12:48.615 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:12:48.617 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 349.0279ms
2025-05-19 17:12:48.626 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - null null
2025-05-19 17:12:48.630 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.631 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 204 null null 4.9634ms
2025-05-19 17:12:48.635 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - application/json 497
2025-05-19 17:12:48.646 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.647 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:12:48.651 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:12:48.678 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 17:12:48.680 +05:30 [INF] Target Amount: 100000
2025-05-19 17:12:48.681 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:12:48.683 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:12:48.694 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:12:48.697 +05:30 [INF] Calculated investment amount: 656.87.
2025-05-19 17:12:48.698 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:12:48.699 +05:30 [INF] Calculated investment amount: 746.29.
2025-05-19 17:12:48.700 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:12:48.701 +05:30 [INF] Calculated investment amount: 466.19.
2025-05-19 17:12:48.702 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:12:48.707 +05:30 [INF] Calculated investment amount: 605.13.
2025-05-19 17:12:48.708 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:12:48.710 +05:30 [INF] Calculated investment amount: 383.95.
2025-05-19 17:12:48.710 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:12:48.712 +05:30 [INF] Calculated investment amount: 443.78.
2025-05-19 17:12:48.713 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:12:48.714 +05:30 [INF] Calculated investment amount: 206.5.
2025-05-19 17:12:48.715 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:12:48.716 +05:30 [INF] Calculated investment amount: 210.54.
2025-05-19 17:12:48.717 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:12:48.723 +05:30 [INF] Calculated investment amount: 483.78.
2025-05-19 17:12:48.725 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:12:48.727 +05:30 [INF] Calculated investment amount: 466.51.
2025-05-19 17:12:48.727 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:12:48.729 +05:30 [INF] Calculated investment amount: 173.58.
2025-05-19 17:12:48.730 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:12:48.731 +05:30 [INF] Calculated investment amount: 170.31.
2025-05-19 17:12:48.732 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:12:48.733 +05:30 [INF] Calculated investment amount: 104.19.
2025-05-19 17:12:48.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:12:48.742 +05:30 [INF] Calculated investment amount: 127.53.
2025-05-19 17:12:48.743 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:12:48.745 +05:30 [INF] Calculated investment amount: 153.47.
2025-05-19 17:12:48.745 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:12:48.747 +05:30 [INF] Calculated investment amount: 128.15.
2025-05-19 17:12:48.748 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:12:48.755 +05:30 [INF] Calculated investment amount: 214.97.
2025-05-19 17:12:48.758 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:12:48.760 +05:30 [INF] Calculated investment amount: 264.26.
2025-05-19 17:12:48.761 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:12:48.762 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:12:48.763 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:12:48.764 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.54, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:12:48.765 +05:30 [INF] Calculated investment amount: 45.56.
2025-05-19 17:12:48.766 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:12:48.767 +05:30 [INF] Calculated investment amount: 41.01.
2025-05-19 17:12:48.768 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.53, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:12:48.770 +05:30 [INF] Calculated investment amount: 80.82.
2025-05-19 17:12:48.771 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.58, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:12:48.778 +05:30 [INF] Calculated investment amount: 75.17.
2025-05-19 17:12:48.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:12:48.780 +05:30 [INF] Calculated investment amount: 84.92.
2025-05-19 17:12:48.781 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:12:48.782 +05:30 [INF] Calculated investment amount: 90.38.
2025-05-19 17:12:48.793 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:12:48.796 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:12:48.799 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 141.6834ms
2025-05-19 17:12:48.802 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:12:48.805 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 200 null application/json; charset=utf-8 170.5185ms
2025-05-19 17:12:48.831 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:12:48.833 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:12:48.836 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.839 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.840 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.9181ms
2025-05-19 17:12:48.841 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.55ms
2025-05-19 17:12:48.845 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:12:48.853 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:12:48.863 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.863 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:12:48.864 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:12:48.866 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:12:48.871 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:12:48.876 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:12:48.878 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:12:48.882 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:12:48.884 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:12:48.889 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:12:48.892 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 16.1154ms
2025-05-19 17:12:48.895 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:12:48.896 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 16.4379ms
2025-05-19 17:12:48.896 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 50.8438ms
2025-05-19 17:12:48.898 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:12:48.908 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 54.8262ms
2025-05-19 17:19:13.854 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:19:13.860 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:13.862 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.7063ms
2025-05-19 17:19:13.870 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 17:19:13.874 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:13.875 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:19:13.877 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:19:13.882 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:19:13.888 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:19:13.889 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:19:13.890 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:19:13.890 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:19:13.891 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:19:13.892 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:19:13.893 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:19:13.896 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:19:13.904 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:19:13.906 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:19:13.907 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:19:13.908 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:19:13.909 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:19:13.910 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:19:13.911 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:19:13.912 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:19:13.913 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:19:13.919 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:19:13.922 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:19:13.923 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:19:13.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:19:13.926 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.7452ms
2025-05-19 17:19:13.928 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:19:13.929 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 58.6199ms
2025-05-19 17:19:13.939 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 17:19:13.941 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:13.941 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 2.6218ms
2025-05-19 17:19:13.945 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 502
2025-05-19 17:19:13.947 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:13.952 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:19:13.954 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:19:13.957 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 17:19:13.958 +05:30 [INF] Target Amount: 10000
2025-05-19 17:19:13.959 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:19:13.960 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:19:13.962 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:19:13.971 +05:30 [INF] Calculated investment amount: 53.33.
2025-05-19 17:19:13.973 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:19:13.975 +05:30 [INF] Calculated investment amount: 60.68.
2025-05-19 17:19:13.975 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:19:13.977 +05:30 [INF] Calculated investment amount: 37.88.
2025-05-19 17:19:13.978 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:19:13.979 +05:30 [INF] Calculated investment amount: 49.17.
2025-05-19 17:19:13.980 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:19:13.988 +05:30 [INF] Calculated investment amount: 31.19.
2025-05-19 17:19:13.989 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:19:13.990 +05:30 [INF] Calculated investment amount: 36.06.
2025-05-19 17:19:13.991 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:19:13.992 +05:30 [INF] Calculated investment amount: 41.3.
2025-05-19 17:19:13.993 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:19:13.994 +05:30 [INF] Calculated investment amount: 41.85.
2025-05-19 17:19:13.995 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:19:13.996 +05:30 [INF] Calculated investment amount: 96.76.
2025-05-19 17:19:14.005 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:19:14.007 +05:30 [INF] Calculated investment amount: 93.16.
2025-05-19 17:19:14.008 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:19:14.009 +05:30 [INF] Calculated investment amount: 34.72.
2025-05-19 17:19:14.010 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:19:14.011 +05:30 [INF] Calculated investment amount: 33.86.
2025-05-19 17:19:14.012 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:19:14.014 +05:30 [INF] Calculated investment amount: 10.42.
2025-05-19 17:19:14.020 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:19:14.023 +05:30 [INF] Calculated investment amount: 12.75.
2025-05-19 17:19:14.024 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:19:14.026 +05:30 [INF] Calculated investment amount: 15.35.
2025-05-19 17:19:14.026 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:19:14.028 +05:30 [INF] Calculated investment amount: 12.82.
2025-05-19 17:19:14.028 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:19:14.030 +05:30 [INF] Calculated investment amount: 21.5.
2025-05-19 17:19:14.031 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:19:14.037 +05:30 [INF] Calculated investment amount: 26.43.
2025-05-19 17:19:14.040 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:19:14.042 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:19:14.043 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:19:14.045 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.07, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:19:14.047 +05:30 [INF] Calculated investment amount: 9.03.
2025-05-19 17:19:14.048 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.15, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:19:14.054 +05:30 [INF] Calculated investment amount: 8.27.
2025-05-19 17:19:14.055 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.06, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:19:14.056 +05:30 [INF] Calculated investment amount: 16.16.
2025-05-19 17:19:14.057 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.16, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:19:14.059 +05:30 [INF] Calculated investment amount: 15.03.
2025-05-19 17:19:14.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.84, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:19:14.061 +05:30 [INF] Calculated investment amount: 16.98.
2025-05-19 17:19:14.061 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.72, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:19:14.063 +05:30 [INF] Calculated investment amount: 18.08.
2025-05-19 17:19:14.069 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:19:14.073 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:14.074 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 119.2912ms
2025-05-19 17:19:14.076 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:19:14.077 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 132.4724ms
2025-05-19 17:19:14.091 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:19:14.094 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:19:14.096 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:14.104 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:14.105 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 13.1261ms
2025-05-19 17:19:14.106 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.3293ms
2025-05-19 17:19:14.111 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:19:14.120 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:19:14.124 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:14.128 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:14.130 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:19:14.141 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:19:14.142 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:19:14.143 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:19:14.147 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:19:14.151 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:19:14.152 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:14.152 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:14.153 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.5021ms
2025-05-19 17:19:14.155 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.6225ms
2025-05-19 17:19:14.157 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:19:14.158 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:19:14.159 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 38.4123ms
2025-05-19 17:19:14.160 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 48.7993ms
2025-05-19 17:19:27.625 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:19:27.631 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.632 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.5841ms
2025-05-19 17:19:27.635 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 17:19:27.640 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.642 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:19:27.643 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:19:27.645 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:19:27.647 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:19:27.647 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:19:27.648 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:19:27.649 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:19:27.649 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:19:27.650 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:19:27.651 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:19:27.652 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:19:27.658 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:19:27.659 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:19:27.660 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:19:27.661 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:19:27.662 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:19:27.662 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:19:27.663 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:19:27.664 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:19:27.665 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:19:27.666 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:19:27.668 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:19:27.668 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:19:27.675 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:19:27.676 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 31.5396ms
2025-05-19 17:19:27.678 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:19:27.679 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 43.5115ms
2025-05-19 17:19:27.683 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=29 - null null
2025-05-19 17:19:27.685 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.691 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=29 - 204 null null 7.9719ms
2025-05-19 17:19:27.695 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=29 - application/json 502
2025-05-19 17:19:27.697 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.698 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:19:27.699 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:19:27.700 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 17:19:27.701 +05:30 [INF] Target Amount: 1000000
2025-05-19 17:19:27.702 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:19:27.708 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:19:27.711 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 1000000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:19:27.713 +05:30 [INF] Calculated investment amount: 5333.13.
2025-05-19 17:19:27.714 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 1000000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:19:27.715 +05:30 [INF] Calculated investment amount: 6068.49.
2025-05-19 17:19:27.716 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 1000000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:19:27.717 +05:30 [INF] Calculated investment amount: 3787.97.
2025-05-19 17:19:27.718 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 1000000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:19:27.724 +05:30 [INF] Calculated investment amount: 4916.68.
2025-05-19 17:19:27.725 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 1000000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:19:27.726 +05:30 [INF] Calculated investment amount: 3119.05.
2025-05-19 17:19:27.727 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 1000000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:19:27.728 +05:30 [INF] Calculated investment amount: 3606.19.
2025-05-19 17:19:27.729 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 1000000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:19:27.730 +05:30 [INF] Calculated investment amount: 4130.09.
2025-05-19 17:19:27.730 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 1000000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:19:27.732 +05:30 [INF] Calculated investment amount: 4185.14.
2025-05-19 17:19:27.732 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 1000000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:19:27.733 +05:30 [INF] Calculated investment amount: 9675.67.
2025-05-19 17:19:27.734 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 1000000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:19:27.735 +05:30 [INF] Calculated investment amount: 9316.49.
2025-05-19 17:19:27.744 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 1000000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:19:27.745 +05:30 [INF] Calculated investment amount: 3471.54.
2025-05-19 17:19:27.746 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 1000000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:19:27.747 +05:30 [INF] Calculated investment amount: 3386.2.
2025-05-19 17:19:27.748 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 1000000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:19:27.749 +05:30 [INF] Calculated investment amount: 1041.94.
2025-05-19 17:19:27.750 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 1000000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:19:27.751 +05:30 [INF] Calculated investment amount: 1275.25.
2025-05-19 17:19:27.752 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 1000000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:19:27.762 +05:30 [INF] Calculated investment amount: 1534.65.
2025-05-19 17:19:27.763 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 1000000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:19:27.764 +05:30 [INF] Calculated investment amount: 1281.54.
2025-05-19 17:19:27.765 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 1000000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:19:27.766 +05:30 [INF] Calculated investment amount: 2149.68.
2025-05-19 17:19:27.767 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 1000000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:19:27.768 +05:30 [INF] Calculated investment amount: 2642.58.
2025-05-19 17:19:27.769 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:19:27.776 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:19:27.777 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:19:27.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.07, TargetAmount: 1000000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:19:27.780 +05:30 [INF] Calculated investment amount: 902.77.
2025-05-19 17:19:27.781 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.15, TargetAmount: 1000000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:19:27.782 +05:30 [INF] Calculated investment amount: 827.35.
2025-05-19 17:19:27.783 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.06, TargetAmount: 1000000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:19:27.784 +05:30 [INF] Calculated investment amount: 1616.36.
2025-05-19 17:19:27.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.16, TargetAmount: 1000000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:19:27.792 +05:30 [INF] Calculated investment amount: 1503.37.
2025-05-19 17:19:27.793 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.84, TargetAmount: 1000000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:19:27.795 +05:30 [INF] Calculated investment amount: 1698.45.
2025-05-19 17:19:27.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.72, TargetAmount: 1000000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:19:27.798 +05:30 [INF] Calculated investment amount: 1807.59.
2025-05-19 17:19:27.801 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:19:27.807 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:27.811 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 111.3392ms
2025-05-19 17:19:27.812 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:19:27.813 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=29 - 200 null application/json; charset=utf-8 118.1475ms
2025-05-19 17:19:27.827 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:19:27.830 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:19:27.832 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.835 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.841 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 13.3311ms
2025-05-19 17:19:27.841 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.9463ms
2025-05-19 17:19:27.847 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:19:27.849 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:19:27.852 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.855 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:27.856 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:19:27.857 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:19:27.858 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:19:27.867 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:19:27.869 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:19:27.873 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:19:27.873 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:27.874 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:27.881 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 9.625ms
2025-05-19 17:19:27.883 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.9268ms
2025-05-19 17:19:27.884 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:19:27.885 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:19:27.886 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 36.3765ms
2025-05-19 17:19:27.893 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 46.0088ms
2025-05-19 17:19:58.399 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:19:58.404 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.406 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.7445ms
2025-05-19 17:19:58.411 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 17:19:58.413 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.414 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:19:58.415 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:19:58.418 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:19:58.426 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:19:58.427 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:19:58.428 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:19:58.429 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-19 17:19:58.430 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-19 17:19:58.430 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-19 17:19:58.431 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-19 17:19:58.433 +05:30 [INF] Sub-allocations for equity: {"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}
2025-05-19 17:19:58.440 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 17:19:58.443 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}
2025-05-19 17:19:58.445 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}
2025-05-19 17:19:58.446 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}
2025-05-19 17:19:58.448 +05:30 [INF] Added sub-assets for equity: {"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}
2025-05-19 17:19:58.448 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-19 17:19:58.449 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}
2025-05-19 17:19:58.451 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}
2025-05-19 17:19:58.457 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}
2025-05-19 17:19:58.460 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}},"cash":{"percentage":16.67,"subAssets":{"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}},"realEstate":{"percentage":6.67,"subAssets":{"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}}}
2025-05-19 17:19:58.462 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:19:58.463 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}},"cash":{"percentage":16.67,"subAssets":{"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}},"realEstate":{"percentage":6.67,"subAssets":{"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}}}
2025-05-19 17:19:58.464 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:19:58.465 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.8801ms
2025-05-19 17:19:58.466 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:19:58.467 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 56.2288ms
2025-05-19 17:19:58.478 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - null null
2025-05-19 17:19:58.481 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.482 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 204 null null 3.9996ms
2025-05-19 17:19:58.486 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 503
2025-05-19 17:19:58.495 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.496 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:19:58.497 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:19:58.498 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"Percentage":16.67,"SubAssets":{"Precious Metals":2.78,"Energy":6.94,"Agriculture":6.94}},"cash":{"Percentage":16.67,"SubAssets":{"Liquid Mutual Funds":8.33,"Savings Acc":4.17,"T. Bill":4.17}},"realEstate":{"Percentage":6.67,"SubAssets":{"REITs":1.48,"Residential Prop":1.48,"Commercial Prop":3.7}}}}
2025-05-19 17:19:58.499 +05:30 [INF] Target Amount: 10000
2025-05-19 17:19:58.500 +05:30 [INF] Investment Horizon: 30
2025-05-19 17:19:58.502 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:19:58.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-19 17:19:58.514 +05:30 [INF] Calculated investment amount: 22.41.
2025-05-19 17:19:58.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.59, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 17:19:58.516 +05:30 [INF] Calculated investment amount: 25.61.
2025-05-19 17:19:58.516 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-19 17:19:58.522 +05:30 [INF] Calculated investment amount: 15.54.
2025-05-19 17:19:58.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-19 17:19:58.525 +05:30 [INF] Calculated investment amount: 20.44.
2025-05-19 17:19:58.526 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.43, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-19 17:19:58.527 +05:30 [INF] Calculated investment amount: 12.62.
2025-05-19 17:19:58.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.07, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-19 17:19:58.529 +05:30 [INF] Calculated investment amount: 14.72.
2025-05-19 17:19:58.530 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 17:19:58.532 +05:30 [INF] Calculated investment amount: 59.
2025-05-19 17:19:58.533 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-19 17:19:58.534 +05:30 [INF] Calculated investment amount: 60.02.
2025-05-19 17:19:58.536 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.78, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-19 17:19:58.544 +05:30 [INF] Calculated investment amount: 135.89.
2025-05-19 17:19:58.545 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.22, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-19 17:19:58.546 +05:30 [INF] Calculated investment amount: 130.55.
2025-05-19 17:19:58.547 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.46, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-19 17:19:58.548 +05:30 [INF] Calculated investment amount: 49.36.
2025-05-19 17:19:58.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.54, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-19 17:19:58.550 +05:30 [INF] Calculated investment amount: 48.15.
2025-05-19 17:19:58.551 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.54, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-19 17:19:58.558 +05:30 [INF] Calculated investment amount: 16.18.
2025-05-19 17:19:58.559 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.24, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-19 17:19:58.561 +05:30 [INF] Calculated investment amount: 19.83.
2025-05-19 17:19:58.561 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.27, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-19 17:19:58.563 +05:30 [INF] Calculated investment amount: 23.33.
2025-05-19 17:19:58.563 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-19 17:19:58.565 +05:30 [INF] Calculated investment amount: 19.38.
2025-05-19 17:19:58.565 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.81, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-19 17:19:58.566 +05:30 [INF] Calculated investment amount: 32.96.
2025-05-19 17:19:58.567 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-19 17:19:58.575 +05:30 [INF] Calculated investment amount: 41.12.
2025-05-19 17:19:58.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.25, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 30.
2025-05-19 17:19:58.578 +05:30 [INF] Calculated investment amount: 92.88.
2025-05-19 17:19:58.578 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.08, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-19 17:19:58.580 +05:30 [INF] Calculated investment amount: 94.4.
2025-05-19 17:19:58.580 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.95, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 30.
2025-05-19 17:19:58.582 +05:30 [INF] Calculated investment amount: 69.47.
2025-05-19 17:19:58.583 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.22, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 30.
2025-05-19 17:19:58.589 +05:30 [INF] Calculated investment amount: 68.45.
2025-05-19 17:19:58.591 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.03, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 30.
2025-05-19 17:19:58.592 +05:30 [INF] Calculated investment amount: 45.65.
2025-05-19 17:19:58.593 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.14, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 30.
2025-05-19 17:19:58.594 +05:30 [INF] Calculated investment amount: 44.18.
2025-05-19 17:19:58.595 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.72, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 30.
2025-05-19 17:19:58.596 +05:30 [INF] Calculated investment amount: 5.58.
2025-05-19 17:19:58.597 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 30.
2025-05-19 17:19:58.598 +05:30 [INF] Calculated investment amount: 4.99.
2025-05-19 17:19:58.599 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 30.
2025-05-19 17:19:58.600 +05:30 [INF] Calculated investment amount: 10.15.
2025-05-19 17:19:58.601 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.77, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 30.
2025-05-19 17:19:58.609 +05:30 [INF] Calculated investment amount: 9.3.
2025-05-19 17:19:58.610 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.89, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 30.
2025-05-19 17:19:58.611 +05:30 [INF] Calculated investment amount: 10.26.
2025-05-19 17:19:58.612 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 30.
2025-05-19 17:19:58.613 +05:30 [INF] Calculated investment amount: 10.95.
2025-05-19 17:19:58.616 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:19:58.619 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:58.625 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 127.3234ms
2025-05-19 17:19:58.627 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:19:58.628 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 200 null application/json; charset=utf-8 141.4661ms
2025-05-19 17:19:58.641 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:19:58.643 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:19:58.644 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.648 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.649 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 7.5039ms
2025-05-19 17:19:58.650 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.1819ms
2025-05-19 17:19:58.654 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:19:58.661 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:19:58.668 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.672 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:19:58.673 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:19:58.674 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:19:58.674 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:19:58.677 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:19:58.679 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:19:58.682 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:58.683 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:19:58.689 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 8.1079ms
2025-05-19 17:19:58.692 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:19:58.693 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:19:58.695 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.2811ms
2025-05-19 17:19:58.695 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 34.058ms
2025-05-19 17:19:58.699 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:19:58.705 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 50.8793ms
2025-05-19 17:20:23.344 +05:30 [INF] Application is shutting down...
2025-05-19 17:20:27.908 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 17:20:28.049 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 17:20:28.054 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 17:20:28.055 +05:30 [INF] Hosting environment: Development
2025-05-19 17:20:28.056 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 17:20:39.118 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:20:39.176 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.184 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 68.7784ms
2025-05-19 17:20:39.196 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 17:20:39.274 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.278 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:20:39.301 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:20:39.393 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:20:39.419 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:20:39.424 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:20:39.433 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:20:39.436 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:20:39.438 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:20:39.439 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:20:39.443 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:20:39.458 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:20:39.460 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:20:39.461 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:20:39.462 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:20:39.463 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:20:39.464 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-19 17:20:39.464 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-19 17:20:39.465 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:20:39.466 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:20:39.467 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-19 17:20:39.490 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:20:39.498 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:20:39.501 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-19 17:20:39.510 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:20:39.526 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 217.0142ms
2025-05-19 17:20:39.528 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:20:39.531 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 335.2863ms
2025-05-19 17:20:39.535 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 17:20:39.540 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.541 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 6.4019ms
2025-05-19 17:20:39.547 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 502
2025-05-19 17:20:39.550 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.550 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:20:39.556 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:20:39.579 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-19 17:20:39.581 +05:30 [INF] Target Amount: 10000
2025-05-19 17:20:39.582 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:20:39.585 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:20:39.597 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:20:39.599 +05:30 [INF] Calculated investment amount: 53.33.
2025-05-19 17:20:39.600 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:20:39.602 +05:30 [INF] Calculated investment amount: 60.68.
2025-05-19 17:20:39.603 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:20:39.609 +05:30 [INF] Calculated investment amount: 37.88.
2025-05-19 17:20:39.611 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:20:39.612 +05:30 [INF] Calculated investment amount: 49.17.
2025-05-19 17:20:39.613 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:20:39.614 +05:30 [INF] Calculated investment amount: 31.19.
2025-05-19 17:20:39.615 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:20:39.617 +05:30 [INF] Calculated investment amount: 36.06.
2025-05-19 17:20:39.617 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:20:39.620 +05:30 [INF] Calculated investment amount: 41.3.
2025-05-19 17:20:39.621 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:20:39.622 +05:30 [INF] Calculated investment amount: 41.85.
2025-05-19 17:20:39.623 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:20:39.624 +05:30 [INF] Calculated investment amount: 96.76.
2025-05-19 17:20:39.625 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:20:39.626 +05:30 [INF] Calculated investment amount: 93.16.
2025-05-19 17:20:39.627 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:20:39.629 +05:30 [INF] Calculated investment amount: 34.72.
2025-05-19 17:20:39.629 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:20:39.631 +05:30 [INF] Calculated investment amount: 33.86.
2025-05-19 17:20:39.631 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:20:39.633 +05:30 [INF] Calculated investment amount: 10.42.
2025-05-19 17:20:39.633 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:20:39.637 +05:30 [INF] Calculated investment amount: 12.75.
2025-05-19 17:20:39.639 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:20:39.640 +05:30 [INF] Calculated investment amount: 15.35.
2025-05-19 17:20:39.641 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:20:39.642 +05:30 [INF] Calculated investment amount: 12.82.
2025-05-19 17:20:39.643 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:20:39.644 +05:30 [INF] Calculated investment amount: 21.5.
2025-05-19 17:20:39.645 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:20:39.646 +05:30 [INF] Calculated investment amount: 26.43.
2025-05-19 17:20:39.647 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:20:39.648 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:20:39.649 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:20:39.651 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.07, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:20:39.654 +05:30 [INF] Calculated investment amount: 9.03.
2025-05-19 17:20:39.654 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.15, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:20:39.656 +05:30 [INF] Calculated investment amount: 8.27.
2025-05-19 17:20:39.656 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.06, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:20:39.658 +05:30 [INF] Calculated investment amount: 16.16.
2025-05-19 17:20:39.658 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.16, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:20:39.660 +05:30 [INF] Calculated investment amount: 15.03.
2025-05-19 17:20:39.661 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.84, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:20:39.662 +05:30 [INF] Calculated investment amount: 16.98.
2025-05-19 17:20:39.663 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.72, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:20:39.664 +05:30 [INF] Calculated investment amount: 18.08.
2025-05-19 17:20:39.674 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:20:39.677 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:20:39.679 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 120.9494ms
2025-05-19 17:20:39.682 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:20:39.683 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 136.0652ms
2025-05-19 17:20:39.695 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:20:39.699 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:20:39.701 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.704 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.705 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 9.4037ms
2025-05-19 17:20:39.705 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.8328ms
2025-05-19 17:20:39.712 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:20:39.716 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:20:39.723 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.723 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:20:39.725 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:20:39.726 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:20:39.731 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:20:39.731 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:20:39.737 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:20:39.740 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:20:39.742 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:20:39.743 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:20:39.744 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.9028ms
2025-05-19 17:20:39.747 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:20:39.748 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 35.7573ms
2025-05-19 17:20:39.749 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.8928ms
2025-05-19 17:20:39.755 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:20:39.756 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 39.3613ms
2025-05-19 17:25:19.813 +05:30 [INF] Application is shutting down...
2025-05-19 17:25:23.929 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-19 17:25:24.054 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-19 17:25:24.060 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-19 17:25:24.063 +05:30 [INF] Hosting environment: Development
2025-05-19 17:25:24.066 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\Final backend code without enhancements
2025-05-19 17:25:28.263 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:25:28.262 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:25:28.325 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:28.325 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:28.334 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 73.908ms
2025-05-19 17:25:28.334 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 73.9463ms
2025-05-19 17:25:28.343 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:25:28.348 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:25:28.435 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:28.435 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:28.440 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:25:28.440 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:25:28.458 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:25:28.458 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:25:28.469 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:25:28.475 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:25:28.522 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:25:28.546 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:25:28.546 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 76.6823ms
2025-05-19 17:25:28.550 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:25:28.553 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 204.4726ms
2025-05-19 17:25:28.567 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 103.3502ms
2025-05-19 17:25:28.570 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:25:28.574 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 230.8696ms
2025-05-19 17:25:39.331 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:25:39.341 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.344 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 12.6079ms
2025-05-19 17:25:39.348 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-19 17:25:39.358 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.360 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:25:39.369 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:25:39.413 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:25:39.423 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:25:39.425 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:25:39.427 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:25:39.428 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:25:39.429 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:25:39.430 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:25:39.431 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:25:39.446 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:25:39.448 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:25:39.450 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:25:39.459 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:25:39.459 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:25:39.460 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:25:39.461 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:25:39.462 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:25:39.463 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:25:39.464 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:25:39.480 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:25:39.494 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:25:39.496 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:25:39.498 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:25:39.503 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 129.8886ms
2025-05-19 17:25:39.506 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:25:39.507 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 159.3705ms
2025-05-19 17:25:39.511 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - null null
2025-05-19 17:25:39.514 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.514 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 204 null null 2.8635ms
2025-05-19 17:25:39.523 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - application/json 509
2025-05-19 17:25:39.525 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.526 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:25:39.530 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:25:39.549 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":61.9,"SubAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"Percentage":19.05,"SubAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"Percentage":9.52,"SubAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":9.52,"SubAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}}
2025-05-19 17:25:39.555 +05:30 [INF] Target Amount: 100000
2025-05-19 17:25:39.557 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:25:39.559 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:25:39.564 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.06, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:25:39.573 +05:30 [INF] Calculated investment amount: 508.1.
2025-05-19 17:25:39.574 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:25:39.576 +05:30 [INF] Calculated investment amount: 578.03.
2025-05-19 17:25:39.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.97, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:25:39.578 +05:30 [INF] Calculated investment amount: 360.4.
2025-05-19 17:25:39.579 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.66, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:25:39.580 +05:30 [INF] Calculated investment amount: 468.39.
2025-05-19 17:25:39.581 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.27, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:25:39.584 +05:30 [INF] Calculated investment amount: 296.91.
2025-05-19 17:25:39.591 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.52, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:25:39.593 +05:30 [INF] Calculated investment amount: 343.6.
2025-05-19 17:25:39.594 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.62, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:25:39.595 +05:30 [INF] Calculated investment amount: 393.57.
2025-05-19 17:25:39.596 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.55, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:25:39.598 +05:30 [INF] Calculated investment amount: 397.97.
2025-05-19 17:25:39.599 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.21, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:25:39.607 +05:30 [INF] Calculated investment amount: 921.56.
2025-05-19 17:25:39.608 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.49, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:25:39.609 +05:30 [INF] Calculated investment amount: 887.87.
2025-05-19 17:25:39.610 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.56, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:25:39.612 +05:30 [INF] Calculated investment amount: 330.22.
2025-05-19 17:25:39.613 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.61, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:25:39.614 +05:30 [INF] Calculated investment amount: 322.59.
2025-05-19 17:25:39.615 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:25:39.623 +05:30 [INF] Calculated investment amount: 99.66.
2025-05-19 17:25:39.624 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:25:39.626 +05:30 [INF] Calculated investment amount: 120.72.
2025-05-19 17:25:39.626 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:25:39.628 +05:30 [INF] Calculated investment amount: 145.68.
2025-05-19 17:25:39.629 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.1, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:25:39.630 +05:30 [INF] Calculated investment amount: 122.33.
2025-05-19 17:25:39.631 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.18, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:25:39.633 +05:30 [INF] Calculated investment amount: 204.64.
2025-05-19 17:25:39.639 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:25:39.642 +05:30 [INF] Calculated investment amount: 251.61.
2025-05-19 17:25:39.643 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:25:39.644 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:25:39.645 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:25:39.646 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:25:39.647 +05:30 [INF] Calculated investment amount: 86.9.
2025-05-19 17:25:39.648 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.09, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:25:39.655 +05:30 [INF] Calculated investment amount: 78.42.
2025-05-19 17:25:39.657 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:25:39.659 +05:30 [INF] Calculated investment amount: 154.01.
2025-05-19 17:25:39.659 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.11, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:25:39.661 +05:30 [INF] Calculated investment amount: 143.86.
2025-05-19 17:25:39.662 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.7, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:25:39.663 +05:30 [INF] Calculated investment amount: 161.47.
2025-05-19 17:25:39.664 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.59, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:25:39.665 +05:30 [INF] Calculated investment amount: 172.12.
2025-05-19 17:25:39.680 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:25:39.685 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:25:39.690 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 156.6925ms
2025-05-19 17:25:39.692 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:25:39.692 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 200 null application/json; charset=utf-8 169.4038ms
2025-05-19 17:25:39.708 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:25:39.711 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:25:39.714 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.717 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.718 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.0997ms
2025-05-19 17:25:39.720 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.9849ms
2025-05-19 17:25:39.731 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:25:39.737 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:25:39.740 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.745 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:25:39.746 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:25:39.746 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:25:39.747 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:25:39.748 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:25:39.751 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:25:39.755 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:25:39.757 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:25:39.757 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:25:39.758 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.7311ms
2025-05-19 17:25:39.761 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 7.6498ms
2025-05-19 17:25:39.762 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:25:39.764 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:25:39.771 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 39.0892ms
2025-05-19 17:25:39.772 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 35.1238ms
2025-05-19 17:26:06.914 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:26:06.922 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:06.924 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 9.2806ms
2025-05-19 17:26:06.929 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 17:26:06.931 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:06.932 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:26:06.933 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:26:06.935 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:26:06.937 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:26:06.945 +05:30 [INF] Looking up base allocation for key: High+Short
2025-05-19 17:26:06.946 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":30,"commodities":10,"cash":25,"realEstate":5}
2025-05-19 17:26:06.947 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-19 17:26:06.948 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-19 17:26:06.949 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:26:06.949 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:26:06.951 +05:30 [INF] Sub-allocations for equity: {"Large Cap":2.5,"Mid Cap":3.33,"Small Cap":4.17}
2025-05-19 17:26:06.952 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}
2025-05-19 17:26:06.952 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:26:06.954 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":17.5,"Savings Acc":8.75,"T. Bill":8.75}
2025-05-19 17:26:06.961 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 17:26:06.962 +05:30 [INF] Added sub-assets for equity: {"Large Cap":2.5,"Mid Cap":3.33,"Small Cap":4.17}
2025-05-19 17:26:06.962 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}
2025-05-19 17:26:06.963 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-19 17:26:06.964 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":17.5,"Savings Acc":8.75,"T. Bill":8.75}
2025-05-19 17:26:06.965 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-19 17:26:06.966 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":10,"subAssets":{"Large Cap":2.5,"Mid Cap":3.33,"Small Cap":4.17}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":35,"subAssets":{"Liquid Mutual Funds":17.5,"Savings Acc":8.75,"T. Bill":8.75}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 17:26:06.968 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:26:06.969 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":10,"subAssets":{"Large Cap":2.5,"Mid Cap":3.33,"Small Cap":4.17}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":35,"subAssets":{"Liquid Mutual Funds":17.5,"Savings Acc":8.75,"T. Bill":8.75}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-19 17:26:06.970 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:26:06.978 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 43.1647ms
2025-05-19 17:26:06.979 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:26:06.980 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 51.3511ms
2025-05-19 17:26:06.985 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=1 - null null
2025-05-19 17:26:06.988 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:06.993 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=1 - 204 null null 8.3675ms
2025-05-19 17:26:06.997 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=1 - application/json 506
2025-05-19 17:26:06.999 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:07.000 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:26:07.001 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:26:07.002 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":10,"SubAssets":{"Large Cap":2.5,"Mid Cap":3.33,"Small Cap":4.17}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":6.67,"Corp Bonds":26.67,"Fixed Dep":6.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":35,"SubAssets":{"Liquid Mutual Funds":17.5,"Savings Acc":8.75,"T. Bill":8.75}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-19 17:26:07.003 +05:30 [INF] Target Amount: 100000
2025-05-19 17:26:07.005 +05:30 [INF] Investment Horizon: 1
2025-05-19 17:26:07.011 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:26:07.013 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 1.
2025-05-19 17:26:07.015 +05:30 [INF] Calculated investment amount: 1181.82.
2025-05-19 17:26:07.016 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 1.
2025-05-19 17:26:07.017 +05:30 [INF] Calculated investment amount: 1098.9.
2025-05-19 17:26:07.018 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.77, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 1.
2025-05-19 17:26:07.019 +05:30 [INF] Calculated investment amount: 1573.33.
2025-05-19 17:26:07.020 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.56, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 1.
2025-05-19 17:26:07.028 +05:30 [INF] Calculated investment amount: 1405.41.
2025-05-19 17:26:07.029 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.15, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 1.
2025-05-19 17:26:07.030 +05:30 [INF] Calculated investment amount: 1885.96.
2025-05-19 17:26:07.031 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.02, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 1.
2025-05-19 17:26:07.032 +05:30 [INF] Calculated investment amount: 1784.45.
2025-05-19 17:26:07.033 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.4, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 1.
2025-05-19 17:26:07.034 +05:30 [INF] Calculated investment amount: 3238.1.
2025-05-19 17:26:07.035 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.27, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 1.
2025-05-19 17:26:07.037 +05:30 [INF] Calculated investment amount: 3120.23.
2025-05-19 17:26:07.039 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.05, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 1.
2025-05-19 17:26:07.046 +05:30 [INF] Calculated investment amount: 12219.1.
2025-05-19 17:26:07.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.62, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 1.
2025-05-19 17:26:07.049 +05:30 [INF] Calculated investment amount: 12717.09.
2025-05-19 17:26:07.049 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.28, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 1.
2025-05-19 17:26:07.051 +05:30 [INF] Calculated investment amount: 3109.
2025-05-19 17:26:07.052 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.39, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 1.
2025-05-19 17:26:07.053 +05:30 [INF] Calculated investment amount: 3207.19.
2025-05-19 17:26:07.054 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 1.
2025-05-19 17:26:07.062 +05:30 [INF] Calculated investment amount: 853.43.
2025-05-19 17:26:07.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 1.
2025-05-19 17:26:07.065 +05:30 [INF] Calculated investment amount: 705.55.
2025-05-19 17:26:07.067 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 1.
2025-05-19 17:26:07.070 +05:30 [INF] Calculated investment amount: 1804.03.
2025-05-19 17:26:07.071 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 1.
2025-05-19 17:26:07.078 +05:30 [INF] Calculated investment amount: 1994.56.
2025-05-19 17:26:07.078 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 1.
2025-05-19 17:26:07.080 +05:30 [INF] Calculated investment amount: 2110.6.
2025-05-19 17:26:07.080 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 1.
2025-05-19 17:26:07.082 +05:30 [INF] Calculated investment amount: 1757.01.
2025-05-19 17:26:07.082 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.92, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 1.
2025-05-19 17:26:07.084 +05:30 [INF] Calculated investment amount: 8479.09.
2025-05-19 17:26:07.084 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.58, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 1.
2025-05-19 17:26:07.086 +05:30 [INF] Calculated investment amount: 8171.43.
2025-05-19 17:26:07.088 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.08, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 1.
2025-05-19 17:26:07.096 +05:30 [INF] Calculated investment amount: 3942.03.
2025-05-19 17:26:07.097 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.67, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 1.
2025-05-19 17:26:07.098 +05:30 [INF] Calculated investment amount: 4490.38.
2025-05-19 17:26:07.099 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.25, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 1.
2025-05-19 17:26:07.101 +05:30 [INF] Calculated investment amount: 4043.77.
2025-05-19 17:26:07.102 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.5, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 1.
2025-05-19 17:26:07.103 +05:30 [INF] Calculated investment amount: 4269.45.
2025-05-19 17:26:07.110 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.54, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 1.
2025-05-19 17:26:07.112 +05:30 [INF] Calculated investment amount: 495.87.
2025-05-19 17:26:07.112 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 1.
2025-05-19 17:26:07.114 +05:30 [INF] Calculated investment amount: 520.55.
2025-05-19 17:26:07.114 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.53, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 1.
2025-05-19 17:26:07.116 +05:30 [INF] Calculated investment amount: 496.72.
2025-05-19 17:26:07.117 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.58, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 1.
2025-05-19 17:26:07.118 +05:30 [INF] Calculated investment amount: 540.54.
2025-05-19 17:26:07.119 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 1.
2025-05-19 17:26:07.121 +05:30 [INF] Calculated investment amount: 1288.57.
2025-05-19 17:26:07.127 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 1.
2025-05-19 17:26:07.129 +05:30 [INF] Calculated investment amount: 1238.62.
2025-05-19 17:26:07.132 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:26:07.134 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:26:07.135 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 133.4583ms
2025-05-19 17:26:07.143 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:26:07.145 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=1 - 200 null application/json; charset=utf-8 148.3887ms
2025-05-19 17:26:07.162 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:26:07.164 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:26:07.166 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:07.169 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:07.170 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.3645ms
2025-05-19 17:26:07.175 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.8526ms
2025-05-19 17:26:07.180 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:26:07.184 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:26:07.186 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:07.195 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:07.197 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:26:07.198 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:26:07.199 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:26:07.199 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:26:07.202 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:26:07.207 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:26:07.209 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 8.6611ms
2025-05-19 17:26:07.212 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:26:07.212 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:26:07.214 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:26:07.214 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 33.7624ms
2025-05-19 17:26:07.216 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.2924ms
2025-05-19 17:26:07.226 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:26:07.228 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 43.7399ms
2025-05-19 17:26:21.420 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:26:21.425 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.428 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.4906ms
2025-05-19 17:26:21.433 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 17:26:21.436 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.437 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:26:21.438 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:26:21.440 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:26:21.442 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:26:21.447 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:26:21.448 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:26:21.449 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:26:21.449 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:26:21.450 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:26:21.451 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:26:21.452 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:26:21.453 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:26:21.454 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:26:21.455 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:26:21.455 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:26:21.456 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:26:21.457 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:26:21.458 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:26:21.459 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:26:21.466 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:26:21.467 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:26:21.469 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:26:21.470 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:26:21.471 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:26:21.472 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 32.0981ms
2025-05-19 17:26:21.474 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:26:21.474 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 41.1549ms
2025-05-19 17:26:21.483 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 17:26:21.485 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.486 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 2.4406ms
2025-05-19 17:26:21.489 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 509
2025-05-19 17:26:21.491 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.491 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:26:21.492 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:26:21.501 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":61.9,"SubAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"Percentage":19.05,"SubAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"Percentage":9.52,"SubAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":9.52,"SubAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}}
2025-05-19 17:26:21.502 +05:30 [INF] Target Amount: 10000
2025-05-19 17:26:21.503 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:26:21.504 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:26:21.505 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.06, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:26:21.506 +05:30 [INF] Calculated investment amount: 50.81.
2025-05-19 17:26:21.507 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:26:21.508 +05:30 [INF] Calculated investment amount: 57.8.
2025-05-19 17:26:21.515 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.97, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:26:21.517 +05:30 [INF] Calculated investment amount: 36.04.
2025-05-19 17:26:21.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.66, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:26:21.520 +05:30 [INF] Calculated investment amount: 46.84.
2025-05-19 17:26:21.521 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.27, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:26:21.523 +05:30 [INF] Calculated investment amount: 29.69.
2025-05-19 17:26:21.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.52, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:26:21.526 +05:30 [INF] Calculated investment amount: 34.36.
2025-05-19 17:26:21.534 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.62, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:26:21.536 +05:30 [INF] Calculated investment amount: 39.36.
2025-05-19 17:26:21.537 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.55, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:26:21.539 +05:30 [INF] Calculated investment amount: 39.8.
2025-05-19 17:26:21.540 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.21, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:26:21.541 +05:30 [INF] Calculated investment amount: 92.16.
2025-05-19 17:26:21.542 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.49, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:26:21.550 +05:30 [INF] Calculated investment amount: 88.79.
2025-05-19 17:26:21.551 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.56, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:26:21.552 +05:30 [INF] Calculated investment amount: 33.02.
2025-05-19 17:26:21.554 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.61, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:26:21.556 +05:30 [INF] Calculated investment amount: 32.26.
2025-05-19 17:26:21.556 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:26:21.558 +05:30 [INF] Calculated investment amount: 9.97.
2025-05-19 17:26:21.558 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:26:21.566 +05:30 [INF] Calculated investment amount: 12.07.
2025-05-19 17:26:21.567 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:26:21.568 +05:30 [INF] Calculated investment amount: 14.57.
2025-05-19 17:26:21.569 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.1, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:26:21.571 +05:30 [INF] Calculated investment amount: 12.23.
2025-05-19 17:26:21.572 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.18, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:26:21.574 +05:30 [INF] Calculated investment amount: 20.46.
2025-05-19 17:26:21.574 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:26:21.576 +05:30 [INF] Calculated investment amount: 25.16.
2025-05-19 17:26:21.582 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:26:21.585 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:26:21.586 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:26:21.587 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:26:21.590 +05:30 [INF] Calculated investment amount: 8.69.
2025-05-19 17:26:21.590 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.09, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:26:21.592 +05:30 [INF] Calculated investment amount: 7.84.
2025-05-19 17:26:21.593 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:26:21.599 +05:30 [INF] Calculated investment amount: 15.4.
2025-05-19 17:26:21.600 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.11, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:26:21.602 +05:30 [INF] Calculated investment amount: 14.39.
2025-05-19 17:26:21.602 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.7, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:26:21.604 +05:30 [INF] Calculated investment amount: 16.15.
2025-05-19 17:26:21.604 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.59, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:26:21.606 +05:30 [INF] Calculated investment amount: 17.21.
2025-05-19 17:26:21.608 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:26:21.614 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:26:21.616 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 114.951ms
2025-05-19 17:26:21.617 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:26:21.618 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 129.3425ms
2025-05-19 17:26:21.633 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:26:21.635 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:26:21.637 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.641 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.642 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 9.0421ms
2025-05-19 17:26:21.643 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.898ms
2025-05-19 17:26:21.649 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:26:21.658 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:26:21.664 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.667 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:26:21.671 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:26:21.672 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:26:21.673 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:26:21.673 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:26:21.675 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:26:21.677 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:26:21.678 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:26:21.679 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.9191ms
2025-05-19 17:26:21.681 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:26:21.682 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:26:21.683 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.0988ms
2025-05-19 17:26:21.684 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 26.2817ms
2025-05-19 17:26:21.692 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:26:21.696 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 47.4611ms
2025-05-19 17:27:50.334 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:27:50.339 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.340 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.6365ms
2025-05-19 17:27:50.345 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 17:27:50.347 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.348 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:27:50.349 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:27:50.352 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:27:50.357 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:27:50.359 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:27:50.359 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:27:50.361 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:27:50.362 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:27:50.363 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:27:50.363 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:27:50.365 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:27:50.366 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:27:50.368 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:27:50.375 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:27:50.376 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:27:50.376 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:27:50.377 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:27:50.378 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:27:50.379 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:27:50.380 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:27:50.381 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:27:50.383 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:27:50.384 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:27:50.386 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:27:50.392 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 40.43ms
2025-05-19 17:27:50.393 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:27:50.394 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 48.9673ms
2025-05-19 17:27:50.398 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 17:27:50.400 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.401 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 2.4715ms
2025-05-19 17:27:50.408 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 509
2025-05-19 17:27:50.410 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.411 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:27:50.412 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:27:50.414 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":61.9,"SubAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"Percentage":19.05,"SubAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"Percentage":9.52,"SubAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":9.52,"SubAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}}
2025-05-19 17:27:50.414 +05:30 [INF] Target Amount: 10000
2025-05-19 17:27:50.415 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:27:50.416 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:27:50.418 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.06, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:27:50.427 +05:30 [INF] Calculated investment amount: 50.81.
2025-05-19 17:27:50.428 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:27:50.429 +05:30 [INF] Calculated investment amount: 57.8.
2025-05-19 17:27:50.430 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.97, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:27:50.431 +05:30 [INF] Calculated investment amount: 36.04.
2025-05-19 17:27:50.432 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.66, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:27:50.433 +05:30 [INF] Calculated investment amount: 46.84.
2025-05-19 17:27:50.434 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.27, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:27:50.442 +05:30 [INF] Calculated investment amount: 29.69.
2025-05-19 17:27:50.443 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.52, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:27:50.445 +05:30 [INF] Calculated investment amount: 34.36.
2025-05-19 17:27:50.446 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.62, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:27:50.447 +05:30 [INF] Calculated investment amount: 39.36.
2025-05-19 17:27:50.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.55, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:27:50.450 +05:30 [INF] Calculated investment amount: 39.8.
2025-05-19 17:27:50.450 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.21, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:27:50.460 +05:30 [INF] Calculated investment amount: 92.16.
2025-05-19 17:27:50.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.49, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:27:50.464 +05:30 [INF] Calculated investment amount: 88.79.
2025-05-19 17:27:50.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.56, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:27:50.466 +05:30 [INF] Calculated investment amount: 33.02.
2025-05-19 17:27:50.466 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.61, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:27:50.474 +05:30 [INF] Calculated investment amount: 32.26.
2025-05-19 17:27:50.474 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:27:50.476 +05:30 [INF] Calculated investment amount: 9.97.
2025-05-19 17:27:50.477 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:27:50.479 +05:30 [INF] Calculated investment amount: 12.07.
2025-05-19 17:27:50.479 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:27:50.481 +05:30 [INF] Calculated investment amount: 14.57.
2025-05-19 17:27:50.481 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.1, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:27:50.483 +05:30 [INF] Calculated investment amount: 12.23.
2025-05-19 17:27:50.483 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.18, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:27:50.493 +05:30 [INF] Calculated investment amount: 20.46.
2025-05-19 17:27:50.493 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:27:50.495 +05:30 [INF] Calculated investment amount: 25.16.
2025-05-19 17:27:50.495 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:27:50.496 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:27:50.497 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:27:50.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:27:50.500 +05:30 [INF] Calculated investment amount: 8.69.
2025-05-19 17:27:50.502 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.09, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:27:50.508 +05:30 [INF] Calculated investment amount: 7.84.
2025-05-19 17:27:50.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:27:50.510 +05:30 [INF] Calculated investment amount: 15.4.
2025-05-19 17:27:50.511 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.11, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:27:50.514 +05:30 [INF] Calculated investment amount: 14.39.
2025-05-19 17:27:50.515 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.7, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:27:50.517 +05:30 [INF] Calculated investment amount: 16.15.
2025-05-19 17:27:50.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.59, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:27:50.524 +05:30 [INF] Calculated investment amount: 17.21.
2025-05-19 17:27:50.527 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:27:50.528 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:27:50.529 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 115.8289ms
2025-05-19 17:27:50.531 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:27:50.531 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 123.1086ms
2025-05-19 17:27:50.547 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:27:50.550 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:27:50.554 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.557 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.558 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.526ms
2025-05-19 17:27:50.559 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.7184ms
2025-05-19 17:27:50.564 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:27:50.589 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:27:50.593 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.595 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:27:50.595 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:27:50.596 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:27:50.597 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:27:50.598 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:27:50.599 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:27:50.605 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:27:50.606 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:27:50.608 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.0799ms
2025-05-19 17:27:50.609 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:27:50.609 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:27:50.611 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.7083ms
2025-05-19 17:27:50.611 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 22.5813ms
2025-05-19 17:27:50.613 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:27:50.616 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 51.8596ms
2025-05-19 17:28:53.373 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 17:28:53.380 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.381 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.0182ms
2025-05-19 17:28:53.386 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-19 17:28:53.391 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.392 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:28:53.393 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:28:53.396 +05:30 [INF] Starting allocation calculation...
2025-05-19 17:28:53.398 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 17:28:53.404 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 17:28:53.405 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 17:28:53.405 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 17:28:53.406 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 17:28:53.407 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 17:28:53.408 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 17:28:53.409 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:28:53.411 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:28:53.412 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:28:53.420 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:28:53.423 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:28:53.425 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 17:28:53.427 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 17:28:53.428 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 17:28:53.430 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 17:28:53.435 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 17:28:53.438 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:28:53.444 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 17:28:53.446 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 17:28:53.447 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 17:28:53.455 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 59.5988ms
2025-05-19 17:28:53.457 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 17:28:53.459 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 72.5135ms
2025-05-19 17:28:53.463 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - null null
2025-05-19 17:28:53.471 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.472 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 204 null null 8.8561ms
2025-05-19 17:28:53.476 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - application/json 509
2025-05-19 17:28:53.479 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.480 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:28:53.482 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:28:53.490 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":61.9,"SubAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"Percentage":19.05,"SubAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"Percentage":9.52,"SubAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":9.52,"SubAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}}
2025-05-19 17:28:53.492 +05:30 [INF] Target Amount: 100000
2025-05-19 17:28:53.493 +05:30 [INF] Investment Horizon: 29
2025-05-19 17:28:53.494 +05:30 [INF] Starting product allocation calculation.
2025-05-19 17:28:53.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.06, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 17:28:53.496 +05:30 [INF] Calculated investment amount: 508.1.
2025-05-19 17:28:53.497 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:28:53.506 +05:30 [INF] Calculated investment amount: 578.03.
2025-05-19 17:28:53.508 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.97, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 17:28:53.510 +05:30 [INF] Calculated investment amount: 360.4.
2025-05-19 17:28:53.511 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.66, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 17:28:53.513 +05:30 [INF] Calculated investment amount: 468.39.
2025-05-19 17:28:53.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.27, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 17:28:53.521 +05:30 [INF] Calculated investment amount: 296.91.
2025-05-19 17:28:53.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.52, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 17:28:53.523 +05:30 [INF] Calculated investment amount: 343.6.
2025-05-19 17:28:53.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.62, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 17:28:53.526 +05:30 [INF] Calculated investment amount: 393.57.
2025-05-19 17:28:53.527 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.55, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 17:28:53.529 +05:30 [INF] Calculated investment amount: 397.97.
2025-05-19 17:28:53.530 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.21, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 17:28:53.532 +05:30 [INF] Calculated investment amount: 921.56.
2025-05-19 17:28:53.540 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.49, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 17:28:53.542 +05:30 [INF] Calculated investment amount: 887.87.
2025-05-19 17:28:53.544 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.56, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 17:28:53.545 +05:30 [INF] Calculated investment amount: 330.22.
2025-05-19 17:28:53.546 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.61, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 17:28:53.549 +05:30 [INF] Calculated investment amount: 322.59.
2025-05-19 17:28:53.555 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 17:28:53.559 +05:30 [INF] Calculated investment amount: 99.66.
2025-05-19 17:28:53.560 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 17:28:53.562 +05:30 [INF] Calculated investment amount: 120.72.
2025-05-19 17:28:53.563 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 17:28:53.569 +05:30 [INF] Calculated investment amount: 145.68.
2025-05-19 17:28:53.572 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.1, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 17:28:53.573 +05:30 [INF] Calculated investment amount: 122.33.
2025-05-19 17:28:53.574 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.18, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 17:28:53.575 +05:30 [INF] Calculated investment amount: 204.64.
2025-05-19 17:28:53.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 17:28:53.578 +05:30 [INF] Calculated investment amount: 251.61.
2025-05-19 17:28:53.579 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 17:28:53.580 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 17:28:53.581 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 17:28:53.589 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 17:28:53.592 +05:30 [INF] Calculated investment amount: 86.9.
2025-05-19 17:28:53.593 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.09, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 17:28:53.595 +05:30 [INF] Calculated investment amount: 78.42.
2025-05-19 17:28:53.596 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 17:28:53.597 +05:30 [INF] Calculated investment amount: 154.01.
2025-05-19 17:28:53.598 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.11, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 17:28:53.605 +05:30 [INF] Calculated investment amount: 143.86.
2025-05-19 17:28:53.606 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.7, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 17:28:53.608 +05:30 [INF] Calculated investment amount: 161.47.
2025-05-19 17:28:53.609 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.59, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 17:28:53.611 +05:30 [INF] Calculated investment amount: 172.12.
2025-05-19 17:28:53.616 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 17:28:53.623 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:28:53.624 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 134.4185ms
2025-05-19 17:28:53.626 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 17:28:53.627 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=29 - 200 null application/json; charset=utf-8 151.4793ms
2025-05-19 17:28:53.640 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:28:53.643 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:28:53.644 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.647 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.649 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.4708ms
2025-05-19 17:28:53.650 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.1147ms
2025-05-19 17:28:53.654 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 17:28:53.659 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 17:28:53.668 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.678 +05:30 [INF] CORS policy execution successful.
2025-05-19 17:28:53.679 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:28:53.680 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:28:53.681 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 17:28:53.682 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 17:28:53.685 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 17:28:53.688 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:28:53.689 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 17:28:53.690 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.1087ms
2025-05-19 17:28:53.691 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 17:28:53.692 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 17:28:53.696 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 10.9066ms
2025-05-19 17:28:53.697 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 38.0315ms
2025-05-19 17:28:53.705 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 17:28:53.714 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 59.7927ms
2025-05-19 21:13:07.928 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 21:13:08.050 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:08.083 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 156.2785ms
2025-05-19 21:13:08.168 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-19 21:13:08.253 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:08 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:13:08.457 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:08 PM'.
2025-05-19 21:13:08.466 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:08.496 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 21:13:08.533 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:13:08.572 +05:30 [INF] Starting allocation calculation...
2025-05-19 21:13:08.606 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 21:13:08.622 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-19 21:13:08.634 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-19 21:13:08.653 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 21:13:08.661 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 21:13:08.686 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 21:13:08.696 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 21:13:08.731 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 21:13:08.750 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 21:13:08.800 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 21:13:08.828 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 21:13:08.839 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 21:13:08.868 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}
2025-05-19 21:13:08.897 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}
2025-05-19 21:13:08.945 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}
2025-05-19 21:13:09.681 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 21:13:09.850 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}
2025-05-19 21:13:09.868 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 21:13:09.919 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 21:13:09.930 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":61.9,"subAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"percentage":19.05,"subAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"percentage":9.52,"subAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":9.52,"subAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}
2025-05-19 21:13:09.968 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 21:13:09.984 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 1419.9876ms
2025-05-19 21:13:10.032 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 21:13:10.067 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 1899.0656ms
2025-05-19 21:13:10.185 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 21:13:10.226 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:10.247 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 62.1483ms
2025-05-19 21:13:10.264 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 509
2025-05-19 21:13:10.502 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:13:10.645 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:10 PM'.
2025-05-19 21:13:10.750 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:10.906 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 21:13:10.972 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:13:11.464 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":61.9,"SubAssets":{"Large Cap":15.48,"Mid Cap":20.63,"Small Cap":25.79}},"fixedIncome":{"Percentage":19.05,"SubAssets":{"Gov Bonds":3.17,"Corp Bonds":12.7,"Fixed Dep":3.17}},"commodities":{"Percentage":9.52,"SubAssets":{"Precious Metals":1.59,"Energy":3.97,"Agriculture":3.97}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":9.52,"SubAssets":{"REITs":2.12,"Residential Prop":2.12,"Commercial Prop":5.29}}}}
2025-05-19 21:13:11.509 +05:30 [INF] Target Amount: 10000
2025-05-19 21:13:11.558 +05:30 [INF] Investment Horizon: 29
2025-05-19 21:13:11.581 +05:30 [INF] Starting product allocation calculation.
2025-05-19 21:13:11.843 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.06, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 21:13:11.910 +05:30 [INF] Calculated investment amount: 50.81.
2025-05-19 21:13:11.956 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 21:13:12.000 +05:30 [INF] Calculated investment amount: 57.8.
2025-05-19 21:13:12.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.97, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 21:13:12.493 +05:30 [INF] Calculated investment amount: 36.04.
2025-05-19 21:13:12.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.66, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 21:13:12.587 +05:30 [INF] Calculated investment amount: 46.84.
2025-05-19 21:13:12.599 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.27, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 21:13:12.631 +05:30 [INF] Calculated investment amount: 29.69.
2025-05-19 21:13:12.656 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.52, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 21:13:12.686 +05:30 [INF] Calculated investment amount: 34.36.
2025-05-19 21:13:12.695 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.62, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 21:13:12.726 +05:30 [INF] Calculated investment amount: 39.36.
2025-05-19 21:13:12.735 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.55, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 21:13:12.770 +05:30 [INF] Calculated investment amount: 39.8.
2025-05-19 21:13:12.799 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.21, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 21:13:12.865 +05:30 [INF] Calculated investment amount: 92.16.
2025-05-19 21:13:12.877 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.49, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 21:13:12.928 +05:30 [INF] Calculated investment amount: 88.79.
2025-05-19 21:13:12.961 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.56, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 21:13:13.034 +05:30 [INF] Calculated investment amount: 33.02.
2025-05-19 21:13:13.066 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.61, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 21:13:13.102 +05:30 [INF] Calculated investment amount: 32.26.
2025-05-19 21:13:13.146 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 21:13:13.176 +05:30 [INF] Calculated investment amount: 9.97.
2025-05-19 21:13:13.187 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 21:13:13.223 +05:30 [INF] Calculated investment amount: 12.07.
2025-05-19 21:13:13.248 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 21:13:13.265 +05:30 [INF] Calculated investment amount: 14.57.
2025-05-19 21:13:13.296 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.1, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 21:13:13.339 +05:30 [INF] Calculated investment amount: 12.23.
2025-05-19 21:13:13.366 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.18, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 21:13:13.472 +05:30 [INF] Calculated investment amount: 20.46.
2025-05-19 21:13:13.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 21:13:13.745 +05:30 [INF] Calculated investment amount: 25.16.
2025-05-19 21:13:13.756 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 21:13:13.788 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 21:13:13.816 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 21:13:13.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 21:13:13.881 +05:30 [INF] Calculated investment amount: 8.69.
2025-05-19 21:13:13.894 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.09, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 21:13:13.971 +05:30 [INF] Calculated investment amount: 7.84.
2025-05-19 21:13:14.019 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 21:13:14.035 +05:30 [INF] Calculated investment amount: 15.4.
2025-05-19 21:13:14.064 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.11, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 21:13:14.146 +05:30 [INF] Calculated investment amount: 14.39.
2025-05-19 21:13:14.160 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.7, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 21:13:14.214 +05:30 [INF] Calculated investment amount: 16.15.
2025-05-19 21:13:14.224 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.59, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 21:13:14.276 +05:30 [INF] Calculated investment amount: 17.21.
2025-05-19 21:13:14.320 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 21:13:14.338 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:13:14.376 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 2925.9491ms
2025-05-19 21:13:14.412 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 21:13:14.443 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 4178.4341ms
2025-05-19 21:13:14.643 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:13:14.887 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:13:14.945 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:15.009 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:15.017 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 373.993ms
2025-05-19 21:13:15.046 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 158.2074ms
2025-05-19 21:13:15.111 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:13:15.173 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:13:15.226 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:13:15.271 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:13:15.360 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:15 PM'.
2025-05-19 21:13:15.400 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:43:15 PM'.
2025-05-19 21:13:15.430 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:15.466 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:13:15.493 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:13:15.500 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:13:15.531 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:13:15.574 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:13:15.555 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:13:15.605 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:13:15.639 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:13:15.640 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:13:15.666 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 92.0437ms
2025-05-19 21:13:15.710 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 80.5012ms
2025-05-19 21:13:15.719 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:13:15.756 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:13:15.765 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 654.3649ms
2025-05-19 21:13:15.798 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 624.9102ms
2025-05-19 21:16:29.804 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:16:29.842 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:16:30.911 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:30.940 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:31.007 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 1203.167ms
2025-05-19 21:16:31.079 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 1236.3569ms
2025-05-19 21:16:31.159 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:16:31.260 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:16:31.298 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:31 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:16:31.331 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:31 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:16:31.377 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:31 PM'.
2025-05-19 21:16:31.395 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:31 PM'.
2025-05-19 21:16:31.419 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:31.444 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:31.456 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:16:31.473 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:16:31.495 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:16:31.517 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:16:31.585 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:16:31.613 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:16:31.641 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:16:31.648 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 103.0011ms
2025-05-19 21:16:31.653 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:16:31.713 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:16:31.724 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 139.8488ms
2025-05-19 21:16:31.739 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 579.965ms
2025-05-19 21:16:31.764 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:16:31.852 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 592.6065ms
2025-05-19 21:16:41.500 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:16:41.504 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:16:41.681 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:41.791 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:41.803 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 303.6248ms
2025-05-19 21:16:41.876 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 372.8332ms
2025-05-19 21:16:41.968 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:16:42.034 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:16:42.080 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:16:42.130 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:16:42.172 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:42 PM'.
2025-05-19 21:16:42.205 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:46:42 PM'.
2025-05-19 21:16:42.220 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:42.238 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:16:42.260 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:16:42.251 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:16:42.278 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:16:42.288 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:16:42.321 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:16:42.340 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:16:42.363 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 52.3424ms
2025-05-19 21:16:42.393 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:16:42.402 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:16:42.411 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:16:42.435 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 400.8405ms
2025-05-19 21:16:42.465 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 124.8974ms
2025-05-19 21:16:42.559 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:16:42.606 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 638.1089ms
2025-05-19 21:18:06.549 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:18:07.283 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:18:07.808 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:07.840 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:07.846 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 1296.5235ms
2025-05-19 21:18:07.862 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 578.3612ms
2025-05-19 21:18:09.279 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:18:09.329 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:18:09.379 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:09.556 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:09.581 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:09 PM'.
2025-05-19 21:18:09.612 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:09 PM'.
2025-05-19 21:18:09.716 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:09.881 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:10.125 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:10.134 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:10.151 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:18:10.160 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:18:10.190 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:10.259 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:18:10.759 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 584.1529ms
2025-05-19 21:18:11.290 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:18:11.293 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:11.308 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:11.323 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 2043.3729ms
2025-05-19 21:18:11.340 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 1081.0204ms
2025-05-19 21:18:12.017 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:12.027 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 2697.3675ms
2025-05-19 21:18:24.710 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:18:24.739 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:18:24.915 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:25.010 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:25.042 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 332.0648ms
2025-05-19 21:18:25.068 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 329.0493ms
2025-05-19 21:18:25.139 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:18:25.185 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:18:25.207 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:25 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:25.249 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:25 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:25.309 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:25 PM'.
2025-05-19 21:18:25.333 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:25 PM'.
2025-05-19 21:18:25.360 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:25.392 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:25.369 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:25.433 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:18:25.438 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:25.473 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:18:25.489 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:18:25.511 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:18:25.555 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:25.556 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:25.579 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 106.48ms
2025-05-19 21:18:25.605 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 66.348ms
2025-05-19 21:18:25.615 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:25.636 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:25.654 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 514.9205ms
2025-05-19 21:18:25.671 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 485.2832ms
2025-05-19 21:18:46.936 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:18:47.157 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:18:47.304 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:47.379 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:47.415 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 479.0922ms
2025-05-19 21:18:47.422 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 265.5143ms
2025-05-19 21:18:47.471 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:18:47.523 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:18:47.556 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:47.588 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:47.617 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:47 PM'.
2025-05-19 21:18:47.640 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:47 PM'.
2025-05-19 21:18:47.652 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:47.660 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:47.667 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:47.682 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:47.690 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:18:47.733 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:18:47.752 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:18:47.797 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:18:47.805 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:47.818 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:47.834 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 61.9759ms
2025-05-19 21:18:47.906 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:47.888 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 135.3739ms
2025-05-19 21:18:47.941 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 418.4658ms
2025-05-19 21:18:47.963 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:48.066 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 593.9102ms
2025-05-19 21:18:50.609 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:18:50.644 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:18:51.280 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:51 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:51.295 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:51 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:18:51.316 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:51 PM'.
2025-05-19 21:18:51.432 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:48:51 PM'.
2025-05-19 21:18:51.444 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:51.459 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:18:51.484 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:51.471 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:51.492 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:18:51.507 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:18:51.526 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:18:51.558 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:51.567 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:18:51.582 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 32.8405ms
2025-05-19 21:18:51.594 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:18:51.610 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:18:51.628 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 101.6416ms
2025-05-19 21:18:51.644 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 1034.3208ms
2025-05-19 21:18:51.672 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:18:51.731 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 1086.9616ms
2025-05-19 21:19:32.624 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:19:32.871 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:19:33.506 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:33.539 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:33.545 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 920.7962ms
2025-05-19 21:19:33.613 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 741.5289ms
2025-05-19 21:19:33.881 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:19:33.993 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:19:34.055 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:19:34.105 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:19:34.134 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:34 PM'.
2025-05-19 21:19:34.164 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:34 PM'.
2025-05-19 21:19:34.179 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:34.196 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:34.203 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:19:34.217 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:19:34.234 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:19:34.246 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:19:34.290 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:19:34.311 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:19:34.342 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 64.9306ms
2025-05-19 21:19:34.355 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:19:34.368 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:19:34.378 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:19:34.387 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 506.1036ms
2025-05-19 21:19:34.412 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 101.6267ms
2025-05-19 21:19:34.476 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:19:34.493 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 499.5373ms
2025-05-19 21:19:55.842 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:19:55.877 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:19:55.937 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:55.988 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:56.003 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 160.9177ms
2025-05-19 21:19:56.020 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 142.6641ms
2025-05-19 21:19:56.291 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:19:56.363 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:19:56.428 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:56 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:19:56.494 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:56 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:19:56.540 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:56 PM'.
2025-05-19 21:19:56.626 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:49:56 PM'.
2025-05-19 21:19:56.631 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:56.642 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:19:56.649 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:19:56.656 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:19:56.675 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:19:56.704 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:19:56.805 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:19:56.810 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:19:56.861 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 125.7883ms
2025-05-19 21:19:56.864 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:19:56.880 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:19:56.894 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:19:56.901 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 610.9174ms
2025-05-19 21:19:56.957 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 152.5206ms
2025-05-19 21:19:57.031 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:19:57.047 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 684.2992ms
2025-05-19 21:20:03.567 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:20:03.572 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:20:03.973 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:20:04.005 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:20:04.024 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 456.8787ms
2025-05-19 21:20:04.043 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 471.0003ms
2025-05-19 21:20:04.099 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:20:04.142 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:20:04.170 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:50:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:20:04.204 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:50:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:20:04.232 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:50:04 PM'.
2025-05-19 21:20:04.261 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:50:04 PM'.
2025-05-19 21:20:04.280 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:20:04.292 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:20:04.306 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:20:04.314 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:20:04.330 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:20:04.348 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:20:04.380 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:20:04.393 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:20:04.424 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 54.5518ms
2025-05-19 21:20:04.447 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:20:04.477 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:20:04.464 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:20:04.500 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 107.3337ms
2025-05-19 21:20:04.518 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 418.3443ms
2025-05-19 21:20:04.545 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:20:04.595 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 453.1302ms
2025-05-19 21:22:01.972 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:22:02.028 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:22:02.507 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:02.559 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:02.580 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 607.4088ms
2025-05-19 21:22:02.589 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 560.9052ms
2025-05-19 21:22:02.702 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:22:02.758 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:22:02.805 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:22:02.843 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:22:02.873 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:02 PM'.
2025-05-19 21:22:02.918 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:02 PM'.
2025-05-19 21:22:02.946 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:02.962 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:02.970 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:22:02.987 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:22:03.007 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:22:03.024 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:22:03.118 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:22:03.157 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:22:03.197 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 96.1001ms
2025-05-19 21:22:03.228 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:22:03.304 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:22:03.311 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:22:03.331 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 628.2929ms
2025-05-19 21:22:03.358 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 201.6848ms
2025-05-19 21:22:03.427 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:22:03.438 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 680.0164ms
2025-05-19 21:22:22.971 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:22:22.985 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:22:23.084 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:23.119 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:23.225 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 253.9216ms
2025-05-19 21:22:23.234 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 248.7718ms
2025-05-19 21:22:23.278 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:22:23.326 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:22:23.360 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:22:23.392 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:22:23.427 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:23 PM'.
2025-05-19 21:22:23.456 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:23 PM'.
2025-05-19 21:22:23.470 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:23.480 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:23.486 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:22:23.500 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:22:23.517 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:22:23.531 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:22:23.553 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:22:23.580 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:22:23.588 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:22:23.606 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 33.303ms
2025-05-19 21:22:23.618 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:22:23.629 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:22:23.645 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 92.1563ms
2025-05-19 21:22:23.653 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 326.9041ms
2025-05-19 21:22:23.669 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:22:23.726 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 447.6021ms
2025-05-19 21:22:42.319 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:22:42.321 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:22:42.380 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:42.425 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:42.439 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 120.5752ms
2025-05-19 21:22:42.447 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 125.6573ms
2025-05-19 21:22:42.502 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:22:42.596 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:22:42.645 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:22:42.715 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:22:42.748 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:42 PM'.
2025-05-19 21:22:42.780 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:52:42 PM'.
2025-05-19 21:22:42.796 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:42.823 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:22:42.830 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:22:42.843 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:22:42.859 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:22:42.873 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:22:42.892 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:22:42.931 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:22:42.932 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:22:42.961 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 41.7722ms
2025-05-19 21:22:42.968 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:22:42.986 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:22:43.004 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 111.6596ms
2025-05-19 21:22:43.012 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 415.9663ms
2025-05-19 21:22:43.031 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:22:43.091 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 588.9583ms
2025-05-19 21:26:20.899 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:26:21.091 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:26:21.887 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:21.960 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:21.966 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 1067.5651ms
2025-05-19 21:26:21.973 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 881.0885ms
2025-05-19 21:26:22.137 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:26:22.137 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:26:23.171 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:26:23.226 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:23 PM'.
2025-05-19 21:26:23.203 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:26:23.244 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:23.267 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:23 PM'.
2025-05-19 21:26:23.291 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:26:23.307 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:23.322 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:26:23.328 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:26:23.370 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:26:23.372 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:26:23.400 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:26:23.422 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 68.367ms
2025-05-19 21:26:23.439 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:26:23.455 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:26:23.469 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:26:23.484 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 1347.6954ms
2025-05-19 21:26:23.529 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 129.8491ms
2025-05-19 21:26:23.623 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:26:23.632 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 1494.8994ms
2025-05-19 21:26:33.906 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:26:33.913 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:26:34.024 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:33.971 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:34.223 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 309.8823ms
2025-05-19 21:26:34.248 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 342.0076ms
2025-05-19 21:26:34.309 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:26:34.353 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:26:34.392 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:26:34.420 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:26:34.452 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:34 PM'.
2025-05-19 21:26:34.483 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:56:34 PM'.
2025-05-19 21:26:34.495 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:34.503 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:26:34.516 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:26:34.526 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:26:34.536 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:26:34.550 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:26:34.583 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:26:34.605 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:26:34.627 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 50.5685ms
2025-05-19 21:26:34.645 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:26:34.667 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:26:34.683 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:26:34.700 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 391.6344ms
2025-05-19 21:26:34.719 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 114.4613ms
2025-05-19 21:26:34.785 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:26:34.796 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 442.6071ms
2025-05-19 21:27:17.253 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:27:17.317 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:27:17.427 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:17.465 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 212.7893ms
2025-05-19 21:27:17.457 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:17.531 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:27:17.544 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 227.284ms
2025-05-19 21:27:17.619 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:27:17.689 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:27:17.724 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:17 PM'.
2025-05-19 21:27:17.756 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:27:17.766 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:17.796 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:17 PM'.
2025-05-19 21:27:17.802 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:27:17.821 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:17.835 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:27:17.851 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:27:17.888 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:27:17.888 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:27:17.916 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 38.6265ms
2025-05-19 21:27:17.943 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:27:17.969 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:27:17.991 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:27:18.015 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:27:17.996 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 465.7796ms
2025-05-19 21:27:18.038 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 95.2649ms
2025-05-19 21:27:18.088 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:27:18.097 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 407.7225ms
2025-05-19 21:27:36.495 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:27:36.514 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:27:36.869 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:36.896 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:36.911 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 416.4683ms
2025-05-19 21:27:36.926 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 411.3512ms
2025-05-19 21:27:37.043 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:27:36.977 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:27:37.099 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:37 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:27:37.136 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:37 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:27:37.155 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:37 PM'.
2025-05-19 21:27:37.177 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:37 PM'.
2025-05-19 21:27:37.190 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:37.206 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:37.212 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:27:37.225 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:27:37.240 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:27:37.258 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:27:37.298 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:27:37.310 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:27:37.333 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 45.7185ms
2025-05-19 21:27:37.351 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:27:37.363 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:27:37.377 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:27:37.391 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 347.9292ms
2025-05-19 21:27:37.411 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 101.0809ms
2025-05-19 21:27:37.463 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:27:37.479 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 502.567ms
2025-05-19 21:27:56.510 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:27:56.516 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:27:56.611 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:56.693 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:56.713 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 203.0454ms
2025-05-19 21:27:56.724 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 208.2053ms
2025-05-19 21:27:56.778 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:27:56.827 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:27:56.866 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:56 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:27:56.903 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:56 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:27:56.935 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:56 PM'.
2025-05-19 21:27:56.965 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:57:56 PM'.
2025-05-19 21:27:56.975 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:56.992 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:27:57.006 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:27:57.014 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:27:57.028 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:27:57.045 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:27:57.074 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:27:57.115 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:27:57.123 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:27:57.137 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 32.7745ms
2025-05-19 21:27:57.143 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:27:57.167 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:27:57.183 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 109.8504ms
2025-05-19 21:27:57.199 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 372.0582ms
2025-05-19 21:27:57.221 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:27:57.279 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 500.3377ms
2025-05-19 21:28:33.683 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:28:34.003 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:28:34.153 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:34.409 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 726.0621ms
2025-05-19 21:28:34.395 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:34.464 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 461.5265ms
2025-05-19 21:28:34.449 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:28:34.513 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:28:34.609 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:28:34.645 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:28:34.708 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:34 PM'.
2025-05-19 21:28:34.851 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:34 PM'.
2025-05-19 21:28:34.868 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:34.883 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:34.889 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:28:34.902 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:28:34.918 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:28:34.934 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:28:34.974 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:28:35.005 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:28:35.021 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 58.8538ms
2025-05-19 21:28:35.057 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:28:35.073 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:28:35.081 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 631.8562ms
2025-05-19 21:28:35.090 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:28:35.148 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 142.8802ms
2025-05-19 21:28:35.168 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:28:35.186 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 673.1814ms
2025-05-19 21:28:46.680 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:28:46.693 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:28:46.801 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:46.846 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:46.865 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 185.2188ms
2025-05-19 21:28:46.874 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 181.5438ms
2025-05-19 21:28:47.039 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:28:47.075 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:28:47.115 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:28:47.146 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:28:47.629 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:47 PM'.
2025-05-19 21:28:47.645 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:58:47 PM'.
2025-05-19 21:28:47.658 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:47.696 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:28:47.707 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:28:47.713 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:28:47.724 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:28:47.737 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:28:47.756 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:28:47.799 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:28:47.810 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:28:47.811 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:28:47.882 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 105.4352ms
2025-05-19 21:28:47.909 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 152.8056ms
2025-05-19 21:28:47.931 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:28:47.951 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:28:47.995 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 919.3106ms
2025-05-19 21:28:48.019 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 980.6355ms
2025-05-19 21:29:04.925 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 21:29:04.995 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:05.040 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 114.7794ms
2025-05-19 21:29:05.083 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 21:29:05.118 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:59:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 21:29:05.151 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 12:04:09 PM', Current time (UTC): '5/19/2025 3:59:05 PM'.
2025-05-19 21:29:05.168 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:05.180 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 21:29:05.203 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 21:29:06.155 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:29:06.187 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 951.7765ms
2025-05-19 21:29:06.211 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 21:29:06.229 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 1146.7038ms
2025-05-19 21:29:19.229 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 21:29:19.485 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:19.504 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 275.4177ms
2025-05-19 21:29:19.576 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 109
2025-05-19 21:29:19.612 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:19.658 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 21:29:19.668 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:29:19.693 +05:30 [INF] Starting allocation calculation...
2025-05-19 21:29:19.732 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 21:29:19.739 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 21:29:19.750 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 21:29:19.757 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 21:29:19.769 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 21:29:19.782 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-19 21:29:19.792 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-19 21:29:19.837 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 21:29:19.848 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 21:29:19.859 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 21:29:19.875 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 21:29:19.891 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 21:29:19.907 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-19 21:29:19.931 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-19 21:29:19.950 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 21:29:19.968 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 21:29:19.986 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-19 21:29:20.008 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 21:29:20.078 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 21:29:20.093 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-19 21:29:20.103 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 21:29:20.122 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 429.3207ms
2025-05-19 21:29:20.147 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 21:29:20.163 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 586.9437ms
2025-05-19 21:29:20.215 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=23 - null null
2025-05-19 21:29:20.247 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:20.259 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=23 - 204 null null 43.685ms
2025-05-19 21:29:20.298 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=23 - application/json 477
2025-05-19 21:29:20.329 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:20.339 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 21:29:20.352 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:29:20.377 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-19 21:29:20.389 +05:30 [INF] Target Amount: 100000
2025-05-19 21:29:20.403 +05:30 [INF] Investment Horizon: 23
2025-05-19 21:29:20.418 +05:30 [INF] Starting product allocation calculation.
2025-05-19 21:29:20.440 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-19 21:29:20.465 +05:30 [INF] Calculated investment amount: 1395.98.
2025-05-19 21:29:20.482 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 21:29:20.507 +05:30 [INF] Calculated investment amount: 1519.07.
2025-05-19 21:29:20.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-19 21:29:20.543 +05:30 [INF] Calculated investment amount: 637.39.
2025-05-19 21:29:20.558 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-19 21:29:20.586 +05:30 [INF] Calculated investment amount: 764.54.
2025-05-19 21:29:20.600 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-19 21:29:20.621 +05:30 [INF] Calculated investment amount: 454.78.
2025-05-19 21:29:20.637 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-19 21:29:20.664 +05:30 [INF] Calculated investment amount: 504.71.
2025-05-19 21:29:20.680 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-19 21:29:20.702 +05:30 [INF] Calculated investment amount: 1246.94.
2025-05-19 21:29:20.718 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-19 21:29:20.746 +05:30 [INF] Calculated investment amount: 1248.41.
2025-05-19 21:29:20.762 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-19 21:29:20.780 +05:30 [INF] Calculated investment amount: 1076.89.
2025-05-19 21:29:20.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-19 21:29:20.824 +05:30 [INF] Calculated investment amount: 1055.03.
2025-05-19 21:29:20.839 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-19 21:29:20.880 +05:30 [INF] Calculated investment amount: 1074.09.
2025-05-19 21:29:20.888 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-19 21:29:20.918 +05:30 [INF] Calculated investment amount: 1067.43.
2025-05-19 21:29:20.935 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-19 21:29:20.964 +05:30 [INF] Calculated investment amount: 392.79.
2025-05-19 21:29:20.980 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-19 21:29:21.008 +05:30 [INF] Calculated investment amount: 439.12.
2025-05-19 21:29:21.024 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-19 21:29:21.049 +05:30 [INF] Calculated investment amount: 187.57.
2025-05-19 21:29:21.058 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-19 21:29:21.082 +05:30 [INF] Calculated investment amount: 165.74.
2025-05-19 21:29:21.092 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-19 21:29:21.130 +05:30 [INF] Calculated investment amount: 252.7.
2025-05-19 21:29:21.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-19 21:29:21.166 +05:30 [INF] Calculated investment amount: 284.78.
2025-05-19 21:29:21.183 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 21:29:21.208 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 21:29:21.224 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 21:29:21.242 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 23.
2025-05-19 21:29:21.271 +05:30 [INF] Calculated investment amount: 128.06.
2025-05-19 21:29:21.288 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 23.
2025-05-19 21:29:21.320 +05:30 [INF] Calculated investment amount: 120.29.
2025-05-19 21:29:21.336 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 23.
2025-05-19 21:29:21.362 +05:30 [INF] Calculated investment amount: 135.01.
2025-05-19 21:29:21.379 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 23.
2025-05-19 21:29:21.429 +05:30 [INF] Calculated investment amount: 128.56.
2025-05-19 21:29:21.450 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 23.
2025-05-19 21:29:21.482 +05:30 [INF] Calculated investment amount: 102.82.
2025-05-19 21:29:21.515 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 23.
2025-05-19 21:29:21.598 +05:30 [INF] Calculated investment amount: 107.14.
2025-05-19 21:29:21.696 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 21:29:21.711 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:29:21.732 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 1357.2623ms
2025-05-19 21:29:21.751 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 21:29:21.767 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=23 - 200 null application/json; charset=utf-8 1468.9064ms
2025-05-19 21:29:21.892 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:29:21.904 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:29:22.140 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:22.188 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:22.195 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 302.7318ms
2025-05-19 21:29:22.211 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 307.4129ms
2025-05-19 21:29:22.246 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:29:22.287 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:29:22.336 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:22.379 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:29:22.392 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:29:22.399 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:29:22.413 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:29:22.427 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:29:22.463 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:29:22.482 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:29:22.502 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 48.7869ms
2025-05-19 21:29:22.520 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:29:22.533 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:29:22.547 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:29:22.562 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 315.8615ms
2025-05-19 21:29:22.580 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 98.1717ms
2025-05-19 21:29:22.634 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:29:22.644 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 356.4981ms
2025-05-19 21:34:33.761 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 21:34:33.823 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:33.839 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 78.4494ms
2025-05-19 21:34:33.885 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 21:34:33.918 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:33.926 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 21:34:33.939 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 21:34:34.684 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:34:34.706 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 747.3674ms
2025-05-19 21:34:34.727 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 21:34:34.749 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 863.9276ms
2025-05-19 21:34:48.321 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-19 21:34:48.531 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:48.543 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 222.3288ms
2025-05-19 21:34:48.620 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-19 21:34:48.650 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:48.662 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 21:34:48.681 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:34:48.703 +05:30 [INF] Starting allocation calculation...
2025-05-19 21:34:48.730 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-19 21:34:48.746 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-19 21:34:48.760 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-19 21:34:48.779 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-19 21:34:48.787 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-19 21:34:48.803 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-19 21:34:48.811 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-19 21:34:48.832 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 21:34:48.848 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 21:34:48.862 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 21:34:48.875 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 21:34:48.883 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 21:34:48.896 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-19 21:34:48.909 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-19 21:34:48.926 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-19 21:34:48.951 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-19 21:34:48.972 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-19 21:34:48.992 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 21:34:49.026 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-19 21:34:49.043 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-19 21:34:49.061 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-19 21:34:49.079 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 378.8602ms
2025-05-19 21:34:49.096 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-19 21:34:49.112 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 491.9423ms
2025-05-19 21:34:49.162 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - null null
2025-05-19 21:34:49.191 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:49.202 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 204 null null 40.1662ms
2025-05-19 21:34:49.241 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - application/json 483
2025-05-19 21:34:49.287 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:49.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 21:34:49.317 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:34:49.359 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-19 21:34:49.376 +05:30 [INF] Target Amount: 10000
2025-05-19 21:34:49.391 +05:30 [INF] Investment Horizon: 29
2025-05-19 21:34:49.400 +05:30 [INF] Starting product allocation calculation.
2025-05-19 21:34:49.421 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.38, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 29.
2025-05-19 21:34:49.445 +05:30 [INF] Calculated investment amount: 59.13.
2025-05-19 21:34:49.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.62, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 21:34:49.490 +05:30 [INF] Calculated investment amount: 67.15.
2025-05-19 21:34:49.501 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 29.
2025-05-19 21:34:49.533 +05:30 [INF] Calculated investment amount: 23.59.
2025-05-19 21:34:49.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.32, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 29.
2025-05-19 21:34:49.597 +05:30 [INF] Calculated investment amount: 30.64.
2025-05-19 21:34:49.612 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.95, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 29.
2025-05-19 21:34:49.634 +05:30 [INF] Calculated investment amount: 15.55.
2025-05-19 21:34:49.649 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.55, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 29.
2025-05-19 21:34:49.675 +05:30 [INF] Calculated investment amount: 17.98.
2025-05-19 21:34:49.691 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 29.
2025-05-19 21:34:49.712 +05:30 [INF] Calculated investment amount: 130.22.
2025-05-19 21:34:49.726 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 29.
2025-05-19 21:34:49.753 +05:30 [INF] Calculated investment amount: 131.97.
2025-05-19 21:34:49.768 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 29.
2025-05-19 21:34:49.786 +05:30 [INF] Calculated investment amount: 101.65.
2025-05-19 21:34:49.800 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 29.
2025-05-19 21:34:49.832 +05:30 [INF] Calculated investment amount: 97.82.
2025-05-19 21:34:49.848 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 29.
2025-05-19 21:34:49.870 +05:30 [INF] Calculated investment amount: 109.23.
2025-05-19 21:34:49.885 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 29.
2025-05-19 21:34:49.914 +05:30 [INF] Calculated investment amount: 107.
2025-05-19 21:34:49.929 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 29.
2025-05-19 21:34:49.956 +05:30 [INF] Calculated investment amount: 25.03.
2025-05-19 21:34:49.971 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 29.
2025-05-19 21:34:50.004 +05:30 [INF] Calculated investment amount: 30.44.
2025-05-19 21:34:50.020 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 29.
2025-05-19 21:34:50.051 +05:30 [INF] Calculated investment amount: 11.06.
2025-05-19 21:34:50.068 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 29.
2025-05-19 21:34:50.097 +05:30 [INF] Calculated investment amount: 9.2.
2025-05-19 21:34:50.112 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 29.
2025-05-19 21:34:50.135 +05:30 [INF] Calculated investment amount: 15.49.
2025-05-19 21:34:50.155 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 29.
2025-05-19 21:34:50.173 +05:30 [INF] Calculated investment amount: 18.98.
2025-05-19 21:34:50.189 +05:30 [INF] Skipping sub-asset Liquid Mutual Funds in asset class cash due to zero percentage split.
2025-05-19 21:34:50.206 +05:30 [INF] Skipping sub-asset Savings Acc in asset class cash due to zero percentage split.
2025-05-19 21:34:50.224 +05:30 [INF] Skipping sub-asset T. Bill in asset class cash due to zero percentage split.
2025-05-19 21:34:50.242 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 29.
2025-05-19 21:34:50.274 +05:30 [INF] Calculated investment amount: 15.27.
2025-05-19 21:34:50.291 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 29.
2025-05-19 21:34:50.318 +05:30 [INF] Calculated investment amount: 13.96.
2025-05-19 21:34:50.333 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 29.
2025-05-19 21:34:50.363 +05:30 [INF] Calculated investment amount: 18.3.
2025-05-19 21:34:50.380 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 29.
2025-05-19 21:34:50.408 +05:30 [INF] Calculated investment amount: 16.85.
2025-05-19 21:34:50.424 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 29.
2025-05-19 21:34:50.446 +05:30 [INF] Calculated investment amount: 11.42.
2025-05-19 21:34:50.469 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 29.
2025-05-19 21:34:50.500 +05:30 [INF] Calculated investment amount: 12.23.
2025-05-19 21:34:50.535 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-19 21:34:50.550 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:34:50.578 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 1220.8214ms
2025-05-19 21:34:50.607 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-19 21:34:50.618 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=29 - 200 null application/json; charset=utf-8 1377.2973ms
2025-05-19 21:34:50.777 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:34:50.792 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:34:50.937 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:50.990 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 212.8431ms
2025-05-19 21:34:50.980 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:51.058 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 21:34:51.077 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 285.3215ms
2025-05-19 21:34:51.114 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:51.150 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 21:34:51.162 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:34:51.188 +05:30 [INF] CORS policy execution successful.
2025-05-19 21:34:51.200 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 21:34:51.213 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:34:51.245 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:34:51.246 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 21:34:51.266 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 29.1435ms
2025-05-19 21:34:51.292 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 21:34:51.309 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 21:34:51.336 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 21:34:51.340 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 282.1409ms
2025-05-19 21:34:51.354 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 21:34:51.415 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 122.8421ms
2025-05-19 21:34:51.434 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 21:34:51.451 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 300.9403ms
2025-05-19 22:00:19.623 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:00:19.623 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:00:19.714 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:00:19.747 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:00:19.772 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 149.5091ms
2025-05-19 22:00:19.779 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 156.5652ms
2025-05-19 22:00:19.875 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:00:19.921 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:00:19.963 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:00:19.999 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:00:20.005 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:00:20.018 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:00:20.038 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:00:20.059 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:00:20.096 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:00:20.137 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:00:20.139 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:00:20.151 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:00:20.174 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 57.6648ms
2025-05-19 22:00:20.189 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 93.9641ms
2025-05-19 22:00:20.204 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:00:20.213 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:00:20.220 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 299.4826ms
2025-05-19 22:00:20.235 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 360.3302ms
2025-05-19 22:04:50.547 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:04:50.586 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:04:50.645 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:04:50.799 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:04:50.810 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 263.0178ms
2025-05-19 22:04:50.908 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 321.9187ms
2025-05-19 22:04:51.007 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:04:51.055 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:04:51.092 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:04:51.138 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:04:51.146 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:04:51.155 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:04:51.175 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:04:51.192 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:04:51.218 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:04:51.297 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:04:51.345 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:04:51.381 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 120.5043ms
2025-05-19 22:04:51.399 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:04:51.424 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:04:51.452 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 233.9537ms
2025-05-19 22:04:51.458 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 402.9085ms
2025-05-19 22:04:51.495 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:04:51.553 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 546.085ms
2025-05-19 22:05:51.713 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:05:51.762 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:05:51.794 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:05:51.912 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:05:51.927 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 213.5966ms
2025-05-19 22:05:51.935 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 172.9772ms
2025-05-19 22:05:51.976 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:05:52.008 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:05:52.043 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:05:52.096 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:05:52.111 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:05:52.118 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:05:52.141 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:05:52.150 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:05:52.177 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:05:52.223 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:05:52.224 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:05:52.241 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:05:52.265 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 56.9646ms
2025-05-19 22:05:52.278 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 101.1179ms
2025-05-19 22:05:52.296 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:05:52.313 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:05:52.328 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 320.1066ms
2025-05-19 22:05:52.344 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 368.5218ms
2025-05-19 22:07:42.535 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:07:42.613 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:07:42.739 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:07:42.789 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 253.9303ms
2025-05-19 22:07:42.776 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:07:43.043 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:07:43.054 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 441.1417ms
2025-05-19 22:07:43.083 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:07:43.116 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:07:43.122 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:07:43.152 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:07:43.165 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:07:43.177 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:07:43.212 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:07:43.215 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:07:43.233 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 33.8042ms
2025-05-19 22:07:43.256 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:07:43.269 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:07:43.280 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:07:43.291 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 247.2535ms
2025-05-19 22:07:43.304 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:07:43.384 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 127.7326ms
2025-05-19 22:07:43.393 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:07:43.409 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 293.325ms
2025-05-19 22:48:18.947 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:48:18.948 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:48:18.954 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:18.957 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:18.958 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.5591ms
2025-05-19 22:48:18.958 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.7655ms
2025-05-19 22:48:18.965 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:48:18.970 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:48:18.974 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:18 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:48:18.978 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:18 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:48:18.982 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:18 PM'.
2025-05-19 22:48:18.985 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:18 PM'.
2025-05-19 22:48:18.987 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:18.989 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:18.990 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:48:18.991 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:48:18.992 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:48:18.993 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:48:18.995 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:48:19.001 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:48:19.002 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:48:19.002 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:48:19.004 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.7567ms
2025-05-19 22:48:19.005 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 9.4433ms
2025-05-19 22:48:19.006 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:48:19.007 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:48:19.008 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 37.9576ms
2025-05-19 22:48:19.009 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 44.1196ms
2025-05-19 22:48:25.269 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:48:25.270 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:48:25.273 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:25.276 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:25.276 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 7.0893ms
2025-05-19 22:48:25.277 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.2941ms
2025-05-19 22:48:25.280 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:48:25.286 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:48:25.288 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:25 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:48:25.291 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:25 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:48:25.293 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:25 PM'.
2025-05-19 22:48:25.295 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:25 PM'.
2025-05-19 22:48:25.296 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:25.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:48:25.297 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:25.301 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:48:25.302 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:48:25.305 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:48:25.306 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:48:25.307 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:48:25.309 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:48:25.309 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:48:25.310 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 5.2181ms
2025-05-19 22:48:25.311 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.2856ms
2025-05-19 22:48:25.312 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:48:25.313 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:48:25.314 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 33.8111ms
2025-05-19 22:48:25.317 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 31.2614ms
2025-05-19 22:48:29.227 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:48:29.228 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:48:29.232 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:48:29.234 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:48:29.236 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:29 PM'.
2025-05-19 22:48:29.237 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:18:29 PM'.
2025-05-19 22:48:29.238 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:29.239 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:48:29.240 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:48:29.242 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:48:29.244 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:48:29.245 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:48:29.248 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:48:29.249 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:48:29.250 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.6816ms
2025-05-19 22:48:29.252 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:48:29.252 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:48:29.253 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:48:29.254 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 26.7071ms
2025-05-19 22:48:29.255 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.2893ms
2025-05-19 22:48:29.261 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:48:29.263 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 34.6274ms
2025-05-19 22:49:00.227 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:00.230 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:00.235 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:00.238 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:00.239 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.1892ms
2025-05-19 22:49:00.239 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 9.5011ms
2025-05-19 22:49:00.242 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:00.248 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:00.251 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:00.255 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:00.258 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:00 PM'.
2025-05-19 22:49:00.259 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:00 PM'.
2025-05-19 22:49:00.260 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:00.262 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:00.263 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:00.263 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:00.264 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:49:00.265 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:49:00.266 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:49:00.269 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:00.269 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:49:00.270 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.2983ms
2025-05-19 22:49:00.271 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:00.272 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:00.273 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.0549ms
2025-05-19 22:49:00.275 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 26.8428ms
2025-05-19 22:49:00.276 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:00.280 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 38.1274ms
2025-05-19 22:49:23.942 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:23.945 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:23.949 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:23.952 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:23.953 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.2114ms
2025-05-19 22:49:23.954 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 9.154ms
2025-05-19 22:49:23.970 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:23.964 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:23.974 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:23.979 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:23.984 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:23 PM'.
2025-05-19 22:49:23.986 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:23 PM'.
2025-05-19 22:49:23.987 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:23.988 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:23.989 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:23.992 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:23.993 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:49:23.994 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:49:23.999 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:23.999 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:49:24.002 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.7764ms
2025-05-19 22:49:24.003 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:49:24.004 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:24.004 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:24.005 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 35.7637ms
2025-05-19 22:49:24.008 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.6494ms
2025-05-19 22:49:24.012 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:24.013 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 48.2028ms
2025-05-19 22:49:33.306 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:33.307 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:33.312 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:33.315 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:33.315 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.6658ms
2025-05-19 22:49:33.316 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.7506ms
2025-05-19 22:49:33.322 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:33.325 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:33.327 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:33 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:33.331 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:33 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:33.333 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:33 PM'.
2025-05-19 22:49:33.336 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:33 PM'.
2025-05-19 22:49:33.338 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:33.339 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:33.340 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:33.340 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:33.341 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:49:33.342 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:49:33.343 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:49:33.345 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:33.346 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:49:33.347 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.8707ms
2025-05-19 22:49:33.348 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:33.349 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:33.350 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.0043ms
2025-05-19 22:49:33.351 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 26.0096ms
2025-05-19 22:49:33.353 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:33.357 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 35.4378ms
2025-05-19 22:49:37.231 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:37.231 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:37.236 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:37 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:37.240 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:37 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:37.241 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:37 PM'.
2025-05-19 22:49:37.243 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:37 PM'.
2025-05-19 22:49:37.244 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:37.244 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:37.245 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:37.246 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:37.248 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:49:37.247 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:49:37.252 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:49:37.256 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:37.257 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:49:37.261 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 6.2969ms
2025-05-19 22:49:37.262 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:37.264 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:37.267 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.5823ms
2025-05-19 22:49:37.268 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 36.3925ms
2025-05-19 22:49:37.269 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:37.275 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 43.9758ms
2025-05-19 22:49:44.768 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:44.768 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:44.774 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:44.777 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:44.779 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.9628ms
2025-05-19 22:49:44.780 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.5175ms
2025-05-19 22:49:44.785 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-19 22:49:44.791 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-19 22:49:44.795 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:44 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:44.800 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:44 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-19 22:49:44.804 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:44 PM'.
2025-05-19 22:49:44.808 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/19/2025 5:04:34 PM', Current time (UTC): '5/19/2025 5:19:44 PM'.
2025-05-19 22:49:44.809 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:44.811 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:49:44.812 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:44.812 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:44.813 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-19 22:49:44.816 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-19 22:49:44.818 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-19 22:49:44.820 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:44.820 +05:30 [INF] Final allocation JSON read successfully.
2025-05-19 22:49:44.822 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.6222ms
2025-05-19 22:49:44.823 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:49:44.824 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-19 22:49:44.825 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.0973ms
2025-05-19 22:49:44.826 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 34.6382ms
2025-05-19 22:49:44.827 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-19 22:49:44.833 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 48.265ms
2025-05-19 22:59:52.136 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 22:59:52.143 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:59:52.145 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 8.4166ms
2025-05-19 22:59:52.150 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 22:59:52.152 +05:30 [INF] CORS policy execution successful.
2025-05-19 22:59:52.152 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 22:59:52.153 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 22:59:52.232 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 22:59:52.235 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 80.2939ms
2025-05-19 22:59:52.237 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 22:59:52.238 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 88.0386ms
2025-05-19 23:00:52.791 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 23:00:52.795 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:00:52.796 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 5.3494ms
2025-05-19 23:00:52.800 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 23:00:52.802 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:00:52.803 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 23:00:52.804 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 23:00:52.881 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 23:00:52.886 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 80.8413ms
2025-05-19 23:00:52.889 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 23:00:52.890 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 90.0876ms
2025-05-19 23:49:03.893 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-19 23:49:03.901 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:49:03.901 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 8.299ms
2025-05-19 23:49:03.904 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-19 23:49:03.913 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:49:03.914 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 23:49:03.915 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-19 23:49:03.995 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-19 23:49:03.999 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 82.659ms
2025-05-19 23:49:04.000 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-19 23:49:04.001 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 96.7981ms
2025-05-19 23:49:07.583 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:49:07.589 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:49:07.591 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 7.2566ms
2025-05-19 23:49:07.595 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:49:07.598 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:49:07.598 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:49:07.604 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:49:07.616 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:49:07.620 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 9.3589ms
2025-05-19 23:49:07.625 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:49:07.626 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 30.4915ms
2025-05-19 23:50:04.662 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:50:04.669 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:50:04.672 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 10.5944ms
2025-05-19 23:50:04.680 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:50:04.682 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:50:04.683 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:50:04.683 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:50:04.690 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:50:04.693 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 5.0914ms
2025-05-19 23:50:04.695 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:50:04.695 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 15.1843ms
2025-05-19 23:50:53.273 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:50:53.280 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:50:53.281 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 7.7639ms
2025-05-19 23:50:53.284 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:50:53.286 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:50:53.287 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:50:53.288 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:50:53.291 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:50:53.298 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 9.1114ms
2025-05-19 23:50:53.300 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:50:53.302 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 17.8228ms
2025-05-19 23:54:07.988 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:54:07.994 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:54:07.996 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 8.1054ms
2025-05-19 23:54:08.000 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:54:08.003 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:54:08.004 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:54:08.005 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:54:08.009 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:54:08.010 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.0004ms
2025-05-19 23:54:08.012 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:54:08.013 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 12.1454ms
2025-05-19 23:54:12.401 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:54:12.409 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:54:12.411 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:54:12.413 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:54:12.416 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:54:12.418 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.8141ms
2025-05-19 23:54:12.420 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:54:12.421 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.396ms
2025-05-19 23:55:08.274 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:55:08.280 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:55:08.281 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 6.3823ms
2025-05-19 23:55:08.285 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:55:08.292 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:55:08.293 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:55:08.295 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:55:08.298 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:55:08.300 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.6704ms
2025-05-19 23:55:08.303 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:55:08.305 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.7754ms
2025-05-19 23:55:12.274 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:55:12.279 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:55:12.280 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:55:12.280 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:55:12.283 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:55:12.287 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 4.6407ms
2025-05-19 23:55:12.292 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:55:12.293 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.2378ms
2025-05-19 23:55:18.937 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:55:18.944 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:55:18.945 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 7.6936ms
2025-05-19 23:55:18.948 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:55:18.951 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:55:18.952 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:55:18.953 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:55:18.956 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:55:18.961 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 6.7265ms
2025-05-19 23:55:18.963 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:55:18.964 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 16.0132ms
2025-05-19 23:56:51.309 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:56:51.315 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:56:51.316 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 6.543ms
2025-05-19 23:56:51.319 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:56:51.326 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:56:51.328 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:51.329 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:56:51.337 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:56:51.339 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.5682ms
2025-05-19 23:56:51.340 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:51.341 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 21.2378ms
2025-05-19 23:56:52.243 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:56:52.248 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:56:52.249 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:52.251 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:56:52.254 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:56:52.256 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.8245ms
2025-05-19 23:56:52.258 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:52.259 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 15.8257ms
2025-05-19 23:56:55.257 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:56:55.262 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:56:55.263 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:55.263 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:56:55.268 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:56:55.270 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.8283ms
2025-05-19 23:56:55.272 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:55.274 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 16.8358ms
2025-05-19 23:56:59.239 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:56:59.245 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:56:59.247 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 8.0178ms
2025-05-19 23:56:59.258 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:56:59.263 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:56:59.264 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:59.265 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:56:59.269 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:56:59.276 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 8.6735ms
2025-05-19 23:56:59.279 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:56:59.280 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 22.0062ms
2025-05-19 23:57:49.333 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:57:49.338 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:57:49.339 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 5.6967ms
2025-05-19 23:57:49.348 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:57:49.352 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:57:49.355 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:57:49.357 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:57:49.361 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:57:49.362 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.4122ms
2025-05-19 23:57:49.364 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:57:49.365 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 16.6046ms
2025-05-19 23:57:53.399 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:57:53.407 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:57:53.408 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:57:53.410 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:57:53.414 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:57:53.416 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.607ms
2025-05-19 23:57:53.418 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:57:53.419 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.1957ms
2025-05-19 23:58:13.255 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:13.262 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:13.264 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 9.1319ms
2025-05-19 23:58:13.272 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:13.275 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:13.276 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:13.277 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:13.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:13.285 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 7.0345ms
2025-05-19 23:58:13.286 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:13.287 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 15.7017ms
2025-05-19 23:58:24.297 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:24.304 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:24.305 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 7.8749ms
2025-05-19 23:58:24.308 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:24.310 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:24.311 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:24.312 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:24.315 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:24.323 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 8.8112ms
2025-05-19 23:58:24.324 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:24.326 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 17.5623ms
2025-05-19 23:58:40.248 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:40.254 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:40.255 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 6.5218ms
2025-05-19 23:58:40.257 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:40.259 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:40.263 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:40.265 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:40.270 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:40.272 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 4.4092ms
2025-05-19 23:58:40.275 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:40.276 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.1247ms
2025-05-19 23:58:43.264 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:43.271 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:43.271 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:43.272 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:43.276 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:43.278 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.5072ms
2025-05-19 23:58:43.279 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:43.280 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 15.7953ms
2025-05-19 23:58:46.236 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:46.243 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:46.244 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 8.3292ms
2025-05-19 23:58:46.248 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:46.251 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:46.252 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:46.258 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:46.263 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:46.264 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.3279ms
2025-05-19 23:58:46.266 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:46.267 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.2959ms
2025-05-19 23:58:47.009 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:47.013 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:47.014 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:47.016 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:47.025 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:47.027 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.5745ms
2025-05-19 23:58:47.029 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:47.030 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 21.0148ms
2025-05-19 23:58:53.764 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:53.770 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:53.772 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 8.1551ms
2025-05-19 23:58:53.777 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:53.781 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:53.782 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:53.784 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:53.791 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:53.793 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.6498ms
2025-05-19 23:58:53.794 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:53.795 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 18.1016ms
2025-05-19 23:58:58.410 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:58:58.415 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:58:58.416 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:58.417 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:58:58.422 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:58:58.426 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 6.1578ms
2025-05-19 23:58:58.429 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:58:58.430 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.6995ms
2025-05-19 23:59:07.237 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:07.244 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:07.246 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 9.3604ms
2025-05-19 23:59:07.250 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:07.253 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:07.254 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:07.255 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:59:07.257 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:59:07.262 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 6.3002ms
2025-05-19 23:59:07.264 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:07.266 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 16.0577ms
2025-05-19 23:59:08.230 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:08.235 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:08.235 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:08.236 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:59:08.239 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:59:08.241 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.4047ms
2025-05-19 23:59:08.243 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:08.249 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.2482ms
2025-05-19 23:59:16.614 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:16.620 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:16.621 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 7.2087ms
2025-05-19 23:59:16.627 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:16.635 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:16.635 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:16.636 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:59:16.638 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:59:16.640 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.5274ms
2025-05-19 23:59:16.641 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:16.642 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 14.9204ms
2025-05-19 23:59:23.230 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:23.237 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:23.239 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 8.9535ms
2025-05-19 23:59:23.242 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:23.245 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:23.246 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:23.248 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:59:23.254 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:59:23.255 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.5435ms
2025-05-19 23:59:23.257 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:23.257 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 14.9004ms
2025-05-19 23:59:33.720 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:33.725 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:33.726 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 5.6737ms
2025-05-19 23:59:33.729 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-19 23:59:33.732 +05:30 [INF] CORS policy execution successful.
2025-05-19 23:59:33.733 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:33.734 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-19 23:59:33.743 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-19 23:59:33.745 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.9596ms
2025-05-19 23:59:33.746 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-19 23:59:33.747 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 17.1062ms
